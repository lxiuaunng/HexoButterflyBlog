<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git</title>
      <link href="/2024/03/29/Git/"/>
      <url>/2024/03/29/Git/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Git"><a href="#1-Git" class="headerlink" title="1. Git"></a>1. Git</h1><h2 id="1-1-创建ssh-key"><a href="#1-1-创建ssh-key" class="headerlink" title="1.1 创建ssh key"></a>1.1 创建ssh key</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;lxiuaunng@gmail.com&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">回车后让你命名私钥文件名，回车默认为【id_rsa】,这里我重命名为【id_rsa_111】</span> </span><br><span class="line">ssh-keygen -t rsa -C &quot;222@gmail.com&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同上重命名为【id_rsa_222】</span>   </span><br></pre></td></tr></table></figure><p>将<code>.pub</code>后缀文件内容添加到<code>GitHub</code>或<code>gitee</code>的ssh管理库中。</p><h2 id="1-2-拉取与创建仓库"><a href="#1-2-拉取与创建仓库" class="headerlink" title="1.2 拉取与创建仓库"></a>1.2 拉取与创建仓库</h2><p>有几种方式获取一个 Git 仓库。 一种是从网络上或者其他地方拷贝一个现有的仓库，另一种就是在一个目录中创建一个新的仓库。</p><ol><li><p>创建一个本地仓库：<code>git init</code>就可以将一个目录转变成一个 Git 仓库。</p></li><li><p>克隆一个远程仓库：<code>git clone git@github.com:&lt;用户名&gt;/&lt;仓库名&gt;.git &lt;当前目录下的某个文件夹&gt;</code>。</p><p><code>git clone</code> 实际上是一个封装了其他几个命令的命令。 它创建了一个新目录，切换到新的目录，然后 <code>git init</code> 来初始化一个空的 Git 仓库， 然后为你指定的 URL 添加一个（默认名称为 <code>origin</code> 的）远程仓库（<code>git remote add</code>），再针对远程仓库执行 <code>git fetch</code>，最后通过 <code>git checkout</code> 将远程仓库的最新提交检出到本地的工作目录。</p></li></ol><h2 id="1-3-全局与本地配置"><a href="#1-3-全局与本地配置" class="headerlink" title="1.3 全局与本地配置"></a>1.3 全局与本地配置</h2><ol><li><p>全局配置</p><p>全局配置对所有项目的当前用户可用，并存储在<code>~/.gitconfig</code>。</p><p>您可以通过传递选项使 git 从<strong>Global</strong>读取和写入<code>--global</code>。</p><ol><li><p>全局配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">名称（自定义）</span></span><br><span class="line">git config --global user.name &quot;lxiuaunng&quot;  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">邮箱（建议使用最常用的GitHub的账号的邮箱）</span></span><br><span class="line">git config --global user.email &quot;lxiuaunng@gmail.com&quot;   </span><br></pre></td></tr></table></figure></li><li><p>删除全局配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset user.name</span><br><span class="line">git config --global --unset user.email</span><br></pre></td></tr></table></figure></li></ol></li><li><p>本地配置</p><p>本地配置仅适用于当前存储库。您可以通过传递选项使 git 从<strong>本地</strong>读取和写入<code>--local</code>。</p><p>一般不会用，除非你电脑上有多个GitHub账号需要配置，每个账号下又有各自的仓库，此时就可以用到本地配置，防止在【<a href="mailto:&#49;&#50;&#x33;&#x40;&#x71;&#113;&#x2e;&#x63;&#111;&#109;">&#49;&#50;&#x33;&#x40;&#x71;&#113;&#x2e;&#x63;&#111;&#109;</a>】账号的仓库中留下【<a href="mailto:&#x34;&#x35;&#54;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;">&#x34;&#x35;&#54;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a>】的提交信息，甚至提交失败。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">首先要进入项目的根目录</span></span><br><span class="line">cd /xxx/project1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">名称（自定义）</span></span><br><span class="line">git config --local user.name &quot;沐洹&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">邮箱（自定义）</span></span><br><span class="line">git config --local user.email &quot;456@gmail.com&quot; </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--<span class="built_in">local</span>也可以不写，也是同样的效果</span></span><br><span class="line">git config user.name &quot;沐洹&quot;</span><br><span class="line">git config user.email &quot;456@gmail.com&quot; </span><br></pre></td></tr></table></figure></li></ol><h2 id="1-4-配置config文件（选）"><a href="#1-4-配置config文件（选）" class="headerlink" title="1.4 配置config文件（选）"></a>1.4 配置config文件（选）</h2><p>该文件在<code>~/.ssh/config</code>，可以使多个GitHub账号在同一电脑上共存。</p><p>注意：一定要为每个仓库设置<strong>本地配置</strong>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gitee</span></span><br><span class="line">Host gitee.com # 这是一个别名</span><br><span class="line">    HostName gitee.com  # 这是远程仓库的域名 </span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_gitee # 这个账号对应私钥的地址</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">github</span></span><br><span class="line">Host github.com # 这是一个别名</span><br><span class="line">    HostName github.com  # 这是远程仓库的域名 </span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_au # 这个账号对应私钥的地址</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">github</span></span><br><span class="line">Host lxiuaanng.github.com # 这是一个别名</span><br><span class="line">    HostName github.com  # 这是远程仓库的域名 </span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_aa # 这个账号对应私钥的地址</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">github</span></span><br><span class="line">Host hellolxuan.github.com # 这是一个别名</span><br><span class="line">    HostName github.com  # 这是远程仓库的域名 </span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_au # 这个账号对应私钥的地址</span><br></pre></td></tr></table></figure><p>进行过以上配置后我们原来的ssh git的地址需要稍作修改，如：</p><p>原有地址 ：<a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#116;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#x63;&#x6f;&#x6d;</a>:&lt;用户名&gt;&#x2F;&lt;仓库名&gt;.git</p><p>现在地址：git@&lt;别名&gt;:&lt;用户名&gt;&#x2F;&lt;仓库名&gt;.git</p><p>这样 ssh 在连接时就可以区别不同的账号了。</p><h2 id="1-5-测试连接"><a href="#1-5-测试连接" class="headerlink" title="1.5 测试连接"></a>1.5 测试连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@&lt;别名&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">有别名的写别名，没别名的写【github.com】就行。返回<span class="string">&quot;Hi xxx ...&quot;</span>则说明成功</span></span><br></pre></td></tr></table></figure><h2 id="1-6-Git-操作流程"><a href="#1-6-Git-操作流程" class="headerlink" title="1.6 Git 操作流程"></a>1.6 Git 操作流程</h2><p><strong>说明：</strong></p><ul><li>workspace：工作区</li><li>staging area：暂存区&#x2F;缓存区</li><li>local repository：版本库或本地仓库</li><li>remote repository：远程仓库</li></ul><p><img src="/../images/Git/git-command.jpg" alt="git-command"></p><p>一般修改文件后提交就三个命令：<code>git add .</code>、<code>git commit -m &quot;&quot;</code>、<code>git push -u origin main</code></p><p>基本操作：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>git init</code></td><td>初始化仓库</td></tr><tr><td></td><td></td></tr><tr><td><code>git clone</code></td><td>拷贝一份远程仓库，也就是下载一个项目</td></tr><tr><td><code>git add .</code></td><td>添加文件到暂存区</td></tr><tr><td><code>git status</code></td><td>查看仓库当前的状态，显示有变更的文件</td></tr><tr><td><code>git diff</code></td><td>比较文件的不同，即暂存区和工作区的差异</td></tr><tr><td><code>git commit -m &quot;修改xxx文件&quot;</code></td><td>提交暂存区到本地仓库，并注释</td></tr><tr><td><code>git reset</code></td><td>回退版本</td></tr><tr><td><code>git rm</code></td><td>将文件从暂存区和工作区中删除</td></tr><tr><td><code>git mv</code></td><td>移动或重命名工作区文件</td></tr><tr><td><code>git checkout</code></td><td>分支切换</td></tr><tr><td><code>git switch</code></td><td>更清晰地切换分支</td></tr><tr><td><code>git restore</code></td><td>恢复或撤销文件的更改</td></tr></tbody></table><p>提交日志：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>git log</code></td><td>查看历史提交记录</td></tr><tr><td><code>git blame &lt;file&gt;</code></td><td>以列表形式查看指定文件的历史修改记录</td></tr></tbody></table><p>远程操作：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>git remote</code> -v</td><td>查看关联的远程库</td></tr><tr><td><code>git remote remove origin</code></td><td>取消关联的远程库</td></tr><tr><td><code>git remote add origin</code> <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#x6d;</a>:&lt;用户名&gt;&#x2F;&lt;仓库名&gt;.git</td><td>关联远程仓库</td></tr><tr><td><code>git remote set-url origin</code> git@&lt;别名&gt;:&lt;用户名&gt;&#x2F;&lt;仓库名&gt;.git</td><td>修改https通道为ssh</td></tr><tr><td><code>git fetch</code></td><td>从远程获取代码库</td></tr><tr><td><code>git pull</code></td><td>下载远程代码并合并</td></tr><tr><td><code>git push -u origin main</code></td><td>上传远程代码并合并</td></tr><tr><td><code>git push -f origin main</code></td><td>强推，删除远仓所有文件，将本地文件全推上去，慎用！！</td></tr></tbody></table><h1 id="2-报错"><a href="#2-报错" class="headerlink" title="2. 报错"></a>2. 报错</h1><h2 id="2-1-git-error-invalid-path"><a href="#2-1-git-error-invalid-path" class="headerlink" title="2.1 git error:invalid path"></a>2.1 git error:invalid path</h2><p><code>git pull</code> 的时候报错 <code>git error:invalid path</code></p><p>原因：</p><blockquote><p>源代码是在linux上编写的，但是在Windows上拉取代码却出现了问题。那么问题很可能是不通系统下文件属性或策略导致的。然后在Git文档上找到一个关于NTFS保护机制的配置：</p><p>core.protectNTFS：</p><p>If set to true, do not allow checkout of paths that would cause problems with the NTFS filesystem, e.g. conflict with 8.3 “short” names. Defaults to true on Windows, and false elsewhere.</p><p>Windows系统下默认值是true，也就是说不符合NTFS策略的文件不会被签出，设置为false后可以关闭保护机制。</p></blockquote><p>解决办法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.protectNTFS false</span><br></pre></td></tr></table></figure><p>进入仓库目录打开Git Bash：</p><p>再重新pull原分支：</p><h2 id="2-2-Permission-denied-publickey"><a href="#2-2-Permission-denied-publickey" class="headerlink" title="2.2 Permission denied (publickey)"></a>2.2 Permission denied (publickey)</h2><p><code>git clone</code> 或 <code>ssh -T git@github.com</code> 的时候报错<code>git@github.com: Permission denied (publickey)</code></p><p>解决办法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent -s</span><br></pre></td></tr></table></figure><p>然后提示：</p><blockquote><p>SSH_AUTH_SOCK&#x3D;&#x2F;tmp&#x2F;ssh-kHOBLXgTAKU7&#x2F;agent.593; export SSH_AUTH_SOCK; SSH_AGENT_PID&#x3D;594; export SSH_AGENT_PID;<br>echo Agent pid 594;</p></blockquote><p>接着再输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><ul><li><p>注意，如果出现错误提示：</p><blockquote><p>Could not open a connection to your authentication agent.</p></blockquote><p>请执行命令：<code>eval ssh-agent -s</code>后，继续执行命令 <code>ssh-add ~/.ssh/id_rsa</code>，这时候一般OK了。</p></li></ul><p>最后将 id_rsa.pub 的内容复制到GitHub账号，输入<code>ssh -T git@github.com</code>测试，出现 <code>Hi xxx</code>则成功。</p><p><img src="/../images/To%20Be%20Continued.jpg" alt="To Be Continued"></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024山西省考申论押题</title>
      <link href="/2024/03/14/2024%E5%B1%B1%E8%A5%BF%E7%9C%81%E8%80%83%E7%94%B3%E8%AE%BA%E6%8A%BC%E9%A2%98/"/>
      <url>/2024/03/14/2024%E5%B1%B1%E8%A5%BF%E7%9C%81%E8%80%83%E7%94%B3%E8%AE%BA%E6%8A%BC%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="1-金词金句"><a href="#1-金词金句" class="headerlink" title="1. 金词金句"></a>1. 金词金句</h2><div class="row">    <embed src="/images/2024山西省考申论押题/【金词金句】24.3.16省考金词金句-张远山.docx..pdf" width="100%" height="550" type="application/pdf"></div><h2 id="2-押题卷-一"><a href="#2-押题卷-一" class="headerlink" title="2. 押题卷 一"></a>2. 押题卷 一</h2><div class="row">    <embed src="/images/2024山西省考申论押题/2024山西省考《申论》押题卷（一）（省市）.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="3-押题卷-二"><a href="#3-押题卷-二" class="headerlink" title="3. 押题卷 二"></a>3. 押题卷 二</h2><div class="row">    <embed src="/images/2024山西省考申论押题/2024山西省考《申论》预测卷（二）（省市、县乡）.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="4-押题卷-三"><a href="#4-押题卷-三" class="headerlink" title="4. 押题卷 三"></a>4. 押题卷 三</h2><div class="row">    <embed src="/images/2024山西省考申论押题/2024山西省考《申论》押题卷（三）（省市、县乡）.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="5-押题卷-四"><a href="#5-押题卷-四" class="headerlink" title="5. 押题卷 四"></a>5. 押题卷 四</h2><div class="row">    <embed src="/images/2024山西省考申论押题/2024山西省考《申论》押题卷（四）（县乡）.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公考题之判断推理</title>
      <link href="/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/"/>
      <url>/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-图形推理（国10，省5-10）"><a href="#1-图形推理（国10，省5-10）" class="headerlink" title="1. 图形推理（国10，省5-10）"></a>1. 图形推理（国10，省5-10）</h1><p>**<font color='red'>汉字</font>**：笔画数、第一笔画、相同偏旁、封闭、上下左右结构、横线和竖线数量</p><p><font color='red'><strong>数字</strong></font>：封闭、曲直线</p><p>**<font color='red'>字母</font>**：笔画、封闭、直曲量</p><p>**<font color='red'>九宫格</font>**：先横后竖</p><p>**<font color='red'>粗线条、生化话</font>**：面、部分数</p><p><strong><font color='red'>对称、曲直、封闭、交点、笔画、元素、角、相交</font></strong></p><h2 id="1-1-位置规律"><a href="#1-1-位置规律" class="headerlink" title="1.1 位置规律"></a>1.1 位置规律</h2><p><font color='red'>图形特征：元素组成基本相同</font></p><h3 id="1-1-1-平移"><a href="#1-1-1-平移" class="headerlink" title="1.1.1 平移"></a>1.1.1 平移</h3><ol><li>方向：直线（上下、左右、斜对角线），绕圈（顺时针、逆时针） </li><li>常见步数：恒定、递增</li></ol><h3 id="1-1-2-旋转、翻转"><a href="#1-1-2-旋转、翻转" class="headerlink" title="1.1.2 旋转、翻转"></a>1.1.2 旋转、翻转</h3><p>旋转： </p><ol><li>方向：顺时针、逆时针 </li><li>常见角度：45°、90°、180°等</li></ol><p>翻转： </p><ol><li>左右翻转：两图沿竖轴对称</li><li>上下翻转：两图沿横轴对称</li></ol><h3 id="1-1-3-思维导图"><a href="#1-1-3-思维导图" class="headerlink" title="1.1.3 思维导图"></a>1.1.3 思维导图</h3><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.1_1.jpg" alt="2.判断推理_1.1_1"></p><h2 id="1-2-样式规律（必考，多黑白）"><a href="#1-2-样式规律（必考，多黑白）" class="headerlink" title="1.2 样式规律（必考，多黑白）"></a>1.2 样式规律（必考，多黑白）</h2><p><font color='red'>图形特征：元素组成相似</font></p><h3 id="1-2-1-加减同异"><a href="#1-2-1-加减同异" class="headerlink" title="1.2.1 加减同异"></a>1.2.1 加减同异</h3><p>图形特征：元素组成相似，且相同线条重复出现 </p><p>考点： </p><ol><li>相加、相减 </li><li><font color='red'>求异：去掉相同线条，保留不同线条</font> </li><li>求同：去掉不同线条，保留相同线条</li></ol><h3 id="1-2-2-黑白运算"><a href="#1-2-2-黑白运算" class="headerlink" title="1.2.2 黑白运算"></a>1.2.2 黑白运算</h3><p>图形特征：图形轮廓和分割区域相同，且黑块数量不成规律 </p><p>解题方法：按照对应位置进行“黑白”相加运算，将所得规律应用于所求图形</p><p><font color='red'>若是题中两个内容数量不对等，可以考虑相邻做加减</font></p><h3 id="1-2-3-遍历"><a href="#1-2-3-遍历" class="headerlink" title="1.2.3 遍历"></a>1.2.3 遍历</h3><p>各图形组成元素相似，且某些元素或特征多次书现在各个图形中时，优先考虑遍历</p><h3 id="1-2-4-思维导图"><a href="#1-2-4-思维导图" class="headerlink" title="1.2.4 思维导图"></a>1.2.4 思维导图</h3><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.2_1.jpg" alt="2.判断推理_1.2_1"></p><h2 id="1-3-属性规律（1-2题）"><a href="#1-3-属性规律（1-2题）" class="headerlink" title="1.3 属性规律（1-2题）"></a>1.3 属性规律（1-2题）</h2><p>图形特征：<font color='red'>元素组成不相同、不相似</font></p><h3 id="1-3-1-对称性"><a href="#1-3-1-对称性" class="headerlink" title="1.3.1 对称性"></a>1.3.1 对称性</h3><p>考点：轴线穿过<font color='red'><strong>几个交点几个线几个面、有几个轴线、轴线是否在以固定角度旋转、轴线的夹角是否有规律</strong></font></p><ol><li>轴对称（含义：图形沿着一条直线折叠后，直线两边的部分能够完全重合） 特征图：“等腰”图形</li><li>中心对称（含义：图形旋转 180°后和原图形完全重合） 特征图：平行四边形，“S”“N”“Z”及其变形图等 </li><li>轴对称 + 中心对称 特征图：有两条相互垂直的对称轴的图形</li></ol><h3 id="1-3-2-曲直性"><a href="#1-3-2-曲直性" class="headerlink" title="1.3.2 曲直性"></a>1.3.2 曲直性</h3><ol><li>曲：图形只由曲线构成</li><li>直：图形只由直线构成</li><li>曲+直：图形由曲线和直线共同构成</li></ol><h3 id="1-3-3-开闭性"><a href="#1-3-3-开闭性" class="headerlink" title="1.3.3 开闭性"></a>1.3.3 开闭性</h3><p><font color='red'><strong>一般出现生活化符号（➗、+、-、√）、数字（2、5、8、9）优先考虑开闭</strong></font></p><ol><li>开放图形：图形不包含任何封闭空间，如字母“C”</li><li>封闭图形：图形不包含任何封闭空间，整体是全封闭的，如字母“D”</li><li>半开半闭图形：图形既包含封闭空间又包含开放区域，如字母“A”</li></ol><h3 id="1-3-4-思维导图"><a href="#1-3-4-思维导图" class="headerlink" title="1.3.4 思维导图"></a>1.3.4 思维导图</h3><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.3_1.jpg" alt="image-20230917231936082"></p><h2 id="1-4-数量规律（国3-5，省1-5）"><a href="#1-4-数量规律（国3-5，省1-5）" class="headerlink" title="1.4 数量规律（国3-5，省1-5）"></a>1.4 数量规律（国3-5，省1-5）</h2><h3 id="1-4-1-点"><a href="#1-4-1-点" class="headerlink" title="1.4.1 点"></a>1.4.1 点</h3><ol><li>直线与直线、直线与曲线、曲线与曲线的交点</li><li>直线与圆的切点</li><li>内部和外部数量</li><li>图中要是出现**<font color='red'>五边形、六边形</font><strong>，考虑</strong><font color='red'>外框的点数和里面点数</font>**的关系</li></ol><h3 id="1-4-2-线"><a href="#1-4-2-线" class="headerlink" title="1.4.2 线"></a>1.4.2 线</h3><p><font color='red'><strong>出现单个多边形、单一直线、单一曲线（圆、弧），优先数线。</strong></font></p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.4.2_1.jpg" alt="2.判断推理_1.4.2_1"></p><ol><li><p>直线</p><ol><li><p>数量</p></li><li><p>方向</p><ol><li><p>平行</p></li><li><p>垂直</p></li></ol></li></ol></li><li><p>曲线</p></li><li><p>内部和外部的直线、曲线数量差异</p></li><li><p>横线、竖线数量差异</p></li><li><p>平行线数量</p></li><li><p><strong><font color='red'>连通图笔画数（奇点 &#x2F; 2）</font></strong></p><ol><li><p>奇点是以该点为起点，延伸出去的线条数量为奇数的点</p></li><li><p>奇点数为零也可以一笔画出</p></li><li><p>直线或曲线的端点也是一个奇点</p></li><li><p>笔画数常见特征图：多端点、**<font color='red'>日字变形、田字变形、圆相交、五角星</font>**。如下图。</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.4.2_2.jpg" alt="2.判断推理_1.4.2_2"><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.4.2_3.jpg" alt="2.判断推理_1.4.2_3"></p></li><li><p>汉字要数书写的笔画数</p></li></ol></li></ol><h3 id="1-4-3-面"><a href="#1-4-3-面" class="headerlink" title="1.4.3 面"></a>1.4.3 面</h3><p><font color='red'><strong>窟窿居多、生活化图形、粗线条图形，优先数面</strong></font></p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.4_3.jpg" alt="2.判断推理_1.4_3.jpg"></p><ol><li>不同形状的面（三角形、四边形等）</li><li>相同形状的面</li><li><strong>最小面&#x2F;最大面</strong>与整体图像是否一致、最大面和最小面形状是否一致、最大面和最小面属性（对称性、曲直性）是否一致</li><li>图中要是出现**<font color='red'>五边形、六边形</font><strong>，优先考虑</strong><font color='red'>外框边数和面数</font>**的关系</li></ol><h3 id="1-4-4-素"><a href="#1-4-4-素" class="headerlink" title="1.4.4 素"></a>1.4.4 素</h3><p>素：即元素，可细分为个数、种类数和部分数（多个个体相触为一个整体即为一个部分数）3种情况</p><ol><li><p>当图形有很多独立小元素构成，可优先考虑数素，可以数元素的个数、种类数</p></li><li><p>出现很多**<font color='red'>黑色粗线条</font><strong>，或者</strong><font color='red'>生活化图形</font>**（如品牌logo），优先数部分数</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.4_2.jpg" alt="2.判断推理_1.4_2.jpg"></p></li><li><p>只有两种元素且排列整齐，一般考虑元素换算，即“一个顶多个”。<font color='red'><strong>公式：（第一幅图 + 第三幅图 &#x3D; 2 * 第二幅图）</strong></font></p></li></ol><h3 id="1-4-5-角"><a href="#1-4-5-角" class="headerlink" title="1.4.5 角"></a>1.4.5 角</h3><ol><li>直角数&#x2F;锐角数</li><li>图中较多出现**<font color='red'>直角三角形或线条之间垂直明显</font>**时，可优先关注直角。（如“+”，“T”）</li></ol><h3 id="1-4-6-思维导图"><a href="#1-4-6-思维导图" class="headerlink" title="1.4.6 思维导图"></a>1.4.6 思维导图</h3><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.4_1.jpg" alt="2.判断推理_1.4_1"></p><h2 id="1-5-特殊规律（0-3）"><a href="#1-5-特殊规律（0-3）" class="headerlink" title="1.5 特殊规律（0-3）"></a>1.5 特殊规律（0-3）</h2><h3 id="1-5-1-功能元素"><a href="#1-5-1-功能元素" class="headerlink" title="1.5.1 功能元素"></a>1.5.1 功能元素</h3><p>常见的功能元素有：<font color='red'>黑点、百点、箭头</font></p><ol><li>点：曲直&#x2F;直直&#x2F;曲曲交点</li><li>线：最长线&#x2F;最短线、直线&#x2F;曲线</li><li>角：直角&#x2F;锐角&#x2F;钝角、最大角&#x2F;最小角</li><li>面：单独面&#x2F;相交面、&#x2F;最大面&#x2F;最小面、形状、属性</li></ol><h3 id="1-5-2-图形间关系"><a href="#1-5-2-图形间关系" class="headerlink" title="1.5.2 图形间关系"></a>1.5.2 图形间关系</h3><ol><li>外离 &#x2F; 相交</li><li>相交点 &#x2F; 边 &#x2F; 面<ol><li>相交于点：点的数量、圆的切点或交点</li><li>相交于边：边的数量、长短、整体或部分、曲直</li><li>相交于面：面的形状、是否对称、曲直、与原来的图形相似</li></ol></li></ol><h3 id="1-5-3-思维导图"><a href="#1-5-3-思维导图" class="headerlink" title="1.5.3 思维导图"></a>1.5.3 思维导图</h3><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.5_1.jpg" alt="2.判断推理_1.5_1"></p><h2 id="1-6-空间重构（必考，1题）"><a href="#1-6-空间重构（必考，1题）" class="headerlink" title="1.6 空间重构（必考，1题）"></a>1.6 空间重构（必考，1题）</h2><h3 id="1-6-1-六面体——相对面"><a href="#1-6-1-六面体——相对面" class="headerlink" title="1.6.1 六面体——相对面"></a>1.6.1 六面体——相对面</h3><ol><li><p>如果两个面是六面体中的相对面，那么在六面体于一个角度只能同时看到三个面的情况下，两个相对面只能出现一个，且必须出现一个。如下图1</p><p>a和f、b和d、c和e都是相对面。</p></li></ol><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.1_1.png" alt="图1"></p><ol start="2"><li><p>如果两个面在“Z”字形两端，且紧靠着“Z”字形中间那条线，那么这两个面也是相对面。如下图2</p><p>a和b就是相对面，c和d没有紧靠“Z”字形两端所以不是相对面。</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.1_2.png" alt="图2"></p></li></ol><h3 id="1-6-2-六面体——相邻面"><a href="#1-6-2-六面体——相邻面" class="headerlink" title="1.6.2 六面体——相邻面"></a>1.6.2 六面体——相邻面</h3><h4 id="（1）-公共边"><a href="#（1）-公共边" class="headerlink" title="（1） 公共边"></a>（1） 公共边</h4><ol><li><p>公共边判定法则1：两个相邻面的相交线为公共边，如图1所示。</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_1.png" alt="图1"></p></li><li><p>公共边判定法则2：平面图中构成直角的两条边是同一条边，如图2所示。</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_2.png" alt="图2"></p></li><li><p>公共边判定法则3：4个面连成一列&#x2F;行，最两头的两条边是同一条便，如图3所示。</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_3.png" alt="图3"></p></li></ol><h4 id="（2）公共点"><a href="#（2）公共点" class="headerlink" title="（2）公共点"></a>（2）公共点</h4><p>选项中，相邻三个面的公共点是唯一的</p><p>三个面挨在一起，优先公共点</p><p>三个面没有挨在一起，优先公共边</p><h4 id="（3）-画边法"><a href="#（3）-画边法" class="headerlink" title="（3） 画边法"></a>（3） 画边法</h4><ol><li>寻找一个特殊面的唯一点作为起点</li><li>顺时针&#x2F;逆时针方向描边标号</li><li>选项与题干对应面不一致一一排除</li></ol><h3 id="1-6-3-思维导图"><a href="#1-6-3-思维导图" class="headerlink" title="1.6.3 思维导图"></a>1.6.3 思维导图</h3><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6_1.jpg" alt="2.判断推理_1.6_1"></p><h2 id="1-7-立体拼合、截面图、三视图与多面体折叠"><a href="#1-7-立体拼合、截面图、三视图与多面体折叠" class="headerlink" title="1.7 立体拼合、截面图、三视图与多面体折叠"></a>1.7 立体拼合、截面图、三视图与多面体折叠</h2><h3 id="1-7-1-立体拼合"><a href="#1-7-1-立体拼合" class="headerlink" title="1.7.1 立体拼合"></a>1.7.1 立体拼合</h3><ol><li>凹凸一致</li><li>分层拼</li></ol><h3 id="1-7-2-截面图"><a href="#1-7-2-截面图" class="headerlink" title="1.7.2 截面图"></a>1.7.2 截面图</h3><ol><li>截面有弧线</li><li>截面有矩形</li><li>截面有三角形</li></ol><h3 id="1-7-3-三视图"><a href="#1-7-3-三视图" class="headerlink" title="1.7.3 三视图"></a>1.7.3 三视图</h3><ol><li>主视图</li><li>俯视图</li><li>左视图</li></ol><h3 id="1-7-4-多面体折叠"><a href="#1-7-4-多面体折叠" class="headerlink" title="1.7.4 多面体折叠"></a>1.7.4 多面体折叠</h3><ol><li>底面边数&#x3D;侧面面数</li><li>需拼合的相邻边要等长</li></ol><h1 id="2-类比推理（国、多省10，少省5、12）"><a href="#2-类比推理（国、多省10，少省5、12）" class="headerlink" title="2. 类比推理（国、多省10，少省5、12）"></a>2. 类比推理（国、多省10，少省5、12）</h1><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_2_1.jpg" alt="2.判断推理_2_1"></p><table><thead><tr><th>一级关系</th><th align="center">二级辨析</th></tr></thead><tbody><tr><td>近反义关系</td><td align="center">感情色彩（褒义、贬义、中性）</td></tr><tr><td>并列关系</td><td align="center">顺序</td></tr><tr><td>工艺</td><td align="center">物理、化学</td></tr><tr><td>属性</td><td align="center">必然、或然</td></tr><tr><td>功能</td><td align="center">主要、次要</td></tr><tr><td>先后顺序</td><td align="center">主题能否一致</td></tr><tr><td>因果</td><td align="center">原因：人工&#x2F;自然；结果：积极&#x2F;消极</td></tr></tbody></table><h2 id="2-1-语义关系"><a href="#2-1-语义关系" class="headerlink" title="2.1 语义关系"></a>2.1 语义关系</h2><ol><li><p>近义关系：词语意思相近</p><p>例：开心∶高兴 言不由衷∶口是心非</p></li><li><p>反义关系：词语意思相反</p><p>例：勤奋∶懒惰 一丝不苟∶粗枝大叶</p></li></ol><h2 id="2-2-逻辑关系"><a href="#2-2-逻辑关系" class="headerlink" title="2.2 逻辑关系"></a>2.2 逻辑关系</h2><h3 id="2-2-1-全同关系"><a href="#2-2-1-全同关系" class="headerlink" title="2.2.1 全同关系"></a>2.2.1 全同关系</h3><p>表达含义完全相同，如：（马铃薯：土豆）（麦克风：话筒）</p><blockquote><p>方兴未艾（事物正在兴起、发展，一时不会终止）<br>厉兵秣马（把兵器磨快，把战马喂饱，形容做好准备）<br>人云亦云（人家怎么说，自己也就怎么说，形容没有主见）<br>河清海晏（黄河水清册，大海平静，用于比喻天下太平）</p><p>（扬州：广陵）<br>（皖：安徽）<br>（粽子：香黍shu）<br>南冠：囚犯(2018联考)<br>胃口：兴趣(2021浙江)<br>桑梓：家乡(2018联考)<br>桃李：学生(2018吉林、2021浙江)<br>青衿：读书人(2018联考)<br>手足：兄弟(2017山东)<br>浮屠：佛塔(2018联考)<br>白丁&#x2F;布衣：百姓(2014四)<br>丝竹：音乐(2018吉林)<br>鸿雁&#x2F;笺札：书信(2017联考)<br>汗青：史册(2015甘肃)<br>总角&#x2F;垂髫：小孩(2014仙西)<br>同窗：同学(2015甘肃)<br>干戈&#x2F;烽烟：战争(2015甘)<br>红颜&#x2F;娥眉：女性(2019四)<br>花甲&#x2F;耄耋&#x2F;伛偻&#x2F;黄发：老人(2018辽宁)<br>刘彻：汉武帝(2021重庆)<br>牵牛花：刺叭花(2020联考)<br>赵匡胤：宋太祖(2021重庆)<br>乞巧节：七夕节(2020联考)<br>合肥：庐州(2021重庆)<br>苦瓜：凉瓜(2016四)<br>南京：建业：金陵(2021重庆)<br>矮瓜：茄子(2016四)<br>桂：广西(2021山东)<br>纸鸢：风筝(2015吉林)<br>杜鹃花：映山红(2021山东)<br>芝麻：脂麻(2015吉林)<br>荷花：芙蕖(2019四10<br>五行：木火土金水(2015陕西)<br>地瓜：甘薯(2019四1)<br>五味：酸苦甘辛咸(2015陕西)<br>朱古力：巧克力</p></blockquote><h3 id="2-2-2-包容关系"><a href="#2-2-2-包容关系" class="headerlink" title="2.2.2 包容关系"></a>2.2.2 包容关系</h3><p>指的是两个词语一个范围大，一个范围小，如：（男人：人）（桌面：桌子）</p><p>包容关系又可以分为两类</p><ol><li>种属关系，即A是B的一种（柳树：树）</li><li>组成关系，即A是B的一个组成部分（轮胎：汽车）</li></ol><h3 id="2-2-3-并列关系"><a href="#2-2-3-并列关系" class="headerlink" title="2.2.3 并列关系"></a>2.2.3 并列关系</h3><p>指处于同一级别上，但又彼此不包含，如：（火星：地球）（植物：动物）</p><p>并列关系又可以分为：</p><ol><li>矛盾关系，非A即B（对称：非对称）</li><li>反对关系，即除了A和B还有C&#x2F;D&#x2F;E（红色：白色）</li></ol><p>并列关系一般要求<font color='red'><strong>同级并列</strong></font>，如广东和南京不是并列，广东是省级行政厅，南京是副省级市。并且两个词语应该属于明显同一事物的集合，如苹果和香蕉是并列，但计算机和菜刀不属于并列。</p><blockquote><p>生：死<br>男：女<br>白天：黑夜<br>A:非A<br>阴：阳<br>阴离子：阳离子<br>阴刻：阳刻<br>曲：直<br>动：静<br>静态博弈：动态博弈<br>软实力：硬实力<br>软件：硬件<br>主要矛盾：次要矛盾<br>实体经济：虚拟经济<br>精神文明：物质文明<br>急性中毒：慢性中毒</p></blockquote><h3 id="2-2-4-交叉关系"><a href="#2-2-4-交叉关系" class="headerlink" title="2.2.4 交叉关系"></a>2.2.4 交叉关系</h3><p>词语概念有重叠的地方，但不完全重合，有的A是B，有的A不是B，有的B是A，有的B不是A。如：（男人：老师）（女人：公务员）</p><blockquote><p>团扇：羽毛扇：舞蹈扇<br>旱田作物：高产作物<br>圈椅：实木椅：办公椅<br>哺乳动物：陆生动物<br>推理漫画：连环漫画<br>内陆湖：淡水湖<br>馆藏文物：史前文物<br>教师：陕西人<br>川菜：素菜：热菜<br>诗人：教授<br>壁画：山水画<br>专家：官员</p></blockquote><h3 id="2-2-5-对应关系"><a href="#2-2-5-对应关系" class="headerlink" title="2.2.5 对应关系"></a>2.2.5 对应关系</h3><p>指一定范围时间包含的各词语要素之间构成的相互对应，包括材料、工艺、功能、属性、时间先后、因果、方式目的等多种对应。</p><ol><li><p>物品与原材料、制作工艺。如（家具：木材）（手镯：打磨）</p><p>关于原材料-工艺-成品这几个关系，<font color='red'><strong>有化学变化和物理变化之分</strong></font></p></li><li><p>物品与功能，一般为（名词：动词）。如（手机：沟通）（汽车：运输）</p><p>常考二级辨析：**<font color='red'>主要、次要</font>**</p></li><li><p>属性关系，一般为（名词：形容词）。如（盐：咸）（叶：绿）</p><p>常考二级辨析：**<font color='red'>必然、或然</font>**</p></li><li><p>时间先后顺序，一般为（动词：动词）。如（起飞：着陆）（半径：领奖）</p><p>常考二级辨析：**<font color='red'>主体能否一致，如（请假：批准）的主体就不一致</font>**</p></li><li><p>因果关系，（下雨：地湿）（淋雨：感冒）</p><p>常考二级辨析：**<font color='red'>原因自然&#x2F;人工、结果积极&#x2F;消极</font>**</p></li></ol><h2 id="2-3-语法关系"><a href="#2-3-语法关系" class="headerlink" title="2.3 语法关系"></a>2.3 语法关系</h2><p>讲体感词语联系起来而形成的关系，根据句子成分不同，主要分为**<font color='red'>主谓关系、主宾关系、动宾关系、偏正关系</font>**，通常语义关系或逻辑关系无法解答的情况下再考虑语法关系。</p><p>语法关系主要考虑以下两个方面</p><ol><li>词性：名词、动词、形容词<ul><li>一般，名词充当主语或宾语，动词充当谓语。当题干出现名词和动词，且没有明显逻辑关系时，可优先考虑主谓或动宾搭配形式。</li><li>词语在不同的语境下可具有不同的磁性，正确区分词语的词性是造句的前提。例如，“我理解你”中“理解”为动词，“我需要你的理解”中“理解”为名词。</li></ul></li><li>顺序：题干和选项用同样的顺序造句。<ul><li>例如，题干为（促销：利润：商场），顺序为3-1-2。选项也要按照此顺序造句。</li></ul></li></ol><p>技巧：造句子</p><ol><li>主谓关系（我：喜欢）</li><li>动宾关系（喜欢：你）</li><li>主宾关系（我：你）</li><li>偏正，也可以叫做修饰（皎洁：<del>的</del>月亮）（慢慢：<del>地</del>跑）（青年：<del>住的</del>公寓）</li></ol><h2 id="2-4-拆分思维"><a href="#2-4-拆分思维" class="headerlink" title="2.4 拆分思维"></a>2.4 拆分思维</h2><p><strong><font color='red'>成语拆分成两半，前两个词如果是动词优先看（方式：目的）</font></strong></p><ol><li>考虑拆分的三种情形<ol><li>题干中两个词语没有明显的逻辑关系，如（成败：呼吸）</li><li>一个成语被拆分成两个词，如（南征：北战）</li><li>相同单字反复出现，如（寒：寒冷：寒舍）</li></ol></li><li>拆分技巧：优先拆分成短词，仍无明显关系时再拆分成单字。</li><li>拆分之后主要看一下几种关系：<ol><li>语义关系：近义关系、反义关系，如（左顾：右盼）（生死：存亡）（南征：北战）</li><li>逻辑关系：<ol><li>并列关系：如（琴棋：书画）（飞禽：走兽）（笔墨：纸砚）</li><li>对应关系（原因结果）：如（风吹：草动）</li><li>对应关系（当时目的）：如（掩耳：盗铃）</li></ol></li><li>语法关系：<ol><li>动宾关系：如（扶贫：济困）</li><li>偏振关系：如（劲敌：严冬）</li></ol></li></ol></li></ol><blockquote><p>（琴（古琴）棋（围棋）书画：经（经书）史（正史）子（先秦诸子百家）集（诗词汇编文集））&#x3D;（鸟兽虫鱼：江河湖海）</p><p>（按图：索骥）&#x3D;（拔苗：助长）</p><p>（水落：石出）&#x3D;（理屈：词穷）</p></blockquote><blockquote><p>动词&#x2F;动宾结构</p><p>刻舟：求剑<br>按图：索骥<br>削足：适履<br>杀鸭：卵<br>杀鸡：儆猴<br>掩耳：盗铃<br>守株：待免<br>凿壁：偷光<br>缘木：求鱼<br>画饼：充饥<br>饮鸩：止渴<br>望梅：止渴</p></blockquote><blockquote><p>因果结构</p><p>人逢喜事：精神爽<br>城门失火：殃及池鱼<br>众人拾柴：火焰高<br>多行不义：必自毙<br>水落：石出<br>水涨：船高<br>春暖：花开<br>风吹：草动<br>天寒：地冻<br>物腐：虫生<br>乌尽：弓藏<br>唇亡：齿寒<br>理屈：词穷<br>水滴：石穿</p></blockquote><h1 id="3-定义判断（国10，省5-12）"><a href="#3-定义判断（国10，省5-12）" class="headerlink" title="3 定义判断（国10，省5-12）"></a>3 定义判断（国10，省5-12）</h1><p><strong><font color='red'>原理效应类，重点看实际应用，结果好坏很重要</font></strong></p><h2 id="3-1-关键词——主客体"><a href="#3-1-关键词——主客体" class="headerlink" title="3.1 关键词——主客体"></a>3.1 关键词——主客体</h2><p>主体是指一个动作或事件的发起者或执行者；客体是指一个动作或行为指向的对象。</p><p><font color='red'>主体、客体错误的选项一定不符合定义</font></p><p><font color='red'>出现重复的词要重点关注</font></p><p><font color='red'>出现“的”很重要</font></p><blockquote><p>常考主客体：</p><p>1.行政机关：各级政府（国务院.街道办&#x2F;乡镇政府、公安、海关等）<br>2.权力机关：全国人大、地方人大<br>3.司法机关：法院、检察院<br>4.事业单位：学校、医院、科研所、广播新闻出版等<br>5.社会组织：商会（浙商会）、协会（消费者协会）</p></blockquote><h2 id="3-2-关键词——原因-条件-结果"><a href="#3-2-关键词——原因-条件-结果" class="headerlink" title="3.2 关键词——原因 &#x2F; 条件 + 结果"></a>3.2 关键词——原因 &#x2F; 条件 + 结果</h2><blockquote><p>常见句式引导词： </p><p>大前提：当……时、在……过程中、在……后<br>方式：通过、利用<br>目的：以、达到<br>原因：因为、由于<br>结果：导致、从而</p></blockquote><h2 id="3-3-关键词——方式-目的"><a href="#3-3-关键词——方式-目的" class="headerlink" title="3.3 关键词——方式 + 目的"></a>3.3 关键词——方式 + 目的</h2><ol><li>表示方式的引导词：以（按照&#x2F;通过&#x2F;采用&#x2F;利用&#x2F;依据）……的方式（方法&#x2F;办法&#x2F;手段）等。</li><li>表示目的的引导词：以……为目的（目标）、达到（实现）……的目的（目标&#x2F;结果&#x2F;效果）、为了……等。</li></ol><h2 id="3-4-包含定义的句子优先看"><a href="#3-4-包含定义的句子优先看" class="headerlink" title="3.4 包含定义的句子优先看"></a>3.4 包含定义的句子优先看</h2><p> 常见的解释说明引导词：即、包括、也就是说、以下情形……</p><h2 id="3-5-补充说明"><a href="#3-5-补充说明" class="headerlink" title="3.5 补充说明"></a>3.5 补充说明</h2><p>补充说明的标志有三种形式</p><ol><li>即、也就是说、意思是、包括等</li><li>标点符号：括号、破折号、冒号</li><li>分类说明</li></ol><h2 id="3-6-多定义"><a href="#3-6-多定义" class="headerlink" title="3.6 多定义"></a>3.6 多定义</h2><p>题干中存在多个定义，优先看让你选择选项的那句话。</p><p>遇到令人纠结的选项时，先找到选项间的区别，再针对性地回看其他定义</p><h2 id="3-7-同构选项排除法"><a href="#3-7-同构选项排除法" class="headerlink" title="3.7 同构选项排除法"></a>3.7 同构选项排除法</h2><p>同构选项是指选项之间结构相似或者表达意思相似，可以同时排除</p><h1 id="4-逻辑判断（国、多省10，5-15）"><a href="#4-逻辑判断（国、多省10，5-15）" class="headerlink" title="4. 逻辑判断（国、多省10，5-15）"></a>4. 逻辑判断（国、多省10，5-15）</h1><h2 id="4-1-翻译推理（0-5）"><a href="#4-1-翻译推理（0-5）" class="headerlink" title="4.1 翻译推理（0-5）"></a>4.1 翻译推理（0-5）</h2><p>先翻译，后推理</p><ol><li>将逻辑关联词所在句子按照翻译规则翻译为①-&gt;②的形式</li><li>按照推理规则进行推导</li></ol><h3 id="4-1-1-翻译规则之“前推后”"><a href="#4-1-1-翻译规则之“前推后”" class="headerlink" title="4.1.1 翻译规则之“前推后”"></a>4.1.1 翻译规则之“前推后”</h3><blockquote><p>典型逻辑关联词： </p><p>如果……那么……<br>若……则……<br>只要……就……<br>所有……都……<br>为了……一定……<br>…是…的充分条件<br>…的前提之一是…</p></blockquote><h3 id="4-1-2-翻译规则之“后推前"><a href="#4-1-2-翻译规则之“后推前" class="headerlink" title="4.1.2 翻译规则之“后推前"></a>4.1.2 翻译规则之“后推前</h3><blockquote><p>典型逻辑关联词： </p><p>只有……才……<br>不……不……<br>除非……否则不……<br>……是……的基础 &#x2F; 假设 &#x2F; 前提 &#x2F; 关键<br>……是……的必要条件 &#x2F; 必不可少的条件</p></blockquote><h3 id="4-1-3-推理规则之“逆否等价”"><a href="#4-1-3-推理规则之“逆否等价”" class="headerlink" title="4.1.3 推理规则之“逆否等价”"></a>4.1.3 推理规则之“逆否等价”</h3><p>符号表示：A → B &#x3D; - B →- A </p><p>文字表示：**<font color='red'>肯前必肯后，否后必否前，否前肯后不必然</font>**</p><h3 id="4-1-4-推理规则——传递规则"><a href="#4-1-4-推理规则——传递规则" class="headerlink" title="4.1.4 推理规则——传递规则"></a>4.1.4 推理规则——传递规则</h3><p>①-&gt;②，②-&gt;③，则①-&gt;②-&gt;③</p><p>①-&gt;②，-①-&gt;③，则-③-&gt;①-&gt;②</p><p>①-&gt;②，②-&gt;-③，则①-&gt;②-&gt;-③</p><h3 id="4-1-5-两个翻译易错点"><a href="#4-1-5-两个翻译易错点" class="headerlink" title="4.1.5 两个翻译易错点"></a>4.1.5 两个翻译易错点</h3><ol><li><p>除非A**<font color='red'>否则不</font>**B：B→A</p><p>除非A**<font color='red'>否则</font>**B：-B→A，或者-A→B</p><blockquote><p>例句：除非交房租，否则搬出去。</p></blockquote></li><li><p>基础&#x2F;前提&#x2F;关键；不可缺少&#x2F;必不可少；必要条件</p><p><strong><font color='red'>谁是必不可少的，谁在箭头后</font></strong></p><blockquote><p>eg：完成B，A是必不可少的</p><p>eg：A对于B是必不可少的条件</p><p>在推进依法治国的进程中，大力宣传法制必不可少</p><p>大力宣传法制，对于推进依法治国是必不可少的条件</p><p>翻译：推进依法治国-&gt;大力宣传法制</p></blockquote></li></ol><h3 id="4-1-6-且"><a href="#4-1-6-且" class="headerlink" title="4.1.6 且"></a>4.1.6 且</h3><ol><li><p>表示连接的所有对象均成立</p></li><li><p>同义关联词：</p><ol><li>并列关系：并且、且、和、都、既…又…</li><li>递进关系：甚至、而且、还…</li><li>转折关系：但是、然和、却</li><li>标点符号：逗号“，”、顿号“、”、分号“；”</li></ol></li><li><p>推理规则：</p><ul><li><p>A且B→C</p><ul><li>-C→-（A且B），否后成立</li></ul></li></ul></li></ol><ul><li><p>**<font color='red'>-A或-B都会造成-（A且B）</font>**，因此否前不成立</p></li><li><p>C→A且B</p><blockquote><p>eg：如果小明年级前10，那么小刚和小红也一定年级前10</p></blockquote><ul><li><p>-A→-C（成立），B？</p><blockquote><p>如果<u>小刚没有年级前10</u>（-A），那么<u>小刚和小红都年级前10</u>不成立（-（A且B）否后表否前），那么<u>小明一定没有年级前十</u>（-C），小红则不知道（B？）</p></blockquote></li><li><p>-B→-C（成立），A？</p></li></ul></li></ul><h3 id="4-1-7-或"><a href="#4-1-7-或" class="headerlink" title="4.1.7 或"></a>4.1.7 或</h3><ol><li><p>表示连接的所有对象**<font color='red'>至少有一个</font>**成立</p></li><li><p>同义关联词：</p><ol><li>…或者&#x2F;或…</li><li>或者…或者…</li><li>…和…至少有一个</li></ol></li><li><p>推理规则：</p></li></ol><p>​当“或”关系成立时，（**<font color='red'>否定其中一句 </font>** <strong>→</strong> **<font color='red'>另一句成立</font>**）</p><ol start="4"><li>特别提示：<ol><li>A和B**<font color='red'>至多</font>**有一个（也就是可以都没有），翻译为（-A或-B），也就是（A→-B、B→-A）</li><li>要么…要么…，含义为二选一（必须要有一个），也就是（A→-B、-A→B、B→-A、-B→A）</li></ol></li></ol><blockquote><p>（2022 国考）地理老师在五个柜子里放入了五种矿物，每个柜子只放一种矿物：赤铁矿、黑云母、绿泥石、黄铜矿、方铅矿。已知：<br>（1）如果一号柜放赤铁矿，那么二号柜不放黑云母；<br>（2）或者三号柜放赤铁矿，或者一号柜放赤铁矿；<br>（3）如果二号柜不放黑云母，那么四号柜不放绿泥石；<br>（4）若五号柜放方铅矿，则四号柜放绿泥石。 </p><p>以下哪项如果为真，可以得出“三号柜放赤铁矿”的结论？<br>A. 二号柜不放黑云母<br>B. 一号柜不放黄铜矿<br>C. 五号柜放的是方铅矿<br>D. 四号柜不放绿泥石</p><p>这道题本质上还是<strong>A→B→C→D→E</strong>，区分谁是A或E，有一个方法，**<font color='red'>B、C、D中间项一定会出现两次，而A、E首尾项一定只会出现一次，并且问题一般为尾项</font>**</p><p>另一种方法为传统方法，**<font color='red'>以问题的推断，对条件进行顺推或逆推构成一条逻辑链</font>**，直到选出正确的选项或排除错误选项</p></blockquote><h3 id="4-1-8-德·摩根定律"><a href="#4-1-8-德·摩根定律" class="headerlink" title="4.1.8 德·摩根定律"></a>4.1.8 德·摩根定律</h3><p><strong><font color='red'>“-”进去，且或互变</font></strong></p><ol><li><font color='red'><strong>-（A且B）&#x3D;-A或-B</strong></font></li><li><font color='red'><strong>-（A或B）&#x3D;-A且-B</strong></font></li></ol><h3 id="4-1-9-“有的”"><a href="#4-1-9-“有的”" class="headerlink" title="4.1.9 “有的”"></a>4.1.9 “有的”</h3><ol><li><p>逻辑内涵：</p><p>有的表示至少有一个，包含三种可能：只有一个满足；有一部分满足；全部满足</p></li><li><p>推理规则：</p><ol><li><strong>有的A是B &#x3D; 有的B是A</strong></li><li>所有A都是B→<strong>有的A是B</strong></li><li>所有A都是B→<strong>有的B是A</strong></li></ol></li><li><p>提示：</p><ol><li>“有的”不能推出“所有”</li><li>“有的A是B”不能推出“有的A不是B”</li><li>带“有的”的翻译不能应用逆否等价规则，“所有”可以</li><li>“有的A是B”与“有的A不是B”不能相互推导</li></ol></li></ol><h3 id="4-1-10-“并非”"><a href="#4-1-10-“并非”" class="headerlink" title="4.1.10 “并非”"></a>4.1.10 “并非”</h3><ol><li><p>逻辑内涵：</p><p>“并非”，即否定，当“并非”出现时，意味着否定后面所有的内容</p><blockquote><p>eg：并非明天会下雨（-明天下雨）</p></blockquote></li><li><p>同义关联词：</p><p>否、不、…是错的</p></li><li><p>推理规则：</p><p>“并非”一旦出现，后面全部“否”：</p><ol><li>“必然”换“可能”</li><li>“有的”换“所有”</li><li>“且”“或”互换</li></ol></li></ol><h2 id="4-2-排列组合（0-3题）"><a href="#4-2-排列组合（0-3题）" class="headerlink" title="4.2 排列组合（0-3题）"></a>4.2 排列组合（0-3题）</h2><h3 id="4-2-1-排除法、代入法"><a href="#4-2-1-排除法、代入法" class="headerlink" title="4.2.1 排除法、代入法"></a>4.2.1 排除法、代入法</h3><ol><li>题干条件确定，根据这些条件能够直接排除选项，考虑排除法</li><li>题干条件不确定，或提问方式为**<font color='red'>“可能”“不可能”或“补充以下条件”“真假”</font>**时，考虑代入法<ul><li><font color='red'>题干有对又错，真假不确定，优先带入</font></li><li><strong><font color='red'>带入选项时一定要先带入题干中存在的</font></strong></li></ul></li></ol><p>题干中出现“**<font color='red'>只说对一半</font><strong>”的题，可以用</strong><font color='red'>最小假设法：也就是题干中出现次数最少的条件可能是正确的</font>**</p><h3 id="4-2-2推理起点"><a href="#4-2-2推理起点" class="headerlink" title="4.2.2推理起点"></a>4.2.2推理起点</h3><ol><li>确定信息</li></ol><p>​如果题干中有确定信息，“谁 &#x3D; 谁”的信息</p><ol start="2"><li>最大信息法</li></ol><p>​题干条件中出现次数最多的信息，作为推理的起点</p><ol start="3"><li>假设法</li></ol><p>​无确定信息、无最大信息法时，二选一的情况下假设其中一种情况为真，看是否矛盾</p><h3 id="4-2-3-辅助工具"><a href="#4-2-3-辅助工具" class="headerlink" title="4.2.3 辅助工具"></a>4.2.3 辅助工具</h3><ol><li>列表</li><li>“&lt;”、“&gt;”、“&#x3D;”。</li></ol><h3 id="4-2-4-材料题"><a href="#4-2-4-材料题" class="headerlink" title="4.2.4 材料题"></a>4.2.4 材料题</h3><ol><li>第一题一般用代入法或排除法即可快速解题、</li><li>如果有“如果A则B”，那么不能带入B，优先排除有B的选项，因为肯后不必然</li></ol><h2 id="4-3-加强削弱综述（4-8）"><a href="#4-3-加强削弱综述（4-8）" class="headerlink" title="4.3 加强削弱综述（4-8）"></a>4.3 加强削弱综述（4-8）</h2><p>题型特征：</p><p>削弱：提问方式中带有“削弱”“质疑”“反驳”“否定”等关键词</p><p>加强：提问方式中带有“加强”“支持”“假设”“前提”等关键词</p><h3 id="4-3-1-论证三要素"><a href="#4-3-1-论证三要素" class="headerlink" title="4.3.1 论证三要素"></a>4.3.1 论证三要素</h3><p>论点、论据、联系</p><h3 id="4-3-2-加强与削弱"><a href="#4-3-2-加强与削弱" class="headerlink" title="4.3.2 加强与削弱"></a>4.3.2 加强与削弱</h3><ol><li>论点和论据具备真实性</li><li>论点和论据间存在联系。联系越紧密、越直接，论证成立的可能性就越大</li></ol><h2 id="4-4-削弱题型（3）"><a href="#4-4-削弱题型（3）" class="headerlink" title="4.4 削弱题型（3）"></a>4.4 削弱题型（3）</h2><blockquote><p>eg：论据B，所以有人认为A</p><ol><li>否论点：A是错的</li><li>拆桥：B跟A没有直接关系，不能得出A&#x3D;B</li><li>否论据：B是错的</li><li>因果倒置：因为A所以B</li><li>他因削弱：有没有一种可能，不止论据B，还有一种原因C</li></ol></blockquote><h3 id="4-4-1-否定论点"><a href="#4-4-1-否定论点" class="headerlink" title="4.4.1 否定论点"></a>4.4.1 否定论点</h3><p>论点是一个论证的核心，否定论点就意味着给了这个论证致命一击。通常情况下，否定论点是非常强的削弱方式，也是考察最为频繁的削弱方式。因此，当遇到削弱题型时，可以首先**<font color='red'>预想出否定论点的表述方式</font>**，带着这个想法去选选项中做对比</p><blockquote><p>论点：A→B</p><p>否论点：A且-B</p></blockquote><h3 id="4-4-2-拆桥"><a href="#4-4-2-拆桥" class="headerlink" title="4.4.2 拆桥"></a>4.4.2 拆桥</h3><p>拆桥是指破坏论点和论据之间的关系。因为拆桥同时涉及论点和论据，所以通常情况下，拆桥的力度要强于单纯的否定论据。**<font color='red'>说论点与论据之间没有必然关系</font>**</p><blockquote><p> A与B没有必然关系</p><p>A不是B的唯一条件、</p><p>A不等于B</p></blockquote><h3 id="4-4-3-否论据"><a href="#4-4-3-否论据" class="headerlink" title="4.4.3 否论据"></a>4.4.3 否论据</h3><ol><li>题干中有“双方互怼”，经常采用否定论据来削弱</li><li>题干有论据且在找不到否论点和拆桥</li></ol><h3 id="4-4-4-削弱之因果倒置和他因削弱"><a href="#4-4-4-削弱之因果倒置和他因削弱" class="headerlink" title="4.4.4 削弱之因果倒置和他因削弱"></a>4.4.4 削弱之因果倒置和他因削弱</h3><p>论点中包含因果关系</p><blockquote><p>…是…的原因</p><p>…导致&#x2F;使得&#x2F;有助于…</p><p>…增加&#x2F;降低&#x2F;加强&#x2F;减轻…</p><p>这是由于…</p></blockquote><ol><li>因果倒置：原本和结果说反了 <ul><li>判断因果倒置可以用时间先后顺序</li></ul></li><li>他因削弱 ：承认结果，同一主体同时存在两种及以上的原因<ul><li>他因的本质：干扰因素——用于削弱论点原因与结果之间的唯一关系。同一时间A并不是B的唯一原因</li></ul></li></ol><h2 id="4-5-加强题型（3）"><a href="#4-5-加强题型（3）" class="headerlink" title="4.5 加强题型（3）"></a>4.5 加强题型（3）</h2><h3 id="4-5-1-补充论据"><a href="#4-5-1-补充论据" class="headerlink" title="4.5.1 补充论据"></a>4.5.1 补充论据</h3><ol><li>解释原因：说明论点成立的原因——整体上解释</li><li>举例支持：证明论点成立的例子——部分上证明</li></ol><h3 id="4-5-2-搭桥"><a href="#4-5-2-搭桥" class="headerlink" title="4.5.2 搭桥"></a>4.5.2 搭桥</h3><p>什么是搭桥，就是论据了可以推出论点，也就是**<font color='red'>论据 &#x3D; 论点</font>**</p><p>题干提问方式为“**<font color='red'>前提</font><strong>”，优先考虑搭桥，</strong><font color='red'>求同存异</font>**</p><p>加强题 + 选项需翻译 → 论据 + 论点</p><ol><li><p>题型特征：</p><ol><li>论点与论据话题不一致</li><li>提问方式为前提、假设、必要条件、加强论证时，优先考虑搭桥</li></ol></li><li><p>选项特征：</p><p>同时包含论点和论据中的关键词，并肯定论点和论据之间的关系</p></li><li><p>解题思维：</p><p>找论点一找论据一去同存异→对比选项</p></li></ol><h3 id="4-5-2-必要条件"><a href="#4-5-2-必要条件" class="headerlink" title="4.5.2 必要条件"></a>4.5.2 必要条件</h3><ol><li>题干特征：提问方式为“前提”“假设”，且无搭桥项</li><li>选项特征：选项为论点成立的必要条件（没它不行）</li></ol><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_4.5_1.jpg" alt="判断推理_4.5_1"></p><h3 id="4-5-3-解释原因与举例"><a href="#4-5-3-解释原因与举例" class="headerlink" title="4.5.3 解释原因与举例"></a>4.5.3 解释原因与举例</h3><ol><li>题型特征： <ol><li>提问方式为“以下哪项如果为真，最能解释 &#x2F; 最不能解释上述现象” </li><li>题干中存在矛盾或不合理现象</li></ol></li><li>解题思维： <ol><li>在题干中找出矛盾或不合理现象</li><li>在选项中找到能解释该矛盾 &#x2F; 不合理现象的理由</li></ol></li></ol><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_4.5.3_1.jpg" alt="2.判断推理_4.5.3_1"></p><h3 id="4-6-日常结论"><a href="#4-6-日常结论" class="headerlink" title="4.6 日常结论"></a>4.6 日常结论</h3><h2 id="4-6-真假推理"><a href="#4-6-真假推理" class="headerlink" title="4.6 真假推理"></a>4.6 真假推理</h2><h3 id="4-6-1-矛盾关系"><a href="#4-6-1-矛盾关系" class="headerlink" title="4.6.1 矛盾关系"></a>4.6.1 矛盾关系</h3><p><font color='red'><strong>条件只有一真，真话在矛盾中，则其余全假</strong></font></p><p><font color='red'><strong>条件只有一假，假话在矛盾中，则其余全真</strong></font></p><p>常考的矛盾关系：</p><ol><li>A与-A</li><li>“所有A都是B”与“有的A不是B”</li><li>“所有A都不是B”与“有的A是B”</li><li>“A→B”与“A且-B”</li><li>“A或B”与“-A且-B”</li><li>“A且B”与“-A或-B”</li></ol><h3 id="4-6-2-反对关系"><a href="#4-6-2-反对关系" class="headerlink" title="4.6.2 反对关系"></a>4.6.2 反对关系</h3><p><font color='red'><strong>条件只有一真，真话在“有的”和“有的不”，其余全假</strong></font></p><p><strong><font color='red'>条件只有一假，假话在“所有都”和“所有都不”，其余全真</font></strong></p><h3 id="4-6-3-带入排除法"><a href="#4-6-3-带入排除法" class="headerlink" title="4.6.3 带入排除法"></a>4.6.3 带入排除法</h3><ol><li>题干代入</li><li>选项代入</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公考题之资料分析</title>
      <link href="/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/"/>
      <url>/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="资料分析"><a href="#资料分析" class="headerlink" title="资料分析"></a>资料分析</h1><h2 id="1-理论基础"><a href="#1-理论基础" class="headerlink" title="1 理论基础"></a>1 理论基础</h2><h3 id="1-1-速算技巧"><a href="#1-1-速算技巧" class="headerlink" title="1.1 速算技巧"></a>1.1 速算技巧</h3><h4 id="1-1-1-截位直除"><a href="#1-1-1-截位直除" class="headerlink" title="1.1.1 截位直除"></a>1.1.1 截位直除</h4><p>截X位：从左边第一个数字开始保留数字的前X位</p><blockquote><p>如：</p><p>4527 截两位的话就是从左往右数，在保留两个数字“45”的情况下对下一位“2”进行四舍五入，最后变成“45”</p><p>4527 截三位的话就是从左往右数，在保留三个数字“452”的情况下对下一位“7”进行四舍五入，最后变成“453”</p></blockquote><ul><li>一步除法：只截**<font color='red'>分母</font>**。如$\frac {12345}{45678}$</li><li>多步除法：**<font color='red'>分子、分母</font>**都截。如$\frac {98765}{12345} \times \frac {54321}{56789}$​</li><li>选项差距大截两位，选项差距小截三位<ul><li>选项差距大：四个选项首位都不同；首位相同但是第二位的差大于首位</li><li>选项差距小：首位相同；第二位差小于等于首位</li></ul></li></ul><h4 id="1-1-2-分数比较"><a href="#1-1-2-分数比较" class="headerlink" title="1.1.2 分数比较"></a>1.1.2 分数比较</h4><ul><li>一大一小：**<font color='red'>分子更大、分母更小</font>**的分数大</li><li>同大同小：<strong>分子分母都更大</strong>。<ul><li>竖着直接除：一般分母截两位计算即可</li><li>横着看倍数：**<font color='red'>分子间倍数大，看分子，分子大的分数大；分母间倍数大，看分母，分母大的分数小</font>**</li></ul></li></ul><h3 id="1-2-基期量与现期量"><a href="#1-2-基期量与现期量" class="headerlink" title="1.2 基期量与现期量"></a>1.2 基期量与现期量</h3><ul><li>时间靠前的为基期</li><li>时间靠后的为现期</li></ul><p>公式：</p><ul><li>$基期 &#x3D; 现期 - 增长量$​</li><li>$基期 &#x3D; \frac {现期}{1+r}，如果 \left | r \right | \le 5% ，则 \frac {现期}{1 \pm r} \simeq 现期 \times (1 \mp r)$</li><li>$现期 &#x3D; 基期 + 增长量$</li></ul><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/4.%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90_1.2_1.png" alt="4.资料分析_1.2_1"></p><h3 id="1-3-增长量与增长率"><a href="#1-3-增长量与增长率" class="headerlink" title="1.3 增长量与增长率"></a>1.3 增长量与增长率</h3><ul><li><p>增长量用来表述基期量写现期量变化的绝对量</p><blockquote><p>增长量：老邓2023年的工资比2022年增长了50元<br>增长率：老邓2023年的工资比2022年增长了50%</p></blockquote></li><li><p>增长率用来表述基期量与现期量变化的相对量</p></li><li><p>翻番：翻一番为原来的2倍；翻两番为原来的4倍；翻n番为原来的$2^n$​​​倍</p></li></ul><p>公式：</p><ul><li>$r &#x3D; \frac {现期-基期}{基期} &#x3D; \frac {现期}{基期} - 1$​</li><li>$增长量 &#x3D; 基期 \times r &#x3D; \frac {现期}{1+r} \times r &#x3D; \frac {现期}{1+\frac m n} \times \frac m n &#x3D; \frac {现期 \times m}{n+m}$​</li><li>$减少量 &#x3D; 基期 \times r &#x3D; \frac {现期}{1-r} \times r &#x3D; \frac {现期}{1-\frac m n} \times \frac m n &#x3D; \frac {现期 \times m}{n-m}$</li></ul><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/4.%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90_1.3_1.png" alt="4.资料分析_1.3_1"></p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/4.%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90_1.3_2.png" alt="4.资料分析_1.3_2"></p><ul><li>混合增长率：即整体增长率居于各部分增长率之间。</li><li>间隔增长率：对于从前往后的三个时间点A、B、C，若B相对于A的增长率、C相对于B的增长率分别为$r_1、r_2$ ，则C对于A的增长率为间隔增长率，计算公式为：$r_{间隔} &#x3D; r_1 + r_2 + r_1 \times r_2$</li></ul><h3 id="1-4-同比与环比"><a href="#1-4-同比与环比" class="headerlink" title="1.4  同比与环比"></a>1.4  同比与环比</h3><ul><li>同比：和**<font color='red'>去年</font>**同时期相比（年份前推）</li><li>环比：和上一个统计周期相比（**<font color='red'>上个月份或者上个季度</font>**）</li></ul><h3 id="1-5-百分数和百分点"><a href="#1-5-百分数和百分点" class="headerlink" title="1.5 百分数和百分点"></a>1.5 百分数和百分点</h3><p>百分数表示两个量的比例关系，用除法计算</p><p>百分点表示两个百分数的变化，用加减法计算</p><blockquote><p>1&#x2F;2&#x3D;50%，1&#x2F;3≈33.3%，1&#x2F;4&#x3D;25%，1&#x2F;5&#x3D;20%，1&#x2F;6≈16.7%，</p><p>1&#x2F;7≈14.3%，1&#x2F;8&#x3D;12.5%，1&#x2F;9≈11.1%，1&#x2F;10&#x3D;10%，1&#x2F;11≈9.1%</p><p>1&#x2F;12≈8.3%，1&#x2F;13≈7.7%，1&#x2F;14≈7.1%，1&#x2F;15≈6.7%，1&#x2F;16≈6.3%</p><p>1&#x2F;17≈5.9%，1&#x2F;18≈5.6%，1&#x2F;19≈5.3%，1&#x2F;20&#x3D;5%</p></blockquote><h3 id="1-6-年份差"><a href="#1-6-年份差" class="headerlink" title="1.6 年份差"></a>1.6 年份差</h3><ul><li>五年计划：第十四五年计划是2021-2025年，机器是2020年最后一天，现期是2025年最后一天，刚好差五年</li></ul><h2 id="2-高频考点"><a href="#2-高频考点" class="headerlink" title="2 高频考点"></a>2 高频考点</h2><h3 id="2-1-比重"><a href="#2-1-比重" class="headerlink" title="2.1 比重"></a>2.1 比重</h3><h4 id="2-1-1-现期比重-必考"><a href="#2-1-1-现期比重-必考" class="headerlink" title="2.1.1 现期比重(必考)"></a>2.1.1 <strong><font color='red'>现期比重(必考)</font></strong></h4><p>A占B的比重</p><ul><li>$现期比重 &#x3D; \frac {A}{B}$</li></ul><h4 id="2-1-2-基期比重-少考"><a href="#2-1-2-基期比重-少考" class="headerlink" title="2.1.2 基期比重(少考)"></a>2.1.2 基期比重(少考)</h4><ul><li><p>$基期比重 &#x3D; \frac {A}{1+a} \div \frac {B}{1+b} &#x3D; \frac {A}{B} \times \frac {1+b}{1+a}$​</p><blockquote><p>适用于：</p><p>2021年分公司收入A，较上年增长a；总公司收入B，较上年增长b，则2020年分公司占比总公司收入的多少？</p></blockquote></li></ul><h4 id="2-1-3-两期比重相比-必考"><a href="#2-1-3-两期比重相比-必考" class="headerlink" title="2.1.3 两期比重相比(必考)"></a>2.1.3 <strong><font color='red'>两期比重相比(必考)</font></strong></h4><ul><li>现期与基期的比重相比<strong>上升(增加)&#x2F;下降(减少)<strong>：$\frac{A}{B} 大于或小于 \frac {A}{B} \times \frac {1+b}{1+a}，取决于a是否大于b$​，也就是</strong><font color='red'>部分的增速大于整体的增速，那么现期的比重就比基期的大</font>，注意搞清楚谁是a谁是b，一定是A占B的比重，有时候A不一定是部分、B不一定是整体，因此要区分好A和B、a和b。</strong></li><li>现期与基期的比重相比<strong>上升&#x2F;下降了几个百分点</strong>：$现期比重 - 基期比重 &#x3D; \frac{A}{B} - \frac {A}{B} \times \frac {1+b}{1+a} &#x3D; \frac{A}{B} \times \frac{a-b}{1+a}，比重差 &lt; |a-b|$​</li></ul><h3 id="2-2-平均数"><a href="#2-2-平均数" class="headerlink" title="2.2 平均数"></a>2.2 平均数</h3><h4 id="2-2-1-现期平均数-必考"><a href="#2-2-1-现期平均数-必考" class="headerlink" title="2.2.1 现期平均数(必考)"></a>2.2.1 <strong><font color='red'>现期平均数(必考)</font></strong></h4><ul><li>题型识别：求现在 + 平均每（单位面积&#x2F;单价）</li><li>计算公式：$平均数 &#x3D; \frac{总数}{个数}$</li><li>计算形式：$后 {\div} 前$​<ul><li>$人均收入 &#x3D; 收入 {\div} 人数$</li><li>$单位面积产量 &#x3D; 产量 {\div} 面积$</li></ul></li></ul><h4 id="2-2-2-基期平均数-几乎不考"><a href="#2-2-2-基期平均数-几乎不考" class="headerlink" title="2.2.2 基期平均数(几乎不考)"></a>2.2.2 基期平均数(几乎不考)</h4><p>和基期比重相同的公式：$\frac {A}{B} \times \frac {1+b}{1+a}$</p><h4 id="2-2-3-两期平均数相比-常考"><a href="#2-2-3-两期平均数相比-常考" class="headerlink" title="2.2.3 两期平均数相比(常考)"></a>2.2.3 <strong><font color='red'>两期平均数相比(常考)</font></strong></h4><p>公式和两期比重相比一样(现期平均比重-基期平均比重)：$\frac{A}{B} \times \frac{a-b}{1+a}$</p><p>现期与基期相比，人均收入···</p><ul><li>**上升(增加)**：a&gt;b</li><li>**下降(减少)**：a&lt;b</li><li>不变：a&#x3D;b</li></ul><p><strong><font color='red'>平均数增长率 &#x3D; $\frac {a-b}{1+b}$，注意负号</font></strong></p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/4.%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90_2.2_1.png" alt="4.资料分析_2.2_1"></p><h3 id="2-3-倍数"><a href="#2-3-倍数" class="headerlink" title="2.3 倍数"></a>2.3 倍数</h3><ul><li>现期倍数 &#x3D; $\frac{A}{B}$</li><li>基期倍数 &#x3D; $\frac {A}{B} \times \frac {1+b}{1+a}$​</li></ul><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/4.%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90_2.3_1.png" alt="4.资料分析_2.3_1"></p><h3 id="2-4-特殊增长率"><a href="#2-4-特殊增长率" class="headerlink" title="2.4 特殊增长率"></a>2.4 特殊增长率</h3><h4 id="2-4-1-间隔增长率-常考"><a href="#2-4-1-间隔增长率-常考" class="headerlink" title="2.4.1 间隔增长率(常考)"></a>2.4.1 间隔增长率(常考)</h4><p>2020年工资同比增长率为$r_1$，2019年工资同比增长率为$r_2$，求2020年与2018年相比的增长率为$r_{间隔}$。</p><ul><li>公式 &#x3D; $r_{间隔} &#x3D; r_1 + r_2 + r_1 \times r_2$​</li></ul><p>2020年工资是2019年的多少倍？</p><ul><li>间隔倍数 &#x3D; 间隔增长率 + 1</li><li>$间隔基期量 &#x3D; \frac {现期}{1+r_{间隔}}$</li></ul><h4 id="2-4-2-年均增长率-比较常考，计算几乎不考"><a href="#2-4-2-年均增长率-比较常考，计算几乎不考" class="headerlink" title="2.4.2 年均增长率(比较常考，计算几乎不考)"></a>2.4.2 年均增长率(比较常考，计算几乎不考)</h4><p>单利：$本金 + 利息 \times 年份$</p><p>复利(利滚利)：$本金 \times (1+利息)^{年份}$​</p><ul><li>比大小：$(1+增长率)^{年份差} &#x3D; \frac{现期量}{基期量}$，年份相同，直接比较$\frac{现期量}{基期量}$</li></ul><h4 id="2-4-3-混合增长率-必考重点"><a href="#2-4-3-混合增长率-必考重点" class="headerlink" title="2.4.3 混合增长率(必考重点)"></a>2.4.3 混合增长率(必考重点)</h4><p>已知前三季度增长率，四季度增长率，求全年增长率？</p><ul><li>混合后总体居中（最小r &lt; 总体r &lt; 最大r)</li></ul><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/4.%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90_2.4_1.png" alt="4.资料分析_2.4_1"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公考题之申论</title>
      <link href="/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/"/>
      <url>/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="1-申论基础"><a href="#1-申论基础" class="headerlink" title="1 申论基础"></a>1 申论基础</h1><h2 id="1-1-申论能力考查"><a href="#1-1-申论能力考查" class="headerlink" title="1.1 申论能力考查"></a>1.1 申论能力考查</h2><ul><li>阅读理解能力：全面把握给定资料的相关内容，准确理解给定资料的含义，准确提炼事实所包含的观点，并揭示所反映的本质问题。</li><li>综合分析能力：一对给定资料的全部或部分的内容、观点或问题进行分析和归纳，多角度地思考资料内容，作出合理的推断或评价。</li><li>提出和解决问题能力：一准确理解把握给定资料所反映的问题提出解决问题的措施或办法。</li><li>文字表达能力：熟练使用指定的语种，运用说明、陈述、议论等方式，准确规范、简明畅达地表述思想观点。</li></ul><h2 id="1-2-申论答题要素"><a href="#1-2-申论答题要素" class="headerlink" title="1.2 申论答题要素"></a>1.2 申论答题要素</h2><h3 id="1-2-1-问题"><a href="#1-2-1-问题" class="headerlink" title="1.2.1 问题"></a>1.2.1 问题</h3><p>主要指负面的现象或事件，问题可能是深层次和也可能是表面的消极表达，一般为“否定+名词”或“名词+否定”</p><h3 id="1-2-2-危害"><a href="#1-2-2-危害" class="headerlink" title="1.2.2 危害"></a>1.2.2 危害</h3><p>是指一些负面的、消极的、恶劣的社会影响，表述有“不利于···、影响了···、损害了···、破坏了···、引发了···、导致···”</p><h3 id="1-2-3-意义"><a href="#1-2-3-意义" class="headerlink" title="1.2.3 意义"></a>1.2.3 意义</h3><p>意义是指时间或政策所带来的好的、积极的、正面的影响和作用，表述有“有利于···、改善了···、增强了···、促进了···、缓解了···、推动了···、助推了···”</p><h3 id="1-2-4-对策"><a href="#1-2-4-对策" class="headerlink" title="1.2.4 对策"></a>1.2.4 对策</h3><p>对策是指一些解决办法、建议、举措等，表述有“加强···、提高···、完善···、制定···、转变···、强化···”</p><h3 id="1-2-5-事例"><a href="#1-2-5-事例" class="headerlink" title="1.2.5 事例"></a>1.2.5 事例</h3><p>将资料中的事例作为论据进行论证，要求概括简单明了</p><h2 id="1-3-申论基本题型"><a href="#1-3-申论基本题型" class="headerlink" title="1.3 申论基本题型"></a>1.3 申论基本题型</h2><h3 id="1-3-1-单一题"><a href="#1-3-1-单一题" class="headerlink" title="1.3.1 单一题"></a>1.3.1 单一题</h3><p>题干要求明确且需要回答一个或较少要素的问题，如上面的“问题、危害、意义、对策、事例”等</p><h3 id="1-3-2-综合题"><a href="#1-3-2-综合题" class="headerlink" title="1.3.2 综合题"></a>1.3.2 综合题</h3><p>要求对某种事件的理解，问法比较笼统</p><h3 id="1-3-3-公文写作题"><a href="#1-3-3-公文写作题" class="headerlink" title="1.3.3 公文写作题"></a>1.3.3 公文写作题</h3><p>要求写一份材料，如宣讲稿、编者按、倡议书、同志、新闻稿等</p><ul><li>提纲：只写正文即可，保险起见可以提项标题</li><li>非提纲：需要考虑格式、标题、称谓和落款</li></ul><p>纵向上，提纲要按照“开头+主题+结尾”</p><p>横向上，各段落要分点分条作答</p><h3 id="1-3-4-文章写作题"><a href="#1-3-4-文章写作题" class="headerlink" title="1.3.4 文章写作题"></a>1.3.4 文章写作题</h3><p>一般为申论最后一题，要求字数1000-1200，文章观点明确、结构完整、论证充分、语言流畅等</p><h2 id="1-4-申论答题步骤"><a href="#1-4-申论答题步骤" class="headerlink" title="1.4 申论答题步骤"></a>1.4 申论答题步骤</h2><h3 id="1-4-1-申清题意——确定答题方向"><a href="#1-4-1-申清题意——确定答题方向" class="headerlink" title="1.4.1 申清题意——确定答题方向"></a>1.4.1 申清题意——确定答题方向</h3><ol><li>范围</li><li>主题</li><li>答题要求<ol><li>准确</li><li>全面。多炒关键词，宁滥勿缺</li><li>简洁。去掉修饰词</li></ol></li></ol><h3 id="1-4-2-宏观阅读——定位资料"><a href="#1-4-2-宏观阅读——定位资料" class="headerlink" title="1.4.2 宏观阅读——定位资料"></a>1.4.2 宏观阅读——定位资料</h3><p>目的是通过浏览材料，明确题目和资料的对应关系，掌握命题人的思维和观点倾向</p><h3 id="1-4-3-微观阅读——挖掘关键词"><a href="#1-4-3-微观阅读——挖掘关键词" class="headerlink" title="1.4.3 微观阅读——挖掘关键词"></a>1.4.3 微观阅读——挖掘关键词</h3><p>寻找关键字，如出现频率高、高概括性、高规范、直接与题目相关。</p><p>注意分段，注意段落是“总分”、“分总”还是“总分总”的格式。</p><p>注意关联词：</p><table><thead><tr><th align="left">关联词</th><th align="left">例子</th><th align="left">重要性</th></tr></thead><tbody><tr><td align="left">转折</td><td align="left">但是、其实、只是、当然</td><td align="left">重点在转折之后</td></tr><tr><td align="left">并列</td><td align="left">又、此外、另外、一方面。“；”“、”</td><td align="left">前后信息同等重要</td></tr><tr><td align="left">因果</td><td align="left">因此、所以、因而、可见、总之、导致</td><td align="left">因和果哪个重要取决于问题</td></tr><tr><td align="left">递进</td><td align="left">不但，而且、更、甚至、尤其、重要的是</td><td align="left">前后同等重要</td></tr></tbody></table><h1 id="2-单一题"><a href="#2-单一题" class="headerlink" title="2 单一题"></a>2 单一题</h1><p>单一题即作答要素明确且相对较少的题目。作答要素即为题干中 明确指出的作答任务，如问题、对策、意义、变化、特点等。</p><p>单一题的答案结构相对简单明了。 </p><ol><li>外在形式上体现为答案分条列点，常见的方法是加序号，即 “1. 2. 3.”或“①②③”或“一、二、三、”。 </li><li>内在逻辑上要确保每条要点话题一致，要点之间在内容上无 交叉重叠；同时为了更好地体现答案逻辑，建议每条要点前都加上总 括性信息。</li></ol><h2 id="2-1-单一题问题类"><a href="#2-1-单一题问题类" class="headerlink" title="2.1 单一题问题类"></a>2.1 单一题问题类</h2><p>常见问法：表问题的常见词汇：问题、不足、困境、瓶颈、挑战、难点等。</p><p>答题技巧。 </p><ol><li>直接摘抄。寻找**<font color='red'>负面</font>**的标志性词汇：不科学、不合理、不到位、 不均衡、不完善、不健全、不足；缺乏、缺少、缺失；少、低、差、 弱、陈旧、单一等。 </li><li>归纳概括。对案例型资料、数据型资料等进行精准归纳概括。 </li><li>分析推导。对建议型表达或对比型资料进行分析推导。</li></ol><h2 id="2-2-单一问题影响类"><a href="#2-2-单一问题影响类" class="headerlink" title="2.2 单一问题影响类"></a>2.2 单一问题影响类</h2><p>常见问法：影响大致可以分成正面影响和负面影响两类。在近几年的申论考试中，影响类题目出现频次更多的为“意义”。 </p><ol><li>正面影响的常见问法：意义、效果、成果、积极作用等。 </li><li>负面影响的常见问法：危害、后果等。</li></ol><p>答题技巧：</p><ol><li>正面影响。 直接摘抄：激发、促进、实现、提升、倒逼…… ；有利于、有助 于、感动着、推动了、巩固了…… 通过问题进行推导：资料中想通过某项举措去解决问题，或者问题已经被措施解决了，可以将问题推导为意义。 通过目的进行推导：资料中出现表示目的或目标的信息时，可推导为意义。 </li><li>负面影响。常见的表负面影响的词汇：引发、导致、造成、危 及、损害…… ；消解着、割裂着、破坏了、阻碍了、致使…… ③影响是由主题带来的改变，寻找要点时要以主题为参照系，时刻关注主题之后的要点信息。“影响”这一要素的信息表达形式是灵活的，因此在阅读资料时，不要只关注结果性的表达。</li></ol><h2 id="2-3-单一题对策类"><a href="#2-3-单一题对策类" class="headerlink" title="2.3 单一题对策类"></a>2.3 单一题对策类</h2><h3 id="2-3-1-资料中有哪些对策"><a href="#2-3-1-资料中有哪些对策" class="headerlink" title="2.3.1 资料中有哪些对策"></a>2.3.1 资料中有哪些对策</h3><p>常见问法： 对策、措施、举措、建议、意见、做法、解决方法、经验、启示、如何···等。</p><p>答题技巧：摘抄或归纳概括。 资料中出现表对策的标志性动词时，往往有得分点，可直接摘抄资料中已有的对策。常见的动词有：建立、健全、统筹、创新、规范、 整顿、打击、扶持、规划、设置等。</p><blockquote><p>改变生活习惯，转变思想意识。制定居民公约，围绕社区生活进行规范；举办评选活动，树立文明、奉献等领域的榜样，引导搬迁群众转变观念。</p></blockquote><h3 id="2-3-2-带来什么启示（经验）"><a href="#2-3-2-带来什么启示（经验）" class="headerlink" title="2.3.2 带来什么启示（经验）"></a>2.3.2 带来什么启示（经验）</h3><p>去掉过于具体的、个性化的例子，去掉国情，不知道写什么部门就写<strong>有关部门</strong></p><h3 id="2-3-3-提出对策建议"><a href="#2-3-3-提出对策建议" class="headerlink" title="2.3.3 提出对策建议"></a>2.3.3 提出对策建议</h3><p>题型识别：</p><blockquote><p>【例 1】根据资料 1，就如何解决城中村存在的问题提出对策。（30 分） 要求：（1）考虑全面，对策合理，条理清晰；（2）总字数不超过 400 字。 </p><p>【例 2】根据“给定资料 1”，分析部分城市马拉松赛事存在的主要问题并提出相应的改进措施。（20 分） 要求：（1）紧扣资料，符合实际；（2）表达准确，条理清晰；（3）字 数不超过 400 字。 </p></blockquote><p>答题技巧：</p><ol><li>通过问题反推。解决资料中的现有问题，提出对策的基本要求，为：具有针对性、可行性、可操作性，切实可行等。 </li><li>直接摘抄或归纳概括。 </li><li>借鉴他人的做法。</li></ol><blockquote><p>【例 1】针对人行道所存在的问题提出解决措施。 人行道上窨井盖凸出或凹陷，电表箱随意设置等，也影响行人通行。记者走访时发现，一些人行道边上的电表箱离地面不足 1.5 米， 行人走路经过时，稍不留意就会被碰到。</p><p>答：保持井盖齐平，升高电表箱位置</p><p>【例 2】针对资料中农村存在的问题提出对策。 通过对 H 省将近 60 多位村民的走访调研，不难得出结论，当地 农业面源污染的源头正是来自村民。“大家平日里施用农药、化肥， 把生活废水排放到河里，这些不是很正常吗？”一位村民的话很具有 代表性。这些行为暴露出了部分农民环保意识差。 </p><p>答：提高环保意识。杜绝生活废水乱排现象</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">高频对策 ==头==&gt; 观念</span><br><span class="line">观念 --&gt; id1[&quot;树立...意识、观念、价值观、政绩观&quot;]</span><br><span class="line">观念 --&gt; id2[&quot;科学规划、合理布局、创新模式&quot;]</span><br><span class="line">高频对策 ==眼睛==&gt; 监督</span><br><span class="line">监督 --&gt; 内部制度监督 --&gt; id3[&quot;规则、制度、体制机制；</span><br><span class="line">法律（立法，前置性、权威性、系统性、违法成本高)；</span><br><span class="line">政策，方针&quot;]</span><br><span class="line">监督 --&gt; 外部制度监督 --&gt; id4[&quot;群众举报，参与，监督，投诉渠道通畅；</span><br><span class="line">媒体曝光，披露问题，信息公开透明&quot;]</span><br><span class="line">高频对策 ==嘴==&gt; 宣传 --&gt; id5[&quot;引导，劝服，做思想工作，转变看法；</span><br><span class="line">密切联系，交流、沟通、对话&quot;] &amp; id6[&quot;宣传，传播（活动、多媒体、横幅、标语），营造氛围；</span><br><span class="line">普及，培训，提升技能，传播知识&quot;]</span><br><span class="line">高频对策 ==手==&gt;</span><br><span class="line">管服 --&gt; 投入 --&gt; id7[&quot;资金（税收、财政、融资渠道)，</span><br><span class="line">人才（年轻人才，复合人才，高精尖人才，人才队伍)，</span><br><span class="line">技术（研发、专利），</span><br><span class="line">设施（设备，硬件、软件，基础、公共设施，生活、生产设施)，</span><br><span class="line">时间、精力&quot;]</span><br><span class="line">管服 --&gt; 管理与服务 --&gt; id8[&quot;监管（源头监管，过程监管），权责分明，部门联动；</span><br><span class="line">服务（态度，方式），流程精简&quot;]</span><br></pre></td></tr></table></figure><h1 id="3-综合题"><a href="#3-综合题" class="headerlink" title="3 综合题"></a>3 综合题</h1><h2 id="3-1-词句解释题"><a href="#3-1-词句解释题" class="headerlink" title="3.1 词句解释题"></a>3.1 词句解释题</h2><p>题型判断：</p><ul><li>谈……的**<font color='red'>含义</font>**</li><li>对……进行**<font color='red'>解释</font>**</li><li>谈对……的**<font color='red'>理解</font>**</li></ul><p>答题思路：</p><ol><li>内涵。释义：可理解为**<font color='red'>下定义</font><strong>，就近原则。</strong><font color='red'>短</font>**</li><li>外延。分析相关要素：如问题、原因、意义、危害等。**<font color='red'>长</font>**</li><li>解决。对策：材料有则摘抄；材料没有根据答题格子处理。**<font color='red'>短</font>**</li></ol><h2 id="3-2-观点现象分析题"><a href="#3-2-观点现象分析题" class="headerlink" title="3.2 观点现象分析题"></a>3.2 观点现象分析题</h2><p>题型判断：</p><ul><li>对……**<font color='red'>观点</font>** &#x2F; 现象的见解 &#x2F; <strong><font color='red'>看法</font></strong> &#x2F; 评价 &#x2F; 评析 &#x2F; 认识。</li><li>要求中出现：**<font color='red'>观点明确</font>**、分析透彻、论证充分、有理有据、 论据充实等。</li></ul><p>常规思路：</p><ol><li>表态。 表态要依据题干和资料，而非个人主观判断。当资料中出现体现 态度的信息时，要优先采用资料原词。</li><li>分析理由。 围绕主题，写出资料中能够支撑态度的各种要素（如问题、原因、 意义、危害等）。</li><li>对策。 应该怎么做：资料中有则摘抄；资料中没有，字数允许则补充。</li></ol><p>高分技巧 ：</p><ol><li>表态的方法及常用表态词汇。 <strong><font color='red'>多写</font></strong><ul><li>赞同的：值得肯定&#x2F;推广&#x2F;发扬、正确的、科学的、合理的、全面的等。 </li><li>反对的：不科学的、不合理的、不支持的、错误的、偏颇的、偏 激的、绝对的、片面的等。 </li><li>辩证看待、未知的：有积极方面、也有消极方面，有利有弊，有待考证，有待观察，尚未有定论等。</li></ul></li><li>注意特殊要求。 有理有据，论据充实（答案中要有例证）。</li></ol><h1 id="4-公文写作"><a href="#4-公文写作" class="headerlink" title="4 公文写作"></a>4 公文写作</h1><p>题型识别：量词+文种</p><p>阅卷要求：</p><ul><li>格式分(3-8分)：标题、称谓（主送机关）、落款。 </li><li>内容分(15分左右)：问题、危害、意义、对策等。 </li><li>语言分(3分)：通俗易懂、表达生动、有感染力、有号召力、态度诚恳、 建议口吻等。</li></ul><h2 id="4-1-格式"><a href="#4-1-格式" class="headerlink" title="4.1 格式"></a>4.1 格式</h2><ol><li>标题<ol><li>给定标题直接照抄</li><li>未给定标题“(发文机关) + 关于 + 主题 + 的文种”</li><li>标题要居中书写，不加书名号</li></ol></li><li>称谓<ol><li>称谓（对象为人物）。例如：尊敬的与会嘉宾、广大家长朋友们等。</li><li>主送机关（对象为单位）。例如：各社区、各街道办等。</li><li>书写格式。顶格书写。</li></ol></li><li>落款<ol><li>单位（个人）。例如：某企业工会（写在时间上一行）。</li><li>时间。例如：2022年××月××日或者××××年××月××日。</li><li>书写格式。落款位于正文右下方，日期右空四个格子，发文者以日期为准上方居中。</li></ol></li></ol><p>公文有无格式对应表</p><table><thead><tr><th>题目</th><th>标题</th><th>称谓</th><th>落款</th></tr></thead><tbody><tr><td>报告、通告、意见、通知等</td><td>✔️</td><td>✔️</td><td>✔️</td></tr><tr><td>倡议书、公开信、宣传稿</td><td>✔️</td><td>✔️</td><td>✔️</td></tr><tr><td>经验发言稿、事件处理发言稿</td><td>✔️</td><td>✔️</td><td>根据格子确定</td></tr><tr><td>时评、网评、新闻稿等</td><td>✔️</td><td>❌</td><td>❌</td></tr><tr><td>调查问卷、活动方案、提纲等</td><td>✔️</td><td>❌</td><td>❌</td></tr><tr><td>明确要求不写公文格式的命题方式</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><p>注：除非题目要求不要格式</p><h2 id="4-2-正文内容"><a href="#4-2-正文内容" class="headerlink" title="4.2 正文内容"></a>4.2 正文内容</h2><h3 id="4-2-1-开头"><a href="#4-2-1-开头" class="headerlink" title="4.2.1 开头"></a>4.2.1 开头</h3><ul><li>背景式。介绍政策背景或社会背景</li><li>目的式。为了···做了以下努力&#x2F;制定了xx政策</li></ul><h3 id="4-2-2-主体"><a href="#4-2-2-主体" class="headerlink" title="4.2.2 主体"></a>4.2.2 主体</h3><p>公文写作题往往没有固定的写作重点，只能精准审题，学会预判</p><h3 id="4-2-3-结尾"><a href="#4-2-3-结尾" class="headerlink" title="4.2.3 结尾"></a>4.2.3 结尾</h3><p>结尾形式一般比较灵活，有时候甚至可以不写</p><ol><li>总结式，对主体内容进行总结</li><li>呼吁式。呼吁有关方面行动起来</li><li>警醒式。针对存在的问题发出警告，以警示大家</li></ol><h2 id="4-3-方案类"><a href="#4-3-方案类" class="headerlink" title="4.3 方案类"></a>4.3 方案类</h2><ul><li><p>识别：方案类公文主要是为某个或者某些对象能够更好地完成工作或任 务而进行的规划，一般侧重对策、建议、具体做法。</p></li><li><p>典型的方案类公文：指导意见、建议、活动方案等。</p></li><li><p>框架：</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/6.%E7%94%B3%E8%AE%BA_4.3_1.png" alt="6.申论_4.3_1"></p></li></ul><h2 id="4-4-总结类"><a href="#4-4-总结类" class="headerlink" title="4.4 总结类"></a>4.4 总结类</h2><ul><li><p>总结类公文的识别。 总结类公文的主要目的是把具体情况告知或汇报给某个或者某些 对象（其中具体情况中的要素要根据给定资料来确定）。</p></li><li><p>典型的总结类公文。 汇报（提纲）、调查报告、简报、编者按等。</p></li><li><p>框架：</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/6.%E7%94%B3%E8%AE%BA_4.4_1.png" alt="6.申论_4.4_1"></p></li></ul><p>写提纲的时候，要标明“背景、经验、结尾”这几个字。</p><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/6.%E7%94%B3%E8%AE%BA_4.4_2.png" alt="6.申论_4.4_2"></p><h2 id="4-5-宣传类"><a href="#4-5-宣传类" class="headerlink" title="4.5 宣传类"></a>4.5 宣传类</h2><p>宣传类公文的识别： 宣传类公文的主要目的是通过<strong>说服或宣传</strong>某种特定内容等<strong>转变他人的认知</strong>、看法，增长知识，进而<strong>倡导被宣传对象采取某些行动或措施</strong>。</p><p>典型的宣传类公文：公开信、倡议书、宣传稿等。 </p><p><img src="/./../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/6.%E7%94%B3%E8%AE%BA_4.5_1.png" alt="6.申论_4.5_1"></p><h2 id="4-6-评论类"><a href="#4-6-评论类" class="headerlink" title="4.6 评论类"></a>4.6 评论类</h2><p>评论类公文的识别：评论类公文的目的是对某些现象或观点进行评价。 </p><p>典型的评论类公文：时评、评论文等。 </p><p>评论类公文的写作框架：</p><p><img src="/./../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E7%94%B3%E8%AE%BA/6.%E7%94%B3%E8%AE%BA_4.6_1.png" alt="6.申论_4.6_1"></p><h1 id="5-文章写作"><a href="#5-文章写作" class="headerlink" title="5 文章写作"></a>5 文章写作</h1><h2 id="5-1-文章标准"><a href="#5-1-文章标准" class="headerlink" title="5.1 文章标准"></a>5.1 文章标准</h2><ul><li>观点鲜明：题干和资料中指的观点是什么，这个不能跑偏。包括（是什么 + 为什么 + 对策）</li><li>个人体会：自己编一个例子作为论据，不拘泥于材料里的，一定要有材料外的</li><li>感触：要在开头和结尾有自己的感情色彩，让我感触颇多什么的</li><li>结构严谨：标题 + 开头 + 分析（3个分论点） + 对策（1-2个对策）  + 结尾</li></ul><p>技巧总结：</p><ol><li>观点：准确、全面、明显、价值观正确</li><li>论据：贴切，丰富。材料之内的要改变表述，多用新闻热点、领导人讲话、名人名言与典故</li><li>结构：清晰、完整、自然</li><li>语言：流畅、自然、多用短句、有风格（文采）、字舒服</li></ol><h2 id="5-2-文章的主题和观点"><a href="#5-2-文章的主题和观点" class="headerlink" title="5.2 文章的主题和观点"></a>5.2 文章的主题和观点</h2><ol><li>剖析题干，梳理写作方向</li><li>提炼写作角度</li></ol><h2 id="5-3-文章结构"><a href="#5-3-文章结构" class="headerlink" title="5.3 文章结构"></a>5.3 文章结构</h2><h3 id="5-3-1-标题"><a href="#5-3-1-标题" class="headerlink" title="5.3.1 标题"></a>5.3.1 标题</h3><ol><li><p>常规</p><ul><li><p>把简政放权做实做好(把××做实做好)</p></li><li><p>加强信用体系建设势在必行（××势在必行)</p></li><li><p>夜间经济助力城市发展(××助力××)</p></li><li><p>重中之重</p></li><li><p>···是关键&#x2F;基础&#x2F;迫在眉睫</p></li><li><p>用···加强···</p></li><li><p>···需要···</p></li></ul></li><li><p>比喻</p><p>经济：引擎、马车、助燃剂、换挡、弯道、烟火气</p><p>社会治理：组合拳、同心圆、温情、”大脑”、“聪明”</p><p>文化：源泉、沃土、根、生命力、“入海口”、精神家园</p><p>民生：晴雨表、传声筒、赶考、答好“试卷”、短板、一纸空文</p><p>生态：红线、安全线、绿水青山、钱袋子、新画卷、新境界</p></li><li><p>警醒式（一般用不到）</p><ul><li>莫让···一时</li><li>···，不要以···为代价</li><li>···，勿以</li></ul></li><li><p>对称式</p><p>开放文化资源 促进共享传承</p><p>良法殷殷嘱托 行者莫忘善治</p><p>激发内生动力 推动可持续发展</p><p>提振、铸就、镶嵌、涵养</p></li></ol><h3 id="5-3-2-开头"><a href="#5-3-2-开头" class="headerlink" title="5.3.2 开头"></a>5.3.2 开头</h3><ul><li><p>背景 + 罗列问题 + 中心论点</p></li><li><p>解释话题 + 罗列问题 + 中心论点</p></li></ul><h3 id="5-2-3-论证"><a href="#5-2-3-论证" class="headerlink" title="5.2.3 论证"></a>5.2.3 论证</h3><p>框架结构：分论点+解释&#x2F;总结+正面对比+反面对比+回扣</p><ul><li><p>举例论证：用一个典型案例或者多个案例来证明观点。</p></li><li><p>道理论证：运用讲道理的方法来证明观点。</p></li><li><p>引用论证：引用名言、国家政策、科学原理等来证明观点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">subgraph one</span><br><span class="line">名言 --&gt; 俗语 &amp; 古语</span><br><span class="line">end</span><br><span class="line">one --&gt; 经济 &amp; 民生 &amp; 治理</span><br><span class="line">经济 --&gt; id1.1[&quot;苟日新，日日新&quot;] &amp; id1.2[&quot;变则通，通则久&quot;]</span><br><span class="line">    民生 --&gt; id2.1[&quot;水能载舟亦能覆舟&quot;] &amp; id2.2[&quot;江山就是人民&quot;] &amp; id2.3[&quot;先天下之忧而忧，后天下之乐而乐&quot;]</span><br><span class="line">    治理 --&gt; id3.1[&quot;当家不为民做主，不如回家卖红薯&quot;] &amp; id3.2[&quot;大道之行，天下为公&quot;]</span><br></pre></td></tr></table></figure></li></ul><p>经济例子：</p><ul><li>董明珠的格力品牌“我为中国制造代言”，代表的是中国的智能品牌</li><li>小米的智能云家居的创新</li><li>华为的5G敢为人先</li><li>诺基亚落后于时代越来越差</li></ul><p>文化：</p><ul><li>综艺 + 电视剧</li><li>《国家宝藏》《我在故宫修文物》《舌尖上的中国》《功夫熊猫》</li></ul><p>社会、民生：</p><ul><li>积累政策。三孩政策；限塑令，保护环境的意识。</li></ul><h3 id="5-2-4-结尾"><a href="#5-2-4-结尾" class="headerlink" title="5.2.4 结尾"></a>5.2.4 结尾</h3><p>扣题 + 展望&#x2F;总结&#x2F;呼吁</p><h1 id="6-公文类型"><a href="#6-公文类型" class="headerlink" title="6 公文类型"></a>6 公文类型</h1><ul><li><p>编者按</p><blockquote><p>编者按：正文（开头+主体+结尾）</p></blockquote></li><li><p>材料</p><blockquote><p>标题</p><p>称谓</p><p>正文（开头+主体+结尾）</p></blockquote></li><li><p>摘要</p><blockquote><p>标题</p><p>正文（开头+主体+结尾(材料是否有涉及到结尾)）</p></blockquote></li><li><p>简报</p><blockquote><p>标题</p><p>称谓        年月日</p><p>正文（开头+主体+结尾）</p></blockquote></li><li><p>提纲</p><blockquote><p>标题</p><p>正文（背景、经验、结尾）</p></blockquote></li><li><p>宣传单</p><blockquote><p>标题</p><p>称谓</p><p>正文（开头+主体+结尾）</p><p>落款</p><p>年月日</p></blockquote></li><li><p>评论</p><blockquote><p>标题</p><p>正文（开头+主体+结尾）</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公考题之数量关系</title>
      <link href="/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/"/>
      <url>/2024/03/14/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="数量关系（10-15）"><a href="#数量关系（10-15）" class="headerlink" title="数量关系（10-15）"></a>数量关系（10-15）</h1><h2 id="1-核心方法"><a href="#1-核心方法" class="headerlink" title="1 核心方法"></a>1 核心方法</h2><h3 id="1-1-代入排除法"><a href="#1-1-代入排除法" class="headerlink" title="1.1 代入排除法"></a>1.1 代入排除法</h3><ol><li><p>特定题型</p><ul><li><p>多位数：涉及到位数变化，如“个位”“百位”</p><ul><li><strong><font color='red'>当条件提及个位时，优先观察尾数5或0</font></strong></li></ul><blockquote><p>【补例1】一个三位数，十位和个位对调，比原来大9，问：这个三位数可能是几？</p></blockquote></li><li><p>年龄：涉及到年龄的问题</p><blockquote><p>【补例2】2021年，小明和小华年龄之和为20岁，小明比小华大2岁。问小明2021年的年龄是多大？</p></blockquote></li><li><p>不定方程：未知数个数多于方程个数</p><blockquote><p>【补例3】3x+2y&#x3D;10,×、y均为正整数，求：×、y的值：</p></blockquote></li><li><p>余数：出现“剩”、“余”、“缺”等关键字、平均分组问题</p><ul><li><strong><font color='red'>条件中每组的人数加余数，答案一定是它的倍数，这个倍数一般是平方</font></strong></li></ul><blockquote><p>【补例4】金数，号除以7余3，除以8余2，除以9余1，问：这个数可能是几？</p></blockquote></li></ul></li></ol><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_1.1_1.png" alt="3.数量关系_1.1_1"></p><h3 id="1-2-数字特性法"><a href="#1-2-数字特性法" class="headerlink" title="1.2 数字特性法"></a>1.2 数字特性法</h3><p>题型：不定方程、平均数、和差倍比、余数</p><h4 id="1-2-1-奇偶特性"><a href="#1-2-1-奇偶特性" class="headerlink" title="1.2.1 奇偶特性"></a>1.2.1 奇偶特性</h4><ol><li><p>相加减：奇奇偶；偶偶偶；奇偶奇；偶奇奇</p><p><strong><font color='red'>同奇同偶才为偶，一奇一偶则为奇</font></strong></p><p>和为奇，则差为奇；和为偶，则差为偶</p></li><li><p>相乘：奇奇奇；奇偶偶；偶奇偶；偶偶偶</p><p><strong><font color='red'>一个为偶则为偶，全部为奇才为奇</font></strong></p></li></ol><h4 id="1-2-2-倍数特性"><a href="#1-2-2-倍数特性" class="headerlink" title="1.2.2 倍数特性"></a>1.2.2 倍数特性</h4><ol><li><p>整除型：平均分配（物品&#x2F;人数）</p><p><strong><font color='red'>等差数列总和 &#x3D; 中间项 × 个数</font></strong></p></li><li><p>余数型</p><p>**<font color='red'>答案 &#x3D; ax ± b</font><strong>，那么</strong><font color='red'>答案 ∓ b</font>**一定可以被a整除</p></li><li><p>比例型</p><blockquote><p>已知${A \over B} &#x3D; {m\over n}$，则：</p><p>A 是 m 的倍数</p><p>B 是 n 的倍数</p><p>A + B 是 m + n 的倍数</p><p>A - B 是 m - n 的倍数</p></blockquote><p><strong><font color='red'>若已知A占其他数总和的 $1 \over N$ ，则A占所有总和的 $1 \over N+1$ </font></strong></p><blockquote><p>A比B多25%，则 ${A \over B} &#x3D; {1+25% \over 1} &#x3D; {125 \over 100} &#x3D; {5 \over 4}$ </p><p>A比B少25%，则 ${A \over B} &#x3D; {1-25% \over 1} &#x3D; {75 \over 100} &#x3D; {3 \over 4}$</p></blockquote></li></ol><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_1.2.2_1.png" alt="3.数量关系_1.2.2_1"></p><p><strong>整除判定基础知识</strong></p><ol><li><p>一般用口诀法</p><p>3&#x2F;9的倍数看各位数字之和；2&#x2F;5看末1位；4&#x2F;25看末2位；8&#x2F;125看后3位。</p></li><li><p>没口诀的用拆分法</p><p>判断X÷7能否整除：把X拆成7的倍数±零头，只看零头能否被7整除)</p></li><li><p>复杂倍数用因式分解</p><p>判断X÷12能否整除：只需判断X÷3和X÷4都能整除；$36&#x3D;4 \times 9；18&#x3D;2 \times 9$；</p></li></ol><p><strong><font color='red'>注意分解后的2个数必须没有公约数，即互质（3和4除了1没有其他公约数，这就叫互质，但是2和6还有一个2，即不互质）。这是因为一个数字如果能够被X和Y都整除，那么它一定能够被它们的最小公倍数整除（3和4的最小公倍数是它们的乘积12，而2和6的最小公倍数是6）。</font></strong></p><h3 id="1-3-方程法"><a href="#1-3-方程法" class="headerlink" title="1.3 方程法"></a>1.3 方程法</h3><h4 id="1-3-1-普通方程"><a href="#1-3-1-普通方程" class="headerlink" title="1.3.1 普通方程"></a>1.3.1 普通方程</h4><blockquote><p>技巧：</p><p>设小不设大，减少分数计算</p><p>设中间量，方便列式</p><p>按比例设</p><p>问谁设谁</p></blockquote><h4 id="1-3-2-不定方程"><a href="#1-3-2-不定方程" class="headerlink" title="1.3.2 不定方程"></a>1.3.2 不定方程</h4><p>分析**<font color='red'>奇偶、倍数、尾数</font>**等数字特性，尝试带入排除</p><ol><li><p>奇偶：忽略偶数倍，剩下的部分奇偶性相同。</p><p>ax + by &#x3D; M，当a、b恰好一奇一偶，考虑奇偶特性</p></li><li><p>倍数：你俩有啥公因子，我也得有。 </p><p>ax + by &#x3D; M，当a或b与M有公因子时，考虑倍数特性。</p></li><li><p>尾数。</p><p>ax + by &#x3D; M，当a或b尾数是0或5时，考虑尾数特性。</p></li></ol><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_1.2.3_1.png" alt="3.数量关系_1.2.3_1"></p><h3 id="1-4-赋值法"><a href="#1-4-赋值法" class="headerlink" title="1.4 赋值法"></a>1.4 赋值法</h3><p>适用范围：题干中没有出现具体的值，条件都是以倍数、分数、百分数、比例等形式给出</p><p>具体用法：</p><ol><li>对题目中的不变量赋值</li><li>赋值为公倍数</li></ol><h3 id="1-5-线段法"><a href="#1-5-线段法" class="headerlink" title="1.5 线段法"></a>1.5 线段法</h3><p>适用范围：混合比例问题</p><p>具体用法：</p><p>已知$\frac {溶质} {溶液} &#x3D; 浓度$，现有a和b两种浓度，混合后产生c浓度，则a和c的差(2)与b和c的差(3)的比值(a浓度 : b浓度 &#x3D; 2:3)为两者溶液的反比(a溶液 : b溶液 &#x3D; 3:2)</p><p>$\frac {溶质} {溶液} &#x3D; 浓度$、$\frac {售价} {定价} &#x3D; 折扣$、$\frac {总数} {个数} &#x3D; 平均数$、$\frac {利润} {成本} &#x3D; 利润率$、$\frac {部分} {整体} &#x3D; 比重$</p><h2 id="2-高频考点"><a href="#2-高频考点" class="headerlink" title="2 高频考点"></a>2 高频考点</h2><h3 id="2-1-工程问题（1-2）"><a href="#2-1-工程问题（1-2）" class="headerlink" title="2.1 工程问题（1-2）"></a>2.1 工程问题（1-2）</h3><p>必背公式：</p><p>工程量 &#x3D; 工作效率 * 工作时间</p><p>工作效率 &#x3D; 工程量 &#x2F; 工作时间</p><p>工作时间 &#x3D; 工程量 &#x2F; 工作效率</p><h4 id="2-1-1-给效率或总量的具体单位型"><a href="#2-1-1-给效率或总量的具体单位型" class="headerlink" title="2.1.1 给效率或总量的具体单位型"></a>2.1.1 给效率或总量的具体单位型</h4><ol><li>设未知数</li><li>找等量关系列方程</li></ol><h4 id="2-1-2-给完工时间型"><a href="#2-1-2-给完工时间型" class="headerlink" title="2.1.2 给完工时间型"></a>2.1.2 给完工时间型</h4><ol><li>赋总量（一般设为完工时间的公倍数)</li><li>算效率：效率&#x3D;总量÷时间</li><li>根据工作过程列方程或式子</li></ol><h4 id="2-1-3-给效率比例型"><a href="#2-1-3-给效率比例型" class="headerlink" title="2.1.3 给效率比例型"></a>2.1.3 给效率比例型</h4><ol><li>赋效率(满足比例即可)</li><li>算总量：总量&#x3D;效率×时间</li><li>根据工作过程列方程或式子</li></ol><p>效率比例的形式：</p><ul><li><p>直接给：甲：乙 &#x3D; 3：4，甲的效率是乙的 $\frac {3} {4}$</p></li><li><p>间接给：</p><ul><li><p>工作量相等，效率与时间成反比<br>甲4天的工作量等于乙3天的工作量，则效率甲：乙为  3 : 4</p></li><li><p>时间相等，工作量与效率成正比<br>相同的工作，当甲完成10%时，乙完成15%，则效率 甲：乙为 10 : 15</p></li></ul></li></ul><ul><li>给具体人数或机器数：<br>50个人去修路，30台机器收割麦子等，则赋值每个人&#x2F;每台机器效率为1</li></ul><h4 id="2-1-4-思维导图"><a href="#2-1-4-思维导图" class="headerlink" title="2.1.4 思维导图"></a>2.1.4 思维导图</h4><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_2.1_1.png" alt="3.数量关系_2.1_1.png"></p><h3 id="2-2-行程问题"><a href="#2-2-行程问题" class="headerlink" title="2.2 行程问题"></a>2.2 行程问题</h3><h4 id="2-2-1-基础行程"><a href="#2-2-1-基础行程" class="headerlink" title="2.2.1 基础行程"></a>2.2.1 基础行程</h4><ol><li><p>基本公式</p><p>火车**<font color='red'>完全通过桥</font>**：$V_车 \times T &#x3D; 桥长 + 车长$</p><p>火车**<font color='red'>完全在桥上</font>**：$V_车 \times T &#x3D; 桥长 - 车长$</p></li><li><p>等距离平均速度</p><p>公式：$\overline V &#x3D; \frac {2V{_1}V{_2}}{V{_1} + V{_2}}$，如果$\overline V &#x3D; V{_1}$则$V{_2} &#x3D; V{_1}$​</p></li><li><p>匀加速平均速度：</p><p>公式：$\overline V &#x3D; \frac {V{_初} + V{_末}} 2$</p><p>适用于：<font color='red'>直线往返、上下坡往返、等距离两段</font></p></li></ol><p><strong><font color='red'>一种猜题方法：如果题中给出了三种相同属性的数字，那么答案一般是中间数字、或一半、或两倍、或次方</font></strong></p><h4 id="2-2-2-相对行程"><a href="#2-2-2-相对行程" class="headerlink" title="2.2.2 相对行程"></a>2.2.2 相对行程</h4><ol><li><p><strong><font color='red'>相遇：</font></strong></p><ul><li>直线相遇：<ul><li>相遇一次：$S{_和} &#x3D; (V{_1} + V{_2}) \times t$</li><li>多次相遇，抵达终点后返回：$(2n-1)S &#x3D; (V{_1} + V{_2}) \times t$，n：相遇次数，S：两地距离</li></ul></li><li>环形相遇：$S{_和} &#x3D; S{_环} \times N{_圈} &#x3D; (V{_1} + V{_2}) \times t$，相遇N次，$N{_圈} &#x3D; \frac {S{_和}}{S{_环}}$</li></ul></li><li><p><strong><font color='red'>追及：</font></strong></p><ul><li><p>直线追及：</p><ul><li>追及一次：$S{_差} &#x3D; (V{_1} - V{_2}) \times t$</li><li>多次追及，抵达终点后返回：$2n \times S &#x3D; (V{_1} + V{_2}) \times t$。n：相遇次数，S：两地距离</li></ul></li><li><p>环形追及：$S{_差} &#x3D; S{_环} \times N{_圈} &#x3D; (V{_1} - V{_2}) \times t$。追上N次，$N{_圈} &#x3D; \frac {S{_差}}{S{_环}}$</p></li><li><p>时钟追及：</p><blockquote><p>A比B慢4分钟，C比B快6分钟，请问多少小时后三个分针会指在同一个位置？</p><p>$\frac {60}{4} &#x3D; 15小时$、$\frac {60}{6} &#x3D; 10小时$，A和B每15个小时重合一次，B和C每10个小时重合一次，取最小公倍数30小时。</p></blockquote></li></ul></li><li><p>流水行船</p><ul><li>$V{_顺} &#x3D; V{_船} + V{_水}$</li><li>$V{_逆} &#x3D; V{_船} - V{_水}$</li><li><strong><font color='red'>$V{_船} &#x3D; \frac {V{_顺} + V{_逆}} {2}$</font></strong></li><li><strong><font color='red'>$V{_水} &#x3D; \frac {V{_顺} - V{_逆}} {2}$</font></strong></li></ul></li></ol><h4 id="2-2-3-思维导图"><a href="#2-2-3-思维导图" class="headerlink" title="2.2.3 思维导图"></a>2.2.3 思维导图</h4><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_2.2_1.png" alt="3.数量关系_2.2_1"></p><h3 id="2-3-经济利润"><a href="#2-3-经济利润" class="headerlink" title="2.3 经济利润"></a>2.3 经济利润</h3><h4 id="2-3-1-基础经济利润问题-（重点）"><a href="#2-3-1-基础经济利润问题-（重点）" class="headerlink" title="2.3.1 基础经济利润问题**（重点）**"></a>2.3.1 基础经济利润问题**<font color='red'>（重点）</font>**</h4><ol><li>公式<ul><li>利润 &#x3D; 售价 - 进价</li><li><strong>$\frac {利润}{进价} &#x3D; 利润率$</strong></li><li><font color='red'>售价(收入)&#x3D; 进价(成本) ×（1+利润率）</font></li><li><font color='red'><strong>$\frac {折后价（售价）}{折前价（定价）} &#x3D; 折扣$</strong></font></li></ul></li><li>方法<ol><li>方程法：有具体钱数、具体量</li><li>赋值法：<ol><li>给比例，求比例</li><li>三量关系只知其一</li></ol></li></ol></li></ol><p>对**<font color='red'>条件和问题都没有给具体值的量</font>**进行赋值</p><h4 id="2-3-2-分段计费"><a href="#2-3-2-分段计费" class="headerlink" title="2.3.2 分段计费"></a>2.3.2 分段计费</h4><h4 id="2-3-3-函数最值"><a href="#2-3-3-函数最值" class="headerlink" title="2.3.3 函数最值"></a>2.3.3 函数最值</h4><blockquote><p>某商品按质量分为[xxx]个档次，最低档次商品每件可获利[xxx]元，每提高一个档次，则每件商品的利润增加[xxx]元。最低档次商品每天可产出[xxx]件，每提高一个档次，则日产量减少[xxx]件。<br>若只生产其中某一档次的商品，则每天能获得的最大利润是多少元？</p><p><strong><font color='red'>设增加次数为x。注意第一个数字档次为几，最后的次数不能大于它</font></strong></p></blockquote><h4 id="2-3-4-思维导图"><a href="#2-3-4-思维导图" class="headerlink" title="2.3.4 思维导图"></a>2.3.4 思维导图</h4><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_2.3_1.png" alt="3.数量关系_2.3_1"></p><h3 id="2-4-溶液问题-1-2题"><a href="#2-4-溶液问题-1-2题" class="headerlink" title="2.4 溶液问题(1-2题)"></a>2.4 溶液问题(1-2题)</h3><p>一般包括三种：混合溶液、溶质不变、溶液不变</p><h4 id="2-4-1-混合溶液"><a href="#2-4-1-混合溶液" class="headerlink" title="2.4.1 混合溶液"></a>2.4.1 混合溶液</h4><p>混合溶液可以使用<strong>线段法</strong>，即：<br>现有 a 和 b 两种浓度，混合后产生 c 浓度，则 a 和 c 的差(2)与 b 和 c 的差(3)的比值(a浓度 : b浓度 &#x3D; 2:3)为两者溶液的反比(a溶液 : b溶液 &#x3D; 3:2)</p><h4 id="2-4-2-溶质不变"><a href="#2-4-2-溶质不变" class="headerlink" title="2.4.2 溶质不变"></a>2.4.2 溶质不变</h4><p>题型特征：题干中出现溶液和水混合、稀释或者蒸发溶液中的水，采用<strong>赋值法</strong></p><h4 id="2-4-3-溶液不变"><a href="#2-4-3-溶液不变" class="headerlink" title="2.4.3 溶液不变"></a>2.4.3 溶液不变</h4><p>同上使用赋值法</p><h3 id="2-5-排列组合与概率问题"><a href="#2-5-排列组合与概率问题" class="headerlink" title="2.5 排列组合与概率问题"></a>2.5 排列组合与概率问题</h3><h4 id="2-5-1-基础概念"><a href="#2-5-1-基础概念" class="headerlink" title="2.5.1 基础概念"></a>2.5.1 基础概念</h4><ul><li><p>分类用加法：要么···要么···（多者选其一）</p></li><li><p>分布用乘法：既···又···（都要满足）</p><hr></li><li><p>排列（A）：与顺序有关（选完人后需要排序）</p><ul><li>公式：$A{^m_n} &#x3D; \frac {n!}{(n-m)!} &#x3D; n(n-1)(n-2)···(n-m+1)$​ </li><li>例子：$A{^3 _{10} &#x3D; 10 \times 9 \times 8 &#x3D; 720}$</li></ul></li><li><p><font color='red'>组合（C）：与顺序无关（只需要选人，不需要排序）</font></p><ul><li><p>公式：$C{^m_n} &#x3D; C{^{n-m}_n} &#x3D; \frac {n!} {(n-m)!m!} &#x3D; \frac {n(n-1)(n-2)···(n-m+1)}{m(m-1)(m-2)···2 \times 1}$​</p></li><li><p>例子：$C{^3 _{10} &#x3D; \frac {A{^3 _{10}}}{A{^3 _3}} &#x3D; \frac {10 \times 9 \times 8}{3 \times 2 \times 1} &#x3D; 120}$；$C{^9 _{10} &#x3D; C{^1 _{10}} &#x3D; 10}$​</p></li><li><p><em>扩展1（不需要了解）：$A{^m_n} &#x3D; C{^m_n} \times A{^m_m}$​​</em></p></li><li><p>平均分组：</p><blockquote><p>将4个元素(a，b，c，d)平均分为2组，则每组应有2个元素。</p><p>第一步：从4个元素中取出2个为第1组，有$C{^2_4}$种取法.再从剩下的2个元素中取2个为第2组，有$C{^2_2}$种取法，则按乘法原理，到目前为止，有$C{^2_4} \times C{^2_2} &#x3D; 6$​种分法。</p><table><thead><tr><th>ab</th><th>cd</th></tr></thead><tbody><tr><td>ac</td><td>bd</td></tr><tr><td>ad</td><td>bc</td></tr><tr><td>bc</td><td>ad</td></tr><tr><td>bd</td><td>ac</td></tr><tr><td>cd</td><td>ab</td></tr></tbody></table><p>第二步：假设第一步中先取了（a，b）为第1组,则（c，d）自动为第2组。因为此时是不涉及分给谁的，所以这种分法和先取（c，d）再取（a，b）实际上算同一种分法。<strong>也就是说第一步得到的分法是有序的，2个组就有$A{^2_2}$种顺序，n个组就有$A{^n_n}$种顺序。要消除这种有序，只需除以顺序的数目。</strong></p><p>第三步：最后平均分的分法就是$\frac {C{^2_4} \times C{^2_2}} {A{^2_2}} &#x3D; 3$​</p><p>举个栗子：</p><ol><li>全部均匀分组：将12本书按4:4:4平均分成三堆，有多少种不同的分法？$\frac {C^{4}<em>{12} \times C^{4}</em>{8} \times C^{4}<em>{4}} {A^{3}</em>{3}}$​</li><li>2、部分均匀分组：将12本书按2:2:2:6分成四堆有多少种不同的分法？$\frac {C^{2}<em>{12} \times C^{2}</em>{10} \times C^{2}<em>{8} \times C^{6}</em>{6}} {A^{3}_{3}}$</li></ol></blockquote></li></ul></li></ul><h4 id="2-5-2-经典题型"><a href="#2-5-2-经典题型" class="headerlink" title="2.5.2 经典题型"></a>2.5.2 经典题型</h4><ul><li>枚举法：凑数字</li><li>捆绑法：必须相邻，先捆再排，将捆绑后的看成一个主体</li><li>插空法：不能相邻。先排其他的，再将不相邻的插入到空位中</li><li>插板法：把n个东西分给m个主体，每个主体至少一个。<ul><li>公式：$C{^{m-1}_{n-1}}$</li><li>若要求每个主体至少分 a 个，可以先给每个主体分（a-1）个，剩余物品分配时，转化为每个主体至少分 1 个，在应用插板法解决。</li></ul></li><li>全错位排列：当题目要求不能一一对应时，比如：n个钥匙对应n个锁，要求每个锁和一把不能打开的钥匙放进一个信封，有几种装法。这就是全错位排列<ul><li><strong><font color='red'>$D_1{} &#x3D; 0, D_{2} &#x3D; 1, D_{3} &#x3D; 2, D_{4} &#x3D; 9, D_{5} &#x3D; 44$</font></strong></li></ul></li></ul><h4 id="2-5-3-概率相关"><a href="#2-5-3-概率相关" class="headerlink" title="2.5.3 概率相关"></a>2.5.3 概率相关</h4><p>$概率 &#x3D; \frac {满足条件的情况数}{总情况数}$</p><ol><li><p>给情况求概率</p></li><li><p>给概率求概率</p><ul><li><p>分类用加法</p></li><li><p>分布用乘法</p></li><li><p>1 - 反面情况概率</p></li></ul></li></ol><h4 id="2-5-4-思维导图"><a href="#2-5-4-思维导图" class="headerlink" title="2.5.4 思维导图"></a>2.5.4 思维导图</h4><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_2.5.4_1.png" alt="3.数量关系_2.5.4_1"></p><h3 id="2-6-容斥原理"><a href="#2-6-容斥原理" class="headerlink" title="2.6 容斥原理"></a>2.6 容斥原理</h3><p>题型特征：题干中涉及两个集合，且集合之间出现交叉重叠</p><ul><li><font color='red'><strong>两集合公式：$A + B - A \cap B &#x3D; 总数 - A、B均不满足个数$</strong></font></li><li><strong><font color='red'>三集合公式：${A+B+C}-{A \cap B} - {B \cap C} - {C \cap A} + {A \cap B \cap C} &#x3D; 总数 - 都不$</font></strong><ul><li><strong><font color='red'>非标准型1：${A+B+C}-{b} - {2c} &#x3D; 总数 - 都不$​</font></strong></li><li><strong><font color='red'>非标准型2：${A+B+C} &#x3D; {a+2b+3c} &#x3D; (a+b+c)+b+2c$​</font></strong><ul><li>a：只满足一项的</li><li>b：只满足两项的</li><li>c：满足三项的</li><li>且a+b+c等于总数</li></ul></li></ul></li></ul><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_2.6_1.png" alt="3.数量关系_2.6_1"></p><h3 id="2-7-最值问题"><a href="#2-7-最值问题" class="headerlink" title="2.7 最值问题"></a>2.7 最值问题</h3><h4 id="2-7-1-最不利构造"><a href="#2-7-1-最不利构造" class="headerlink" title="2.7.1 最不利构造"></a>2.7.1 最不利构造</h4><p>题型特征：问法中出现“至少···保证···”之类的表述</p><p>在最不利的情况下 + 1，即是答案</p><h4 id="2-7-2-构造数列"><a href="#2-7-2-构造数列" class="headerlink" title="2.7.2 构造数列"></a>2.7.2 构造数列</h4><p>提醒特征：题目中总量一定，文法为“最多&#x2F;最少的···至多&#x2F;少···”“排名第N的之多&#x2F;少”</p><ol><li>反向构造数列：当若干自然数的和一定时，若要使其中一个数尽可能大（最多），其他数应尽可能小；反之，若要使其中一个数尽可能小（至少），则其他数应尽可能大</li><li>计算结果为非整数时，至多向下取整，至少向上取整</li></ol><h4 id="2-7-3-多集合反向构造"><a href="#2-7-3-多集合反向构造" class="headerlink" title="2.7.3 多集合反向构造"></a>2.7.3 多集合反向构造</h4><p>题型特征：题干中给出多个条件，问法为“这些条件都满足的至少有多少”</p><p>解题思路：反向→求和→作差</p><h4 id="2-7-4-复杂最值问题"><a href="#2-7-4-复杂最值问题" class="headerlink" title="2.7.4 复杂最值问题"></a>2.7.4 复杂最值问题</h4><p>考虑最极端情况，正向解题若复杂，可考虑逆向思维</p><h3 id="2-8-几何问题-1-4题"><a href="#2-8-几何问题-1-4题" class="headerlink" title="2.8 几何问题(1-4题)"></a>2.8 几何问题(1-4题)</h3><h4 id="2-8-1-公式运用"><a href="#2-8-1-公式运用" class="headerlink" title="2.8.1 公式运用"></a>2.8.1 公式运用</h4><ol><li><p>周长类</p><table><thead><tr><th align="left">周长</th><th align="left">公式</th></tr></thead><tbody><tr><td align="left">正方形周长</td><td align="left">$4a$</td></tr><tr><td align="left">长方形周长</td><td align="left">$2(a+b)$</td></tr><tr><td align="left">圆形周长</td><td align="left">$2πr$</td></tr><tr><td align="left">弧长</td><td align="left">$2πr \times \frac {n^{\circ} }{360^{\circ}}$</td></tr></tbody></table></li><li><p>面积类 </p><table><thead><tr><th align="left">面积</th><th align="center">公式</th></tr></thead><tbody><tr><td align="left">正方形面积</td><td align="center">$a{^2}$</td></tr><tr><td align="left">长方形面积</td><td align="center">$ab$</td></tr><tr><td align="left">三角形面积</td><td align="center">$\frac {ah}{2}$</td></tr><tr><td align="left">圆形面积</td><td align="center">$\pi r{^2}$</td></tr><tr><td align="left">扇形面积</td><td align="center">$\pi r{^2} \times \frac {n^{\circ} }{360^{\circ}}$</td></tr><tr><td align="left">梯形面积</td><td align="center">$\frac {(a+b) \times h}{2}$</td></tr><tr><td align="left">菱形面积</td><td align="center">$\frac {对角线乘积} 2$</td></tr></tbody></table></li><li><p>表面积类</p><table><thead><tr><th align="left">表面积</th><th>公式</th></tr></thead><tbody><tr><td align="left">正方体表面积</td><td>$6a{^2}$</td></tr><tr><td align="left">长方体表面积</td><td>$2(ab+bc+ac)$</td></tr><tr><td align="left">圆柱体表面积</td><td>$2\pi r{^2} + 2\pi rh$</td></tr><tr><td align="left">球体表面积</td><td>$4\pi r{^2}$</td></tr></tbody></table></li><li><p>体积类</p><table><thead><tr><th align="left">体积</th><th>公式</th></tr></thead><tbody><tr><td align="left">正方形体积</td><td>$a{^3}$</td></tr><tr><td align="left">长方体体积</td><td>$abc$</td></tr><tr><td align="left">柱体体积</td><td>$\pi r{^2} h$</td></tr><tr><td align="left">椎体体积</td><td>$\frac {\pi r{^2}h}{3}$</td></tr><tr><td align="left">球体体积</td><td>$\frac {4 \pi r{^3}}{3}$</td></tr></tbody></table></li></ol><h4 id="2-8-2-三角形相关"><a href="#2-8-2-三角形相关" class="headerlink" title="2.8.2 三角形相关"></a>2.8.2 三角形相关</h4><ol><li><p>基本条件：两边之和大于第三边</p></li><li><p>勾股定理：</p><ul><li><p>$a{^2} + b{^2} &#x3D; c{^2}$，直角三角形的三边关系</p></li><li><p>常考的勾股数：（3、4、5）（6、8、10）（5、12、13）<em>（7、24、25）</em>，注意倍数关系仍然成立，如（9、12、15）是第一个的三倍，也是成立的。</p></li><li><p>含45°角的三角形三边关系为 <strong><font color='red'>$1:1:\sqrt{2} $</font></strong></p></li><li><p>含30°角的三角形三边关系为 <strong><font color='red'>$1:\sqrt{3}:2$</font></strong></p></li><li><p>含120°的等腰钝角三角形的三边关系为 <font color='red'><strong>$1:1:\sqrt {3}$​</strong></font>，有可能在正六边形中出现</p><blockquote><p>$\sqrt 2 \approx  1.41$、$\sqrt 3 \approx  1.73$、$\sqrt 5 \approx  2.23$</p></blockquote></li></ul></li><li><p>相似三角形：</p><ul><li>**<font color='red'>对应边长之比等于相似比，面积比等于相似比的平方</font>**。如：边长1：2，则面积比为 $1{^2}:2{^2}$</li><li>三角形的中位线平行于底边，且等于底边的一半  <img src="../images/公考题之数量关系/3.数量关系_2.8.2_2.png" alt="3.数量关系_2.8.2_2" style="zoom: 33%;" /></li></ul></li><li><p>**<font color='red'>蝴蝶定理</font>**：</p><ul><li>任意四边形ABCD中，对角线交点为O，若OA、OB、OC、OD分别为a、b、c、d，则四个三角形面积之比依次为$ab : bc : cd : da$  <img src="../images/公考题之数量关系/3.数量关系_2.8.2_1.png" alt="3.数量关系_2.8.2_1" style="zoom: 25%;" /></li><li>梯形蝴蝶定理：在一个梯形中，若$上底:下底 &#x3D; a:b$，则四个三角形面积之比为$上:下:左:右 &#x3D; a{^2}:b{^2}:ab:ab$<br><img src="../images/公考题之数量关系/3.数量关系_2.8.2_3_1.png" alt="image-20240125191014310" style="zoom: 33%;" />如：<img src="../images/公考题之数量关系/3.数量关系_2.8.2_3_2.png" alt="image-20240125191301601" style="zoom:33%;" /><img src="../images/公考题之数量关系/3.数量关系_2.8.2_3_3.png" alt="image-20240125192153707" style="zoom:25%;" /></li></ul></li></ol><h4 id="2-8-3-等比例缩放"><a href="#2-8-3-等比例缩放" class="headerlink" title="2.8.3 等比例缩放"></a>2.8.3 等比例缩放</h4><p>若将一个图形尺度扩大为原来的n倍</p><ul><li>对应角不变</li><li>周长变为n倍</li><li>面积变为$n{^2}$倍</li><li>体积变为$n{^3}$倍</li></ul><h4 id="2-8-4-思维导图"><a href="#2-8-4-思维导图" class="headerlink" title="2.8.4 思维导图"></a>2.8.4 思维导图</h4><p><img src="/../images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/3.%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB_2.8.3_1.png" alt="3.数量关系_2.8.3_1"></p><h2 id="3-专项考点"><a href="#3-专项考点" class="headerlink" title="3 专项考点"></a>3 专项考点</h2><h3 id="3-1-年龄问题"><a href="#3-1-年龄问题" class="headerlink" title="3.1 年龄问题"></a>3.1 年龄问题</h3><p>题型特征：题干中多次出现年龄、年份等，且所求为年龄、出生年份等</p><p>解题思路：代入排除法</p><ol><li>年龄 &#x3D; 现在年份 - 出生年份</li><li>属相相同即年龄差为12的倍数</li></ol><h3 id="3-2-周期问题"><a href="#3-2-周期问题" class="headerlink" title="3.2 周期问题"></a>3.2 周期问题</h3><ol><li><p>一摸一样且循环出现的就是周期</p></li><li><p>常考类型：星期、日期、十二生肖、甲乙丙丁循环值班</p></li><li><p>平年和闰年</p><ol><li><p>年份除以4，若能整除为闰年，若不能整除为平年</p></li><li><p>若年份后两位为零，则除以400，若能整出为闰年，若不能整除为平年  </p><blockquote><p>平年：365天<br>闰年：366天</p></blockquote></li></ol></li><li><p>大月与小月</p><ol><li>大月31天（1、3、5、7、8、10、12）</li><li>小月为30天（4、6、8、11）</li><li>2月平年为28天，闰年为29天</li></ol></li></ol><h3 id="3-3-钟表问题"><a href="#3-3-钟表问题" class="headerlink" title="3.3 钟表问题"></a>3.3 钟表问题</h3><ol><li>一个指针走完一圈360°，共12个格子，每个格子6°</li><li><strong><font color='red'>时针每分钟0.5°；分针每分钟6°，速度差为5.5°&#x2F;分，速度之比为1:12</font></strong></li><li>特殊角度<ul><li><strong>直角：每小时2次，每昼夜44次</strong>（3、9、15、21重复）</li><li><strong>重合：每小时1次，每昼夜22次</strong>（12、24重复）</li><li><strong>180°角：每小时1次，每昼夜22次</strong>（6、18重复）</li></ul></li></ol><h3 id="3-4-计算问题"><a href="#3-4-计算问题" class="headerlink" title="3.4 计算问题"></a>3.4 计算问题</h3><ol><li>等差数列通项公式：$a_{n} &#x3D; a_{1} + (n-1)d &#x3D; a_{m} + (n-m)d$</li><li>等差数列求和公式：$S_{n} &#x3D; na_{1} + \frac {n(n-1)}{2} d &#x3D; \frac {n(a_1 + a_m)}{2} &#x3D; 中位数 \times 项数$</li><li>等比数列通项公式：$a_n &#x3D; a_1 \times q^{n-1} &#x3D; a_m \times q^{n-m}$</li><li>等比数列求和公式：$S_n &#x3D; a_1 \times \frac {1-q^n}{1-q} （q ≠ 1）$</li></ol><h3 id="3-5-植树问题"><a href="#3-5-植树问题" class="headerlink" title="3.5 植树问题"></a>3.5 植树问题</h3><p>注意起点有一个，注意是两排树还是一排树</p><h3 id="3-6-方阵问题"><a href="#3-6-方阵问题" class="headerlink" title="3.6 方阵问题"></a>3.6 方阵问题</h3><p>实心方阵人数为$N^2$，最外层人数为$4N-4$。</p><p>长方形方针人数为$MN$，最外层人数为$2(M + N)-4$</p><h3 id="3-7-爬楼梯问题"><a href="#3-7-爬楼梯问题" class="headerlink" title="3.7 爬楼梯问题"></a>3.7 爬楼梯问题</h3><p>N楼只需要爬$N-1$层，从M楼爬到N楼需要爬$N-M$层</p><h3 id="3-8-空瓶换酒问题"><a href="#3-8-空瓶换酒问题" class="headerlink" title="3.8 空瓶换酒问题"></a>3.8 空瓶换酒问题</h3><p>N个空瓶可以换M瓶酒，X个空瓶最多可以换到$\frac {X}{N-M}$瓶酒</p><h3 id="3-9-比赛问题"><a href="#3-9-比赛问题" class="headerlink" title="3.9 比赛问题"></a>3.9 比赛问题</h3><p>N个队伍两两比赛，每一轮淘汰一半</p><ol><li>决出冠军、亚军需要（N-1）场比赛</li><li>单循环赛：每只队伍和其他队伍比赛一次，需$C^2_N &#x3D; \frac {N(N-1)}{2}$​</li><li>双循环赛：每只队伍和其他队伍比赛两次，需$A^2_n &#x3D; N(N-1)$</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM+Mybatis-Plus</title>
      <link href="/2022/02/07/SSM+Mybatis-Plus/"/>
      <url>/2022/02/07/SSM+Mybatis-Plus/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p>简介：</p><p>MyBatis：封装JDBC，负责访问数据库，完成持久化操作。</p><p>Spring：使用其核心思想 IOC 管理组件，使用 AOP 思想实现功能增强</p><p>SpringMVC：接收浏览器发送的请求，并响应浏览器数据</p><h1 id="一、Spring-❗"><a href="#一、Spring-❗" class="headerlink" title="一、Spring ❗"></a>一、Spring ❗</h1><h2 id="1-Spring简介"><a href="#1-Spring简介" class="headerlink" title="1 Spring简介"></a>1 Spring简介</h2><h3 id="1-1-Spring概述"><a href="#1-1-Spring概述" class="headerlink" title="1.1 Spring概述"></a>1.1 Spring概述</h3><p>官网地址：<a href="https://spring.io/">https://spring.io/</a></p><blockquote><p>Spring 是最受欢迎的企业级 Java 应用程序开发框架，数以百万的来自世界各地的开发人员使用 Spring 框架来创建<strong>性能好、易于测试、可重用</strong>的代码。 </p><p>Spring 框架是一个开源的 Java 平台，它最初是由 Rod Johnson 编写的，并且于 2003 年 6 月首 次在 Apache 2.0 许可下发布。 </p><p>Spring 是轻量级的框架，其基础版本只有 2 MB 左右的大小。 </p><p>Spring 框架的核心特性是可以用于开发任何 Java 应用程序，但是在 Java EE 平台上构建 web 应 用程序是需要扩展的。 Spring 框架的目标是使 J2EE 开发变得更容易使用，通过启用基于 POJO 编程模型来促进良好的编程实践。</p></blockquote><h3 id="1-2-Spring家族"><a href="#1-2-Spring家族" class="headerlink" title="1.2 Spring家族"></a>1.2 Spring家族</h3><p>项目列表：<a href="https://spring.io/projects">https://spring.io/projects</a></p><p>Spring Framework 基础框架，所有 Spring 框架都是基于 Spring Framework</p><p>Spring Boot 今后用的最多的一个框架</p><p>Spring Data 非关系型的数据库就可以用它来实现</p><p>Spring Cloud 分布式</p><p>Spring Security 安全框架</p><h3 id="1-3-Spring-Framework"><a href="#1-3-Spring-Framework" class="headerlink" title="1.3 Spring Framework"></a>1.3 Spring Framework</h3><p>Spring 基础框架，可以视为 Spring 基础设施，基本上任何其他 Spring 项目都是以 Spring Framework 为基础的。</p><h4 id="1-3-1-Spring-Framework特性"><a href="#1-3-1-Spring-Framework特性" class="headerlink" title="1.3.1 Spring Framework特性"></a>1.3.1 Spring Framework特性</h4><ul><li>非侵入式：使用 Spring Framework 开发应用程序时，Spring 对应用程序本身的结构影响非常 小。对领域模型可以做到零污染；对功能性组件也只需要使用几个简单的注解进行标记，完全不会 破坏原有结构，反而能将组件结构进一步简化。这就使得基于 Spring Framework 开发应用程序时结构清晰、简洁优雅。</li><li>控制反转：IOC——Inversion of Control，翻转资源获取方向。把自己创建资源、向环境索取资源变成环境将资源准备好，我们享受资源注入。 </li><li>面向切面编程：AOP——Aspect Oriented Programming，在不修改源代码的基础上增强代码功能。</li><li>容器：Spring IOC 是一个容器，因为它包含并且管理组件对象的生命周期。组件享受到了容器化的管理，替程序员屏蔽了组件创建过程中的大量细节，极大的降低了使用门槛，大幅度提高了开发效率。</li><li>组件化：Spring 实现了使用简单的组件配置组合成一个复杂的应用。在 Spring 中可以使用 XML 和 Java 注解组合这些对象。这使得我们可以基于一个个功能明确、边界清晰的组件有条不紊的搭 建超大型复杂应用系统。</li><li>声明式：很多以前需要编写代码才能实现的功能，现在只需要声明需求即可由框架代为实现。 </li><li>一站式：在 IOC 和 AOP 的基础上可以整合各种企业应用的开源框架和优秀的第三方类库。而且 Spring 旗下的项目已经覆盖了广泛领域，很多方面的功能性需求可以在 Spring Framework 的基 础上全部使用 Spring 来实现。</li></ul><h4 id="1-3-2-Spring-Framework五大功能模块"><a href="#1-3-2-Spring-Framework五大功能模块" class="headerlink" title="1.3.2 Spring Framework五大功能模块"></a>1.3.2 Spring Framework五大功能模块</h4><table><thead><tr><th>功能模块</th><th>功能介绍</th></tr></thead><tbody><tr><td>Core Container</td><td>核心容器，在 Spring 环境下使用任何功能都必须基于 IOC 容器。</td></tr><tr><td>AOP&amp;Aspects</td><td>面向切面编程</td></tr><tr><td>Testing</td><td>提供了对 junit 或 TestNG 测试框架的整合。</td></tr><tr><td>Data Access&#x2F;Integration</td><td>提供了对数据访问&#x2F;集成的功能。</td></tr><tr><td>Spring MVC</td><td>提供了面向Web应用程序的集成功能。</td></tr></tbody></table><h2 id="2-IOC"><a href="#2-IOC" class="headerlink" title="2 IOC"></a>2 IOC</h2><h3 id="2-1-IOC容器"><a href="#2-1-IOC容器" class="headerlink" title="2.1 IOC容器"></a>2.1 IOC容器</h3><h4 id="2-1-1-IOC思想"><a href="#2-1-1-IOC思想" class="headerlink" title="2.1.1 IOC思想"></a>2.1.1 IOC思想</h4><p>IOC：Inversion of Control，翻译过来是<strong>反转控制</strong>。</p><ol><li><p>获取资源的传统方式</p><p>自己做饭：买菜、洗菜、择菜、改刀、炒菜，全过程参与，费时费力，必须清楚了解资源创建整个过程 中的全部细节且熟练掌握。 </p><p>在应用程序中的组件需要获取资源时，传统的方式是组件**<font color="red">主动</font>**的从容器中获取所需要的资源，在这样的 模式下开发人员往往需要知道在具体容器中特定资源的获取方式，增加了学习成本，同时降低了开发效率。</p></li><li><p>反转控制方式获取资源</p><p>点外卖：下单、等、吃，省时省力，不必关心资源创建过程的所有细节。 </p><p>反转控制的思想完全颠覆了应用程序组件获取资源的传统方式：反转了资源的获取方向——改由容器主动的将资源推送给需要的组件，开发人员不需要知道容器是如何创建资源对象的，只需要提供接收资源 的方式即可，极大的降低了学习成本，提高了开发的效率。这种行为也称为查找的**<font color="red">被动</font>**形式。</p></li><li><p>DI</p><p>DI：Dependency Injection，翻译过来是<strong>依赖注入</strong>。 </p><p>DI 是 IOC 的另一种表述方式：即组件以一些预先定义好的方式（例如：setter 方法）接受来自于容器 的资源注入。相对于IOC而言，这种表述更直接。 </p><p>所以结论是：IOC 就是一种反转控制的思想， 而 DI 是对 IOC 的一种具体实现。</p></li></ol><h4 id="2-1-2-IOC容器在Spring中的实现"><a href="#2-1-2-IOC容器在Spring中的实现" class="headerlink" title="2.1.2 IOC容器在Spring中的实现"></a>2.1.2 IOC容器在Spring中的实现</h4><p>Spring 的 IOC 容器就是 IOC 思想的一个落地的产品实现。IOC 容器中管理的组件也叫做 bean。在创建 bean 之前，首先需要创建 IOC 容器。Spring 提供了 IOC 容器的两种实现方式：</p><ol><li><p>BeanFactory</p><p>这是 IOC 容器的基本实现，是 Spring 内部使用的接口。面向 Spring 本身，不提供给开发人员使用。</p></li><li><p>ApplicationContext</p><p>BeanFactory 的子接口，提供了更多高级特性。面向 Spring 的使用者，几乎所有场合都使用 ApplicationContext 而不是底层的 BeanFactory。</p></li><li><p>ApplicationContext的主要实现类</p><p><img src="/../images/SSM+Mybatis-Plus/ApplicationContext%E7%9A%84%E4%B8%BB%E8%A6%81%E5%AE%9E%E7%8E%B0%E7%B1%BB.png" alt="ApplicationContext的主要实现类"></p><table><thead><tr><th>类型名</th><th>简介</th></tr></thead><tbody><tr><td>ClassPathXmlApplicationContext</td><td>通过读取类路径下的 XML 格式的配置文件创建 IOC 容器对象</td></tr><tr><td>FileSystemXmlApplicationContext</td><td>通过文件系统路径读取 XML 格式的配置文件创建 IOC 容器对象</td></tr><tr><td>ConfigurableApplicationContext</td><td>ApplicationContext 的子接口，包含一些扩展方法 refresh() 和 close() ，让 ApplicationContext 具有启动、 关闭和刷新上下文的能力。</td></tr><tr><td>WebApplicationContext</td><td>专门为 Web 应用准备，基于 Web 环境创建 IOC 容器对 象，并将对象引入存入 ServletContext 域中。</td></tr></tbody></table></li></ol><h3 id="2-2-基于XML管理bean"><a href="#2-2-基于XML管理bean" class="headerlink" title="2.2 基于XML管理bean"></a>2.2 基于XML管理bean</h3><h4 id="2-2-1-实验一：入门案例"><a href="#2-2-1-实验一：入门案例" class="headerlink" title="2.2.1 实验一：入门案例"></a>2.2.1 实验一：入门案例</h4><ol><li><p>创建Maven Module</p></li><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 基于Maven依赖传递性，导入spring-context依赖即可导入当前所需所有jar包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../images/SSM+Mybatis-Plus/%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96.png" alt="引入依赖"></p></li><li><p>创建类HelloWorld</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建Spring的配置文件，applicationContext.xml</p></li><li><p>在Spring的配置文件中配置bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    配置HelloWorld所对应的bean，即将HelloWorld的对象交给Spring的IOC容器管理</span></span><br><span class="line"><span class="comment">    通过bean标签配置IOC容器所管理的bean</span></span><br><span class="line"><span class="comment">    属性：</span></span><br><span class="line"><span class="comment">        id：设置bean的唯一标识</span></span><br><span class="line"><span class="comment">        class：设置bean所对应类型的全类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;helloworld&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.HelloWorld&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建测试类测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHelloWorld</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">HelloWorld</span> <span class="variable">helloworld</span> <span class="operator">=</span> (HelloWorld) ac.getBean(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">    helloworld.sayHello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>思路</p><p><img src="/../images/SSM+Mybatis-Plus/%E6%80%9D%E8%B7%AF.png" alt="思路"></p></li><li><p>注意</p><p>Spring 底层默认通过<strong>反射</strong>技术调用组件类的<strong>无参构造器</strong>来创建组件对象，这一点需要注意。如果在需要 无参构造器时，没有无参构造器，则会抛出下面的异常：</p><blockquote><p>org.springframework.beans.factory.BeanCreationException: Error creating bean with name ‘helloworld’ defined in class path resource [applicationContext.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.atguigu.spring.bean.HelloWorld]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.atguigu.spring.bean.HelloWorld. ()</p></blockquote></li></ol><h4 id="2-2-2-实验二：获取bean"><a href="#2-2-2-实验二：获取bean" class="headerlink" title="2.2.2 实验二：获取bean"></a>2.2.2 实验二：获取bean</h4><ol><li><p>方式一：根据id获取</p><p>由于 id 属性指定了 bean 的唯一标识，所以根据 bean 标签的 id 属性可以精确获取到一个组件对象。 上个实验中我们使用的就是这种方式。</p></li><li><p>方式二：<strong>根据类型获取</strong>（以后用的最多的方式）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHelloWorld</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">HelloWorld</span> <span class="variable">bean</span> <span class="operator">=</span> ac.getBean(HelloWorld.class);</span><br><span class="line">    bean.sayHello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方式三：根据id和类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHelloWorld</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">HelloWorld</span> <span class="variable">bean</span> <span class="operator">=</span> ac.getBean(<span class="string">&quot;helloworld&quot;</span>, HelloWorld.class);</span><br><span class="line">    bean.sayHello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注意</p><p>当根据类型获取bean时，要求IOC容器中指定类型的bean有且只能有一个 </p><p>当IOC容器中一共配置了两个：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;helloworldOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.HelloWorld&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;helloworldTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.HelloWorld&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据类型获取时会抛出异常：</p><blockquote><p>org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type ‘com.atguigu.spring.bean.HelloWorld’ available: expected single matching bean but found 2: helloworldOne,helloworldTwo</p></blockquote></li><li><p>扩展</p><p>如果组件类实现了接口，根据接口类型可以获取 bean 吗？</p><blockquote><p>可以，前提是bean唯一</p></blockquote><p>如果一个接口有多个实现类，这些实现类都配置了 bean，根据接口类型可以获取 bean 吗？</p><blockquote><p>不行，因为bean不唯一</p></blockquote></li><li><p>结论 根据类型来获取bean时，在满足bean唯一性的前提下，其实只是看：『对象 instanceof 指定的类 型』的返回结果，只要返回的是true就可以认定为和类型匹配，能够获取到。</p></li></ol><h4 id="2-2-3-实验三：依赖注入之setter注入"><a href="#2-2-3-实验三：依赖注入之setter注入" class="headerlink" title="2.2.3 实验三：依赖注入之setter注入"></a>2.2.3 实验三：依赖注入之setter注入</h4><ol><li><p>创建学生类Student</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stuedent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Character gender;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置bean时为属性赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- property标签：通过组件类的setXxx()方法给组件对象设置属性 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name属性：指定属性名（这个属性名是getXxx()、setXxx()方法定义的，和成员变量无关）--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- value属性：指定属性值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDIBySet</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-di.xml&quot;</span>);</span><br><span class="line">    <span class="type">Student</span> <span class="variable">studentOne</span> <span class="operator">=</span> ac.getBean(<span class="string">&quot;studentOne&quot;</span>, Student.class);</span><br><span class="line">    System.out.println(studentOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-4-实验四：依赖注入之构造器注入"><a href="#2-2-4-实验四：依赖注入之构造器注入" class="headerlink" title="2.2.4 实验四：依赖注入之构造器注入"></a>2.2.4 实验四：依赖注入之构造器注入</h4><ol><li><p>在Student类中添加有参构造</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer id, String name, Integer age, String sex)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.id = id;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;1002&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;33&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意： </p><p>constructor-arg标签还有两个属性可以进一步描述构造器参数： </p><ul><li>index属性：指定参数所在位置的索引（从0开始） </li><li>name属性：指定参数名</li></ul></blockquote></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDIBySet</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-di.xml&quot;</span>);</span><br><span class="line">    <span class="type">Student</span> <span class="variable">studentOne</span> <span class="operator">=</span> ac.getBean(<span class="string">&quot;studentTwo&quot;</span>, Student.class);</span><br><span class="line">    System.out.println(studentOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-5-实验五：特殊值处理"><a href="#2-2-5-实验五：特殊值处理" class="headerlink" title="2.2.5 实验五：特殊值处理"></a>2.2.5 实验五：特殊值处理</h4><ol><li><p>字面量赋值</p><blockquote><p>什么是字面量？ </p><p>int a &#x3D; 10; </p><p>声明一个变量a，初始化为10，此时a就不代表字母a了，而是作为一个变量的名字。当我们引用a 的时候，我们实际上拿到的值是10。 </p><p>而如果a是带引号的：’a’，那么它现在不是一个变量，它就是代表a这个字母本身，这就是字面量。所以字面量没有引申含义，就是我们看到的这个数据本身。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用value属性给bean的属性赋值时，Spring会把value属性的值看做字面量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>null值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">null</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;null&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上写法，为name所赋的值是字符串null</p></li><li><p>xml实体</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 小于号在XML文档中用来定义标签的开始，不能随便使用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 解决方案一：使用XML实体来代替 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;expression&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a <span class="symbol">&amp;lt;</span> b&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>CDATA节</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;expression&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 解决方案二：使用CDATA节 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- CDATA中的C代表Character，是文本、字符的含义，CDATA就表示纯文本数据 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- XML解析器看到CDATA节就知道这里是纯文本，就不会当作XML标签或属性来解析 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 所以CDATA节中写什么符号都随意 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[a &lt; b]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-6-实验六：为类类型属性赋值"><a href="#2-2-6-实验六：为类类型属性赋值" class="headerlink" title="2.2.6 实验六：为类类型属性赋值"></a>2.2.6 实验六：为类类型属性赋值</h4><ol><li><p>创建班级类Clazz</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Clazz</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改Student类</p><p>在Student类中添加以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Clazz clazz;</span><br></pre></td></tr></table></figure></li><li><p>方式一：引用外部已声明的bean</p><p>配置Clazz类型的bean：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Clazz&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;财源滚滚班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为Student中的clazz属性赋值：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>错误演示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">value</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>如果错把ref属性写成了value属性，会抛出异常： Caused by: java.lang.IllegalStateException: Cannot convert value of type ‘java.lang.String’ to required type ‘com.atguigu.spring.bean.Clazz’ for property ‘clazz’: no matching editors or conversion strategy found 意思是不能把String类型转换成我们要的Clazz类型，说明我们使用value属性时，Spring只把这个 属性看做一个普通的字符串，不会认为这是一个bean的id，更不会根据它去找到bean来赋值</p></blockquote></li><li><p>方式二：内部bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 在一个bean中再声明一个bean就是内部bean --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内部bean只能用于给属性赋值，不能在外部通过IOC容器获取，因此可以省略id属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzInner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Clazz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;远大前程班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>方式三：级联属性赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 一定先引用某个bean为属性赋值，才可以使用级联方式更新属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz.clazzId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3333&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz.clazzName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-7-实验七：为数组类型属性赋值"><a href="#2-2-7-实验七：为数组类型属性赋值" class="headerlink" title="2.2.7 实验七：为数组类型属性赋值"></a>2.2.7 实验七：为数组类型属性赋值</h4><ol><li><p>修改Student类</p><p>在Student类中添加以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String[] hobbies;</span><br></pre></td></tr></table></figure></li><li><p>配置bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-8-实验八：为集合类型属性赋值"><a href="#2-2-8-实验八：为集合类型属性赋值" class="headerlink" title="2.2.8 实验八：为集合类型属性赋值"></a>2.2.8 实验八：为集合类型属性赋值</h4><ol><li><p>为List集合类型属性赋值</p><p>在Clazz类中添加以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;Student&gt; students;</span><br></pre></td></tr></table></figure><p>配置bean：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Clazz&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4444&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Javaee0222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;students&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentThree&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>若为Set集合类型属性赋值，只需要将其中的list标签改为set标签即可</p></blockquote></li><li><p>为Map集合类型属性赋值</p><p>创建教师类Teacher：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer teacherId;</span><br><span class="line">    <span class="keyword">private</span> String teacherName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Student类中添加以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Map&lt;String, Teacher&gt; teacherMap;</span><br></pre></td></tr></table></figure><p>配置bean：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacherOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Teacher&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10010&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;大宝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacherTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Teacher&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10086&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;二宝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>10010<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;teacherOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;teacherTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>引用集合类型的bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--list集合类型的bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">&quot;students&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentThree&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--map集合类型的bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:map</span> <span class="attr">id</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>10010<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;teacherOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>10086<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;teacherTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Clazz&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4444&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazzName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Javaee0222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;students&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherMap&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用util:list、util:map标签必须引入相应的命名空间，可以通过idea的提示功能选择</p></blockquote></li></ol><h4 id="2-2-9-实验九：p命名空间"><a href="#2-2-9-实验九：p命名空间" class="headerlink" title="2.2.9 实验九：p命名空间"></a>2.2.9 实验九：p命名空间</h4><p>引入p命名空间后，可以通过以下方式为bean的各个属性赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentSix&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">p:id</span>=<span class="string">&quot;1006&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;小明&quot;</span> <span class="attr">p:clazz-ref</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">p:teacherMap-ref</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-10-实验十：引入外部属性文件"><a href="#2-2-10-实验十：引入外部属性文件" class="headerlink" title="2.2.10 实验十：引入外部属性文件"></a>2.2.10 实验十：引入外部属性文件</h4><ol><li><p>加入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建外部属性文件</p></li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">atguigu</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC</span></span><br><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>引入属性文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入外部属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDataSource</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-datasource.xml&quot;</span>);</span><br><span class="line"><span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> ac.getBean(DataSource.class);</span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">System.out.println(connection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-11-实验十一：bean的作用域"><a href="#2-2-11-实验十一：bean的作用域" class="headerlink" title="2.2.11 实验十一：bean的作用域"></a>2.2.11 实验十一：bean的作用域</h4><ol><li><p>概念</p><p>在Spring中可以通过配置bean标签的scope属性来指定bean的作用域范围，各取值含义参加下表：</p><table><thead><tr><th>取值</th><th>含义</th><th>创建对象的时机</th></tr></thead><tbody><tr><td>singleton（默认）</td><td>在IOC容器中，这个bean的对象始终为单实例</td><td>IOC容器初始化时</td></tr><tr><td>prototype</td><td>这个bean在IOC容器中有多个实例</td><td>获取bean时</td></tr></tbody></table><p>如果是在WebApplicationContext环境下还会有另外两个作用域（但不常用）：</p><table><thead><tr><th>取值</th><th>含义</th></tr></thead><tbody><tr><td>request</td><td>在一个请求范围内有效</td></tr><tr><td>session</td><td>在一个会话范围内有效</td></tr></tbody></table></li><li><p>测试 User</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- scope属性：取值singleton（默认值），bean在IOC容器中只有一个实例，IOC容器初始化时创建对象 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scope属性：取值prototype，bean在IOC容器中可以有多个实例，getBean()时创建对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.bean.User&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testBeanScope</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-scope.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> ac.getBean(User.class);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> ac.getBean(User.class);</span><br><span class="line">    System.out.println(user1==user2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-12-实验十二：bean的生命周期"><a href="#2-2-12-实验十二：bean的生命周期" class="headerlink" title="2.2.12 实验十二：bean的生命周期"></a>2.2.12 实验十二：bean的生命周期</h4><ol><li><p>具体的生命周期过程</p><ul><li>bean对象创建（调用无参构造器） </li><li>给bean对象设置属性 </li><li>bean对象初始化之前操作（由bean的后置处理器负责） </li><li>bean对象初始化（需在配置bean时指定初始化方法） </li><li>bean对象初始化之后操作（由bean的后置处理器负责） </li><li>bean对象就绪可以使用 </li><li>bean对象销毁（需在配置bean时指定销毁方法） </li><li>IOC容器关闭</li></ul><p><strong>若bean的作用域为单例时，生命周期的前三个步骤（实例化、依赖注入、初始化）会在获取 IOC 容器时执行<br>若bean的作用域为多例时，生命周期的前三个步骤会在获取bean时才执行</strong></p></li><li><p>修改类 User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;生命周期：1、创建对象&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;生命周期：2、依赖注入&quot;</span>);</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initMethod</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;生命周期：3、初始化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyMethod</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;生命周期：5、销毁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意其中的initMethod()和destroyMethod()，可以通过配置bean指定为初始化和销毁的方法</p></blockquote></li><li><p>配置bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用init-method属性指定初始化方法 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用destroy-method属性指定销毁方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.bean.User&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;initMethod&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroyMethod&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><p>**<a href="#2.1.2%20IOC%E5%AE%B9%E5%99%A8%E5%9C%A8Spring%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0">ApplicationContext 接口中并没有 close() 方法，只有子接口中有</a> **</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLife</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">ClassPathXmlApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-lifecycle.xml&quot;</span>);</span><br><span class="line"><span class="type">User</span> <span class="variable">bean</span> <span class="operator">=</span> ac.getBean(User.class);</span><br><span class="line">System.out.println(<span class="string">&quot;生命周期：4、通过IOC容器获取bean并使用&quot;</span>);</span><br><span class="line">ac.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>bean的后置处理器</p><p>bean的后置处理器会在生命周期的初始化前后添加额外的操作，需要实现BeanPostProcessor接口， 且配置到IOC容器中，需要注意的是，bean后置处理器不是单独针对某一个bean生效，而是针对IOC容 器中所有bean都会执行 </p><p>创建bean的后置处理器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBeanProcessor</span> <span class="keyword">implements</span> <span class="title class_">BeanPostProcessor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">postProcessBeforeInitialization</span><span class="params">(Object bean, String beanName)</span></span><br><span class="line">            <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;☆☆☆&quot;</span> + beanName + <span class="string">&quot; = &quot;</span> + bean);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">postProcessAfterInitialization</span><span class="params">(Object bean, String beanName)</span></span><br><span class="line">            <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;★★★&quot;</span> + beanName + <span class="string">&quot; = &quot;</span> + bean);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在IOC容器中配置后置处理器：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- bean的后置处理器要放入IOC容器才能生效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myBeanProcessor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.process.MyBeanProcessor&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-13-实验十三：FactoryBean"><a href="#2-2-13-实验十三：FactoryBean" class="headerlink" title="2.2.13 实验十三：FactoryBean"></a>2.2.13 实验十三：FactoryBean</h4><ol><li><p>简介</p><p>FactoryBean是Spring提供的一种整合第三方框架的常用机制。和普通的bean不同，配置一个 FactoryBean类型的bean，在获取bean的时候得到的并不是class属性中配置的这个类的对象，而是 getObject()方法的返回值。通过这种机制，Spring可以帮我们把复杂组件创建的详细过程和繁琐细节都屏蔽起来，只把最简洁的使用界面展示给我们。</p><p><strong>将来我们整合Mybatis时，Spring就是通过FactoryBean机制来帮我们创建SqlSessionFactory对象的。</strong></p></li><li><p>方法</p><p>FactoryBean是一个接口，需要创建一个类实现该接口<br>其中有三个方法：</p><ul><li>getobject()：通过一个对象交给roc容器管理</li><li>getobjectType()：设置所提供对象的类型</li><li>issingleton()：所提供的对象是否单例</li></ul><p>当把FactoryBean的实现类配置为bean时，会将当前类中getobject()所返回的对象交给IOC容器管理</p></li><li><p>创建类UserFactoryBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserFactoryBean</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> User.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.bean.UserFactoryBean&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUserFactoryBean</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-factorybean.xml&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) ac.getBean(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-14-实验十四：基于xml的自动装配"><a href="#2-2-14-实验十四：基于xml的自动装配" class="headerlink" title="2.2.14 实验十四：基于xml的自动装配"></a>2.2.14 实验十四：基于xml的自动装配</h4><blockquote><p>自动装配： 根据指定的策略，在IOC容器中匹配某一个bean，自动为指定的bean中所依赖的类类型或接口类型属性赋值</p></blockquote><blockquote><p>使用bean标签的autowire属性设置自动装配效果 </p><p>自动装配方式：</p><ol><li><p>no,default：表示不装配，bean中的属性不会自动匹配某个bean为属性赋值，此时属性使用默认值</p></li><li><p>byType：根据类型匹配IOC容器中的某个兼容类型的bean，为属性自动赋值 。当使用byType实现自动装配时，IOC容器中有且只有一个类型匹配bean能够为属性赋值</p></li><li><p>byName：将要赋值的属性的属性名作为bean的id在IOC容器中匹配某个bean,为属性赋值。当类型匹配的bean有多个时，此时可以使用byName实现自动装配</p></li></ol></blockquote><blockquote><p>注意：</p><p>若在IOC中，没有任何一个兼容类型的bean能够为属性赋值，则该属性不装配，即值为默认值 null </p><p>若在IOC中，有多个兼容类型的bean能够为属性赋值，则抛出异常 NoUniqueBeanDefinitionException</p></blockquote><h3 id="2-3-基于注解管理bean"><a href="#2-3-基于注解管理bean" class="headerlink" title="2.3 基于注解管理bean"></a>2.3 基于注解管理bean</h3><h4 id="2-3-1-实验一：标记与扫描"><a href="#2-3-1-实验一：标记与扫描" class="headerlink" title="2.3.1 实验一：标记与扫描"></a>2.3.1 实验一：标记与扫描</h4><ol><li><p>注解</p><p>和 XML 配置文件一样，注解本身并不能执行，注解本身仅仅只是做一个标记，具体的功能是框架检测 到注解标记的位置，然后针对这个位置按照注解标记的功能来执行具体操作。</p><p>本质上：所有一切的操作都是Java代码来完成的，XML和注解只是告诉框架中的Java代码如何执行。 </p><blockquote><p>举例：元旦联欢会要布置教室，蓝色的地方贴上元旦快乐四个字，红色的地方贴上拉花，黄色的地方贴 上气球。班长做了所有标记，同学们来完成具体工作。墙上的标记相当于我们在代码中使用的注解，后面同学们 做的工作，相当于框架的具体操作。</p><img src="../images/SSM+Mybatis-Plus/注解举例.png" alt="注解举例" style="zoom:33%;" /><p>班长做了所有标记，同学们来完成具体工作。墙上的标记相当于我们在代码中使用的注解，后面同学们 做的工作，相当于框架的具体操作。</p></blockquote></li><li><p>扫描</p><p>Spring 为了知道程序员在哪些地方标记了什么注解，就需要通过扫描的方式，来进行检测。然后根据注 解进行后续操作。</p></li><li><p>标识组件的常用注解</p><blockquote><p>@Component：将类标识为普通组件 </p><p>@Controller：将类标识为控制层组件 </p><p>@Service：将类标 识为业务层组件 </p><p>@Repository：将类标识为持久层组件</p></blockquote><p>问：以上四个注解有什么关系和区别？</p><blockquote><p>答：没有任何区别，四个注解的作用对于程序来说完全相同。换不同的名字仅仅是便于程序员阅读代码。</p><img src="../images/SSM+Mybatis-Plus/四个注解有什么关系和区别.png" alt="四个注解有什么关系和区别" style="zoom: 67%;" /><p>通过查看源码我们得知，@Controller、@Service、@Repository这三个注解只是在@Component注解的基础上起了三个新的名字。 </p><p>对于Spring使用IOC容器管理这些组件来说没有区别。所以@Controller、@Service、@Repository这 三个注解只是给开发人员看的，让我们能够便于分辨组件的作用。 </p><p><strong><font color="red">注意：虽然它们本质上一样，但是为了代码的可读性，为了程序结构严谨我们肯定不能随便胡乱标记。</font></strong></p></blockquote></li><li><p>扫描组件</p><ul><li>情况一：最基本的扫描方式</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>情况二：指定要排除的组件</li></ul><p>type&#x3D;”annotation”，根据注解排除，expression中设置要排除的注解的全类名<br>type&#x3D;”assignable”，根据类型排除，expression中设置要排除的类型的全类名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- context:exclude-filter标签：指定排除规则 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      type：设置排除或包含的依据</span></span><br><span class="line"><span class="comment">      type=&quot;annotation&quot;，根据注解排除，expression中设置要排除的注解的全类名</span></span><br><span class="line"><span class="comment">      type=&quot;assignable&quot;，根据类型排除，expression中设置要排除的类型的全类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;context:exclude-filter type=&quot;assignable&quot; expression=&quot;com.atguigu.controller.UserController&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>情况三：仅扫描指定组件</li></ul><p>use-default-filters&#x3D;”false” ，取消全部扫描，只有在这种情况下“只扫描”才有意义</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- context:include-filter标签：指定在原有扫描规则的基础上追加的规则 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- use-default-filters属性：取值false表示关闭默认扫描规则 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 此时必须设置use-default-filters=&quot;false&quot;，因为默认规则即扫描指定包下所有类 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      type：设置排除或包含的依据</span></span><br><span class="line"><span class="comment">      type=&quot;annotation&quot;，根据注解排除，expression中设置要排除的注解的全类名</span></span><br><span class="line"><span class="comment">      type=&quot;assignable&quot;，根据类型排除，expression中设置要排除的类型的全类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;context:exclude-filter type=&quot;assignable&quot; expression=&quot;com.atguigu.controller.UserController&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>组件所对应的bean的id</p><p>在我们使用XML方式管理bean的时候，每个bean都有一个唯一标识，便于在其他地方引用。现在使用 注解后，每个组件仍然应该有一个唯一标识。</p><blockquote><p>默认情况 </p><p><strong>类名首字母小写就是bean的id</strong>。例如：UserController类对应的bean的id就是userController。 </p><p>自定义bean的id </p><p>可通过标识组件的注解的value属性设置自定义的bean的id，@Service(“userService”)</p></blockquote></li></ol><h4 id="2-3-2-实验二：基于注解的自动装配"><a href="#2-3-2-实验二：基于注解的自动装配" class="headerlink" title="2.3.2 实验二：基于注解的自动装配"></a>2.3.2 实验二：基于注解的自动装配</h4><ol><li><p>@Autowired注解</p><p>在成员变量上直接标记@Autowired注解即可完成自动装配，不需要提供setXxx()方法。以后我们在项目中的正式用法就是这样。</p></li><li><p>@Autowired 注解能够标识的位置</p><blockquote><ol><li>可以标记在**<font color="red">成员变量</font>**上，此时不需要设置成员变量的set方法</li><li>可以标识在set方法上</li><li>可以标识在为当前成员变量赋值的有参构造上</li></ol></blockquote></li><li><p>@Autowired 注解的原理</p><blockquote><ol><li>默认通过byType的方式，在红IOC容器中通过类型匹配某个bean为属性赋值</li><li>若有多个类型匹配的bean，此时会自动转换为byName的方式实现自动装配的效果：将需要赋值的属性的属性名作为bean的id，来匹配某个bean，并为属性赋值</li><li>byType和byName的方式都无妨实现自动装配，即IOC容器中有多个类型匹配bean<br>且这些bean的id和要赋值的属性的属性名都不一致，此时抛异常：NoUniqueBeanDefinitionException</li><li>此时可以在要赋值的属性上，添加一个注解@Qualifier，通过该注解value属性值，指定某个bean的id，将这个bean为属性赋值</li></ol></blockquote></li><li><p>@Autowired 工作流程</p><img src="../images/SSM+Mybatis-Plus/@Autowired工作流程.png" alt="@Autowired工作流程" style="zoom:80%;" /><ul><li>首先根据所需要的组件类型到IOC容器中查找<ul><li>能够找到唯一的bean：直接执行装配 </li><li>如果完全找不到匹配这个类型的bean：装配失败</li><li>和所需类型匹配的bean不止一个<ul><li>没有@Qualifier注解：根据@Autowired标记位置成员变量的变量名作为bean的id进行匹配<ul><li>能够找到：执行装配 </li><li>找不到：装配失败</li></ul></li><li>使用@Qualifier注解：根据@Qualifier注解中指定的名称作为bean的id进行匹配<ul><li>能够找到：执行装配 </li><li>找不到：装配失败</li></ul></li></ul></li></ul></li></ul><blockquote><p> @Autowired中有属性required，默认值为true，因此在自动装配无法找到相应的bean时，会装配失败 </p><p>可以将属性required的值设置为true，则表示能装就装，装不上就不装，此时自动装配的属性为 默认值 </p><p>但是实际开发时，基本上所有需要装配组件的地方都是必须装配的，用不上这个属性。</p></blockquote></li></ol><h3 id="2-4-IOC为什么要使用-工厂-反射-创建对象？"><a href="#2-4-IOC为什么要使用-工厂-反射-创建对象？" class="headerlink" title="2.4 IOC为什么要使用 工厂 + 反射 创建对象？"></a>2.4 <font color='red'><strong>IOC为什么要使用 工厂 + 反射 创建对象？</strong></font></h3><p>pring中的IoC的实现原理就是工厂模式加反射机制。 如果工厂模式中不使用反射，而使用new创建对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口 fruit</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">fruit</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类 Apple </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">fruit</span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Apple&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类 Orange </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Orange</span> <span class="keyword">implements</span> <span class="title class_">fruit</span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Orange&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造工厂类</span></span><br><span class="line"><span class="comment">//也就是说以后如果我们在添加其他的实例的时候只需要修改工厂类就行了</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Factory</span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> fruit <span class="title function_">getInstance</span><span class="params">(String fruitName)</span>&#123;</span><br><span class="line">         fruit f=<span class="literal">null</span>;</span><br><span class="line">         <span class="keyword">if</span>(<span class="string">&quot;Apple&quot;</span>.equals(fruitName))&#123;</span><br><span class="line">             f=<span class="keyword">new</span> <span class="title class_">Apple</span>();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(<span class="string">&quot;Orange&quot;</span>.equals(fruitName))&#123;</span><br><span class="line">             f=<span class="keyword">new</span> <span class="title class_">Orange</span>();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> f;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">hello</span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] a)</span>&#123;</span><br><span class="line">         fruit f=Factory.getInstance(<span class="string">&quot;Orange&quot;</span>);</span><br><span class="line">         f.eat();</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面写法的缺点是当我们再添加一个子类的时候，就需要修改工厂类了。如果我们添加太多的子类的时候，改动就会很多。下面用反射机制实现工厂模式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">fruit</span>&#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">fruit</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Apple&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Orange</span> <span class="keyword">implements</span> <span class="title class_">fruit</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Orange&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Factory</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> fruit <span class="title function_">getInstance</span><span class="params">(String ClassName)</span>&#123;</span><br><span class="line">        fruit f=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//工厂中使用反射！</span></span><br><span class="line">            f=(fruit)Class.forName(ClassName).newInstance();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">hello</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] a)</span>&#123;</span><br><span class="line">        fruit f=Factory.getInstance(<span class="string">&quot;Reflect.Apple&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(f!=<span class="literal">null</span>)&#123;</span><br><span class="line">            f.eat();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样使用反射的方式，无论我们创建多少<code>fruit</code>的实例，都不需要修改反射生成的工厂模板，有效的降低了系统耦合性！</p><p> IOC容器的工作模式看做是工厂模式的升华，可以把IOC容器看作是一个工厂，这个工厂里要生产的对象都在配置文件中给出定义，然后利用编程语言提供的反射机制，根据配置文件中给出的类名生成相应的对象。从实现来看，IOC是把以前在工厂方法里写死的对象生成代码，改变为由配置文件来定义，也就是把工厂和对象生成这两者独立分隔开来，目的就是提高灵活性和可维护性。</p><h3 id="2-5-IOC-中-JavaBean-为什么需要一个无参构造器"><a href="#2-5-IOC-中-JavaBean-为什么需要一个无参构造器" class="headerlink" title="2.5 IOC 中 JavaBean 为什么需要一个无参构造器"></a>2.5 <font color='red'>IOC 中 JavaBean 为什么需要一个无参构造器</font></h3><h4 id="1-反射需要"><a href="#1-反射需要" class="headerlink" title="1. 反射需要"></a>1. 反射需要</h4><p><strong>反射机制 : 指的是程序在运行时能够获取自身的信息。在java中，只要给定类的名字(全限定类名)，那么就可以通过反射机制来获得类的所有属性和方法的对象</strong></p><p><strong>反射机制也跟IOC有关，因为在调用newInstance()方法反射创建一个类对象的时候只能调用无参构造函数：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">class</span> <span class="operator">=</span> Class.forName(className);</span><br><span class="line"><span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> class.newInstance(); <span class="comment">// 只能调用无参构造函数</span></span><br></pre></td></tr></table></figure><p>当然，使用 <strong>newInstance(Object … initargs)</strong> 方法,参数传入想要传入对应构造器相应类型的参数，<strong>也可以完成调用有参的创建对象</strong></p><h4 id="2-在SpringMVC里IOC方便使用"><a href="#2-在SpringMVC里IOC方便使用" class="headerlink" title="2. 在SpringMVC里IOC方便使用"></a>2. 在SpringMVC里IOC方便使用</h4><p>首先，我们知道，要为类中元素赋予初始值主要有两种方法：</p><ol><li><p>使用含有参数的构造函数</p></li><li><p>使用set方法进行赋予初始值</p></li></ol><p>但是在 Javabean中，参数的个数一但增多，采用含参构造函数的方法初始化的话，会带来很多不便：</p><ol><li>对于一个实体类，多个参数的情况下，降低程序可读性</li><li>在通过含参构造函数初始化的过程中，必须记住参数的赋值顺序，增加工作量</li><li>在通过含参构造函数初始化的过程中，参数一但有错误，就会出现错误当我们要添加新的属性的时候，必须对构造函数重新定义</li><li>必须在对象创建之前给参数赋值，而不能在创建之后</li></ol><p><strong>所以大多数时候 Setter，Getter 方法是比含参构造函数方便的</strong></p><p><font color='red'><strong>上述第五点，就给采用IOC方法的编程带来不便</strong></font></p><p>那么这里就必须要提到IOC的方法，IOC是一种控制反转的过程，我们不再通过手动创建对象和对对象进行管理，而且全权交予Spring进行管理，我们把对象的控制权交给Spring来完成，而程序只完成接收对象的工作，所以说被称为控制反转</p><p>那么通过IOC如何创建对象的呢，我们将写好的Class的有关信息写在Spring的配置文件中（或者注解），<strong>在需要的时候让Spring容器来管理这些类和对象的创建</strong></p><p>而在创建的过程中，如果有无参的构造函数，<strong>Spring可以调用无参的构造函数创建对象，并且在创建对象的时候，可以通过<code>&lt;property&gt;</code>选择性的执行对应属性的 set() 方法来初始化元素</strong></p><p>当然，如果只有有参构造函数的情况下依然可以创建对象，不过必须通过<code>&lt;constructor-arg&gt;</code>中的</p><ol><li>index （构造函数下标，第几个）</li><li>name（参数名）</li><li>type （参数类型）</li></ol><p>来指定，并且<strong>必须传参</strong>才可以创建对象</p><p><strong>所以一个无参的构造函数，可以让反射过程更加顺畅，而且一般情况下使用Setter，Getter方法替代含参构造函数也会带来更多便利</strong></p><h2 id="3-AOP"><a href="#3-AOP" class="headerlink" title="3 AOP"></a>3 AOP</h2><h3 id="3-1-场景模拟"><a href="#3-1-场景模拟" class="headerlink" title="3.1 场景模拟"></a>3.1 场景模拟</h3><h4 id="3-1-2-创建实现类"><a href="#3-1-2-创建实现类" class="headerlink" title="3.1.2 创建实现类"></a>3.1.2 创建实现类</h4><img src="../images/SSM+Mybatis-Plus/创建实现类.png" alt="创建实现类" style="zoom: 67%;" /><h4 id="3-1-3-创建带日志功能的实现类"><a href="#3-1-3-创建带日志功能的实现类" class="headerlink" title="3.1.3 创建带日志功能的实现类"></a>3.1.3 创建带日志功能的实现类</h4><img src="../images/SSM+Mybatis-Plus/创建带日志功能的实现类.png" alt="创建带日志功能的实现类" style="zoom: 67%;" /><h4 id="3-1-4-提出问题"><a href="#3-1-4-提出问题" class="headerlink" title="3.1.4 提出问题"></a>3.1.4 提出问题</h4><ol><li><p>现有代码缺陷</p><p> 针对带日志功能的实现类，我们发现有如下缺陷： </p><ul><li>对核心业务功能有干扰，导致程序员在开发核心业务功能时分散了精力 </li><li>附加功能分散在各个业务功能方法中，不利于统一维护</li></ul></li><li><p>解决思路</p><p> 解决这两个问题，核心就是：解耦。我们需要把附加功能从业务功能代码中抽取出来。</p></li><li><p>困难</p><p> 解决问题的困难：要抽取的代码在方法内部，靠以前把子类中的重复代码抽取到父类的方式没法解决。 所以需要引入新的技术。</p></li></ol><h3 id="3-2-代理模式"><a href="#3-2-代理模式" class="headerlink" title="3.2 代理模式"></a>3.2 代理模式</h3><h4 id="3-2-1-概念"><a href="#3-2-1-概念" class="headerlink" title="3.2.1 概念"></a>3.2.1 概念</h4><ol><li><p>介绍 </p><p>二十三种设计模式中的一种，属于结构型模式。它的作用就是通过提供一个代理类，让我们在调用目标 方法的时候，不再是直接对目标方法进行调用，而是通过代理类**<font color='red'>间接</font><strong>调用。让不属于目标方法核心逻辑 的代码从目标方法中剥离出来——</strong><font color='red'>解耦</font>**。调用目标方法时先调用代理对象的方法，减少对目标方法的调 用和打扰，同时让附加功能能够集中在一起也有利于统一维护。</p><ul><li><p>非代理模式</p><img src="../images/SSM+Mybatis-Plus/非代理模式.png" alt="非代理模式" style="zoom:50%;" /></li><li><p>使用代理后</p><img src="../images/SSM+Mybatis-Plus/代理模式.png" alt="代理模式" style="zoom:50%;" /></li></ul></li><li><p>生活中的代理 </p><ul><li>广告商找大明星拍广告需要经过经纪人 </li><li>合作伙伴找大老板谈合作要约见面时间需要经过秘书 </li><li>房产中介是买卖双方的代理</li></ul></li><li><p>相关术语</p><ul><li>代理：将非核心逻辑剥离出来以后，封装这些非核心逻辑的类、对象、方法。 </li><li>目标：被代理“套用”了非核心逻辑代码的类、对象、方法。</li></ul></li></ol><h4 id="3-2-2-静态代理"><a href="#3-2-2-静态代理" class="headerlink" title="3.2.2 静态代理"></a>3.2.2 静态代理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CalculatorStaticProxy</span> <span class="keyword">implements</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line">    <span class="comment">// 将被代理的目标对象声明为成员变量</span></span><br><span class="line">    <span class="keyword">private</span> Calculator target;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CalculatorStaticProxy</span><span class="params">(Calculator target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="comment">// 附加功能由代理类中的代理方法来实现</span></span><br><span class="line">        System.out.println(<span class="string">&quot;[日志] add 方法开始了，参数是：&quot;</span> + i + <span class="string">&quot;,&quot;</span> + j);</span><br><span class="line">        <span class="comment">// 通过目标对象来实现核心业务逻辑</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">addResult</span> <span class="operator">=</span> target.add(i, j);</span><br><span class="line">        System.out.println(<span class="string">&quot;[日志] add 方法结束了，结果是：&quot;</span> + addResult);</span><br><span class="line">        <span class="keyword">return</span> addResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>静态代理确实实现了解耦，但是由于<strong>代码都写死了</strong>，完全不具备任何的灵活性。就拿日志功能来 说，将来其他地方也需要附加日志，那还得再声明更多个静态代理类，那就产生了大量重复的代码，日志功能还是分散的，没有统一管理。 </p><p>提出进一步的需求：将日志功能集中到一个代理类中，将来有任何日志需求，都通过这一个代理类来实现。这就需要使用动态代理技术了。</p></blockquote><h4 id="3-2-3-动态代理"><a href="#3-2-3-动态代理" class="headerlink" title="3.2.3 动态代理"></a>3.2.3 动态代理</h4><p><img src="/../images/SSM+Mybatis-Plus/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.png" alt="动态代理"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getProxy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * newProxyInstance()：创建一个代理实例</span></span><br><span class="line"><span class="comment">         * 其中有三个参数：</span></span><br><span class="line"><span class="comment">         * 1、classLoader：加载动态生成的代理类的类加载器</span></span><br><span class="line"><span class="comment">         * 2、interfaces：目标对象实现的所有接口的class对象所组成的数组</span></span><br><span class="line"><span class="comment">         * 3、invocationHandler：设置代理对象实现目标对象方法的过程，即代理类中如何重写接口中的抽象方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getClassLoader();</span><br><span class="line">        Class&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">invocationHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvocationHandler</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * proxy：代理对象</span></span><br><span class="line"><span class="comment">                 * method：代理对象需要实现的方法，即其中需要重写的方法</span></span><br><span class="line"><span class="comment">                 * args：method所对应方法的参数</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;[动态代理][日志] &quot;</span>+method.getName()+<span class="string">&quot;，参 数：&quot;</span>+ Arrays.toString(args));</span><br><span class="line">                    result = method.invoke(target, args);</span><br><span class="line">                    System.out.println(<span class="string">&quot;[动态代理][日志] &quot;</span>+method.getName()+<span class="string">&quot;，结 果：&quot;</span>+ result);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    System.out.println(<span class="string">&quot;[动态代理][日志] &quot;</span>+method.getName()+<span class="string">&quot;，异 常：&quot;</span>+e.getMessage());</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;[动态代理][日志] &quot;</span>+method.getName()+<span class="string">&quot;，方法执行完毕&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(classLoader,interfaces,invocationHandler);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-4-测试"><a href="#3-2-4-测试" class="headerlink" title="3.2.4 测试"></a>3.2.4 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDynamicProxy</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;Spring-ioc-annotation.</span></span><br><span class="line"><span class="string">    UserService userService = ioc.getBean(UserServiceImpl.class);</span></span><br><span class="line"><span class="string">    System.out.println(userService.getClass());</span></span><br><span class="line"><span class="string">    ProxyFactory proxyFactory = new ProxyFactory(userService);</span></span><br><span class="line"><span class="string">    UserService proxy = (UserService) proxyFactory.getProxy();</span></span><br><span class="line"><span class="string">    System.out.println(proxy.getClass());</span></span><br><span class="line"><span class="string">    proxy.saveUser();</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-AOP概念及相关术语"><a href="#3-3-AOP概念及相关术语" class="headerlink" title="3.3 AOP概念及相关术语"></a>3.3 AOP概念及相关术语</h3><h4 id="3-3-1-概述"><a href="#3-3-1-概述" class="headerlink" title="3.3.1 概述"></a>3.3.1 概述</h4><p>AOP（Aspect Oriented Programming）是一种设计思想，是软件设计领域中的**<font color='red'>面向切面编程</font><strong>，它是面向对象编程的一种补充和完善，它以通过预编译方式和运行期动态代理方式实现在</strong><font color='red'>不修改源代码的情况下给程序动态统一添加额外功能的一种技术</font>**。</p><h4 id="3-3-2-相关术语"><a href="#3-3-2-相关术语" class="headerlink" title="3.3.2 相关术语"></a>3.3.2 相关术语</h4><ol><li><p>横切关注点</p><p>从每个方法中抽取出来的同一类**<font color='red'>非核心业务</font>**。在同一个项目中，我们可以使用多个横切关注点对相关方法进行多个不同方面的增强。 </p><p>这个概念不是语法层面天然存在的，而是根据附加功能的逻辑上的需要：有十个附加功能，就有十个横切关注点。</p><img src="../images/SSM+Mybatis-Plus/横切关注点.png" alt="横切关注点" style="zoom:50%;" /></li><li><p>通知</p><p>每一个横切关注点上要做的事情都需要写一个方法来实现，这样的方法就叫通知方法。</p><ul><li>前置通知：在被代理的目标方法<strong>前</strong>执行 </li><li>返回通知：在被代理的目标方法<strong>成功结束</strong>后执行（寿终正寝） </li><li>异常通知：在被代理的目标方法<strong>异常结束</strong>后执行（死于非命） </li><li>后置通知：在被代理的目标方法<strong>最终结束</strong>后执行（盖棺定论） </li><li>环绕通知：使用try…catch…finally结构围绕<strong>整个</strong>被代理的目标方法，包括上面四种通知对应的所有位置</li></ul><img src="../images/SSM+Mybatis-Plus/通知.png" alt="通知" style="zoom:50%;" /></li><li><p>切面</p><p>封装通知方法的类。</p><img src="../images/SSM+Mybatis-Plus/切面.png" alt="切面" style="zoom:50%;" /></li><li><p>目标</p><p>被代理的目标对象。</p></li><li><p>代理</p><p>向目标对象应用通知之后创建的代理对象。</p></li><li><p>连接点</p><p>这也是一个纯逻辑概念，不是语法定义的。 </p><p>把方法排成一排，每一个横切位置看成x轴方向，把方法从上到下执行的顺序看成y轴，x轴和y轴的交叉点就是连接点。</p><img src="../images/SSM+Mybatis-Plus/连接点.png" alt="连接点"  /></li><li><p>切入点 </p><p>定位连接点的方式。 每个类的方法中都包含多个连接点，所以连接点是类中客观存在的事物（从逻辑上来说）。 </p><p>如果把连接点看作数据库中的记录，那么切入点就是查询记录的 SQL 语句。 </p><p>Spring 的 AOP 技术可以通过切入点定位到特定的连接点。 </p><p>切点通过 org.springframework.aop.Pointcut 接口进行描述，它使用类和方法作为连接点的查询条件。</p></li></ol><h4 id="3-3-3-作用"><a href="#3-3-3-作用" class="headerlink" title="3.3.3 作用"></a>3.3.3 作用</h4><ul><li>简化代码：把方法中固定位置的重复的代码抽取出来，让被抽取的方法更专注于自己的核心功能， 提高内聚性。 </li><li>代码增强：把特定的功能封装到切面类中，看哪里有需要，就往上套，被套用了切面逻辑的方法就 被切面给增强了。</li></ul><h3 id="3-4-基于注解的AOP"><a href="#3-4-基于注解的AOP" class="headerlink" title="3.4 基于注解的AOP"></a>3.4 基于注解的AOP</h3><h4 id="3-4-1-技术说明"><a href="#3-4-1-技术说明" class="headerlink" title="3.4.1 技术说明"></a>3.4.1 技术说明</h4><img src="../images/SSM+Mybatis-Plus/技术说明.png" alt="技术说明" style="zoom:50%;" /><ul><li>动态代理（InvocationHandler）：JDK原生的实现方式，需要被代理的目标类必须实现接口。因为这个技术要求<strong>代理对象和目标对象实现同样的接口</strong>（兄弟两个拜把子模式）。 </li><li>cglib：通过<strong>继承被代理的目标类</strong>（认干爹模式）实现代理，所以不需要目标类实现接口。 </li><li>AspectJ：本质上是静态代理，<strong>将代理逻辑“织入”被代理的目标类编译得到的字节码文件</strong>，所以最 终效果是动态的。weaver就是织入器。Spring只是借用了AspectJ中的注解。</li></ul><h4 id="3-4-2-准备工作"><a href="#3-4-2-准备工作" class="headerlink" title="3.4.2 准备工作"></a>3.4.2 准备工作</h4><ol><li><p>添加依赖</p><p>在IOC所需依赖基础上再加入下面依赖即可：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring-aspects会帮我们传递过来aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>准备被代理的目标资源</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">sub</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">mul</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CalculatorPureImpl</span> <span class="keyword">implements</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> i + j;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内部 result = &quot;</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sub</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> i - j;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内部 result = &quot;</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mul</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> i * j;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内部 result = &quot;</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> i / j;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法内部 result = &quot;</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="3-4-3-创建切面类并配置"><a href="#3-4-3-创建切面类并配置" class="headerlink" title="3.4.3 创建切面类并配置"></a>3.4.3 创建切面类并配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoggerAspect</span> &#123;</span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.lxuan.spring.aop.CalculatorPureImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">poinCut</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;poinCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeMethod</span><span class="params">(JoinPoint joinPoint)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">args</span> <span class="operator">=</span> Arrays.toString(joinPoint.getArgs());</span><br><span class="line">        System.out.println(<span class="string">&quot;Logger--&gt;前置通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，参数：&quot;</span>+args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;poinCut()&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturningMethod</span><span class="params">(JoinPoint joinPoint, Object result)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        System.out.println(<span class="string">&quot;Logger--&gt;返回通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，结果：&quot;</span>+result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;poinCut()&quot;, throwing = &quot;ex&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowingMethod</span><span class="params">(JoinPoint joinPoint, Throwable ex)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        System.out.println(<span class="string">&quot;Logger--&gt;异常通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，异常：&quot;</span>+ex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;poinCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterMethod</span><span class="params">(JoinPoint joinPoint)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        System.out.println(<span class="string">&quot;Logger--&gt;后置通知，方法名：&quot;</span>+methodName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;poinCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">aroundMethod</span><span class="params">(ProceedingJoinPoint joinPoint)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">args</span> <span class="operator">=</span> Arrays.toString(joinPoint.getArgs());</span><br><span class="line">        <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法执行之前&quot;</span>);</span><br><span class="line">            <span class="comment">//目标对象（连接点）方法的执行</span></span><br><span class="line">            result = joinPoint.proceed();</span><br><span class="line">            System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法返回值之后&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法出现异常时&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法执行完毕&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Spring的配置文件中配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    基于注解的AOP的实现：</span></span><br><span class="line"><span class="comment">    1、将目标对象和切面交给IOC容器管理（注解+扫描）</span></span><br><span class="line"><span class="comment">    2、开启AspectJ的自动代理，为目标对象自动生成代理</span></span><br><span class="line"><span class="comment">    3、将切面类通过注解@Aspect标识</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.aop.annotation&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-4-4-各种通知"><a href="#3-4-4-各种通知" class="headerlink" title="3.4.4 各种通知"></a>3.4.4 各种通知</h4><ul><li>前置通知：使用**<code>@Before</code><strong>注解标识，在被代理的目标方法</strong><font color='red'>前</font>**执行 </li><li>返回通知：使用**<code>@AfterReturning</code><strong>注解标识，在被代理的目标方法</strong><font color='red'>成功结束</font>**后执行（寿终正寝） </li><li>异常通知：使用**<code>@AfterThrowing</code><strong>注解标识，在被代理的目标方法</strong><font color='red'>异常结束(catch)</font>**后执行（死于非命） </li><li>后置通知：使用**<code>@After</code><strong>注解标识，在被代理的目标方法</strong><font color='red'>最终结束(finally)</font>**后执行（盖棺定论） </li><li>环绕通知：使用**<code>@Around</code><strong>注解标识，使用try…catch…finally结构围绕</strong><font color='red'>整个</font>**被代理的目标方法，包括上面四种通知对应的所有位置</li></ul><blockquote><p>各种通知的执行顺序：</p><ul><li>Spring版本5.3.x以前： <ul><li>前置通知 </li><li>目标操作 </li><li>后置通知 </li><li>返回通知或异常通知</li></ul></li><li>Spring版本5.3.x以后：<ul><li>前置通知 </li><li>目标操作 </li><li>返回通知或异常通知 </li><li>后置通知</li></ul></li></ul></blockquote><h4 id="3-4-5-切入点表达式语法"><a href="#3-4-5-切入点表达式语法" class="headerlink" title="3.4.5 切入点表达式语法"></a>3.4.5 切入点表达式语法</h4><ol><li><p>作用</p><img src="../images/SSM+Mybatis-Plus/切入点表达式作用.png" alt="切入点表达式作用" style="zoom:50%;" /></li><li><p>语法细节</p><ul><li><p>用<code>*</code>号代替“权限修饰符”和“返回值” 部分表示 “权限修饰符”和“返回值”不限</p></li><li><p>在包名的部分，一个<code>*</code>号只能代表包的层次结构中的一层，表示这一层是任意的。</p><blockquote><p>例如：*.Hello匹配com.Hello，不匹配com.atguigu.Hello</p></blockquote></li><li><p>在包名的部分，使用<code>*..</code>表示包名任意、包的层次深度任意</p></li><li><p>在类名的部分，类名部分整体用<code>*</code>号代替，表示类名任意</p></li><li><p>在类名的部分，可以使用<code>*</code>号代替类名的一部分</p><blockquote><p>例如：*Service匹配所有名称以Service结尾的类或接口</p></blockquote></li><li><p>在方法名部分，可以使用<code>*</code>号表示方法名任意</p></li><li><p>在方法名部分，可以使用<code>*</code>号代替方法名的一部分</p><blockquote><p>例如：*Operation匹配所有方法名以Operation结尾的方法</p></blockquote></li><li><p>在方法参数列表部分，使用<code>(..)</code>表示参数列表任意 </p></li><li><p>在方法参数列表部分，使用<code>(int,..)</code>表示参数列表以一个int类型的参数开头 </p></li><li><p>在方法参数列表部分，基本数据类型和对应的包装类型是不一样的</p><blockquote><p>切入点表达式中使用 int 和实际方法中 Integer 是不匹配的</p></blockquote></li><li><p>在方法返回值部分，如果想要明确指定一个返回值类型，那么必须同时写明权限修饰符</p><blockquote><p>例如：execution(public int ..Service.*(.., int)) 正确 *</p><p><em>例如：execution(</em> int ..Service.*(.., int)) 错误</p></blockquote></li></ul><p><img src="/../images/SSM+Mybatis-Plus/%E8%AF%AD%E6%B3%95%E7%BB%86%E8%8A%82.png" alt="语法细节"></p></li></ol><h4 id="3-4-6-重用切入点表达式"><a href="#3-4-6-重用切入点表达式" class="headerlink" title="3.4.6 重用切入点表达式"></a>3.4.6 重用切入点表达式</h4><ol><li><p>声明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(* com.atguigu.aop.annotation.*.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span>&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>在同一个切面中使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeMethod</span><span class="params">(JoinPoint joinPoint)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">    <span class="type">String</span> <span class="variable">args</span> <span class="operator">=</span> Arrays.toString(joinPoint.getArgs());</span><br><span class="line">    System.out.println(<span class="string">&quot;Logger--&gt;前置通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，参数：&quot;</span>+args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在不同切面中使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before(&quot;com.atguigu.aop.CommonPointCut.pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeMethod</span><span class="params">(JoinPoint joinPoint)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">    <span class="type">String</span> <span class="variable">args</span> <span class="operator">=</span> Arrays.toString(joinPoint.getArgs());</span><br><span class="line">    System.out.println(<span class="string">&quot;Logger--&gt;前置通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，参数：&quot;</span>+args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="3-4-7-获取通知的相关信息"><a href="#3-4-7-获取通知的相关信息" class="headerlink" title="3.4.7 获取通知的相关信息"></a>3.4.7 获取通知的相关信息</h4><ol><li><p>获取连接点信息</p><p>获取连接点信息可以在通知方法的参数位置设置<code>JoinPoint</code>类型的形参</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before(&quot;execution(public int com.atguigu.aop.annotation.CalculatorImpl.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeMethod</span><span class="params">(JoinPoint joinPoint)</span>&#123;</span><br><span class="line">    <span class="comment">//获取连接点的签名信息</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">    <span class="comment">//获取目标方法到的实参信息</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">args</span> <span class="operator">=</span> Arrays.toString(joinPoint.getArgs());</span><br><span class="line">    System.out.println(<span class="string">&quot;Logger--&gt;前置通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，参数：&quot;</span>+args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>获取目标方法的返回值</p><p><code>@AfterReturning</code>中的属性<code>returning</code>，用来将通知方法的某个形参，接收目标方法的返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AfterReturning(value = &quot;execution(* com.atguigu.aop.annotation.CalculatorImpl.*(..))&quot;, returning = &quot;result&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturningMethod</span><span class="params">(JoinPoint joinPoint, Object result)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">    System.out.println(<span class="string">&quot;Logger--&gt;返回通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，结果：&quot;</span>+result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>获取目标方法的异常 </p><p><code>@AfterThrowing</code>中的属性<code>throwing</code>，用来将通知方法的某个形参，接收目标方法的异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AfterThrowing(value = &quot;execution(* com.atguigu.aop.annotation.CalculatorImpl.*(..))&quot;, throwing = &quot;ex&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowingMethod</span><span class="params">(JoinPoint joinPoint, Throwable ex)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">    System.out.println(<span class="string">&quot;Logger--&gt;异常通知，方法名：&quot;</span>+methodName+<span class="string">&quot;，异常：&quot;</span>+ex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="3-4-8-环绕通知"><a href="#3-4-8-环绕通知" class="headerlink" title="3.4.8 环绕通知"></a>3.4.8 环绕通知</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Around(&quot;execution(* com.atguigu.aop.annotation.CalculatorImpl.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">aroundMethod</span><span class="params">(ProceedingJoinPoint joinPoint)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">    <span class="type">String</span> <span class="variable">args</span> <span class="operator">=</span> Arrays.toString(joinPoint.getArgs());</span><br><span class="line">    <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法执行之前&quot;</span>);</span><br><span class="line">        <span class="comment">//目标方法的执行，目标方法的返回值一定要返回给外界调用者</span></span><br><span class="line">        result = joinPoint.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法返回值之后&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法出现异常时&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知--&gt;目标对象方法执行完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-9-切面的优先级"><a href="#3-4-9-切面的优先级" class="headerlink" title="3.4.9 切面的优先级"></a>3.4.9 切面的优先级</h4><p>相同目标方法上同时存在多个切面时，切面的优先级控制切面的**<font color='red'>内外嵌套</font>**顺序。 </p><ul><li>优先级高的切面：外面 </li><li>优先级低的切面：里面</li></ul><p>使用<code>@Order</code>注解可以控制切面的优先级：</p><ul><li>@Order(较小的数)：优先级高 </li><li>@Order(较大的数)：优先级低</li></ul><img src="../images/SSM+Mybatis-Plus/切面的优先级.png" alt="切面的优先级" style="zoom: 50%;" /><h3 id="3-5-基于XML的AOP（了解）"><a href="#3-5-基于XML的AOP（了解）" class="headerlink" title="3.5 基于XML的AOP（了解）"></a>3.5 基于XML的AOP（了解）</h3><p>删除源代码的注解，以及类上的<code>@Aspect</code>注解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置切面类--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第一个切面类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;loggerAspect&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.atguigu.aop.xml.CalculatorImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;beforeMethod&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;afterMethod&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;afterReturningMethod&quot;</span> <span class="attr">returning</span>=<span class="string">&quot;result&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after-returning</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;afterThrowingMethod&quot;</span> <span class="attr">throwing</span>=<span class="string">&quot;ex&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:after-throwing</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;aroundMethod&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:around</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第二个切面类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;validateAspect&quot;</span> <span class="attr">order</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;validateBeforeMethod&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-声明式事务"><a href="#4-声明式事务" class="headerlink" title="4 声明式事务"></a>4 声明式事务</h2><h3 id="4-1-JdbcTemplate"><a href="#4-1-JdbcTemplate" class="headerlink" title="4.1 JdbcTemplate"></a>4.1 JdbcTemplate</h3><h4 id="4-1-1-简介"><a href="#4-1-1-简介" class="headerlink" title="4.1.1 简介"></a>4.1.1 简介</h4><p>Spring 框架对 JDBC 进行封装，使用 JdbcTemplate 方便实现对数据库操作</p><h4 id="4-1-2-准备工作"><a href="#4-1-2-准备工作" class="headerlink" title="4.1.2 准备工作"></a>4.1.2 准备工作</h4><ol><li><p>加入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 基于Maven依赖传递性，导入spring-context依赖即可导入当前所需所有jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- spring-aspects会帮我们传递过来aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--lombok注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.24<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.27<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">lx*0+0-0</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssm</span></span><br><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure></li><li><p>配置Spring的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入外部属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;atguigu.url&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;atguigu.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;atguigu.username&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;atguigu.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置 JdbcTemplate --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 装配数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;druidDataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="4-1-3-测试"><a href="#4-1-3-测试" class="headerlink" title="4.1.3 测试"></a>4.1.3 测试</h4><p>在测试类装配 JdbcTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:spring-jdbc.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcTemplateTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insterUser</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into user values(?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql, <span class="literal">null</span>,<span class="string">&quot;lx&quot;</span>, <span class="string">&quot;456789&quot;</span>, <span class="number">23</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;123@qq.com&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectUserById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user where user_id = ?&quot;</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;User&gt;(User.class), <span class="number">1</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">        List&lt;User&gt; users = jdbcTemplate.query(sql1, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;User&gt;(User.class));</span><br><span class="line">        System.out.println(users);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;select count(*) from user&quot;</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sql2, Integer.class);</span><br><span class="line">        System.out.println(integer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-声明式事务概念"><a href="#4-2-声明式事务概念" class="headerlink" title="4.2 声明式事务概念"></a>4.2 声明式事务概念</h3><h4 id="4-2-1-编程式事务"><a href="#4-2-1-编程式事务" class="headerlink" title="4.2.1 编程式事务"></a>4.2.1 编程式事务</h4><p>事务功能的相关操作全部通过自己编写代码来实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> ...;</span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line">     <span class="comment">// 开启事务：关闭事务的自动提交</span></span><br><span class="line">     conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 核心操作</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提交事务</span></span><br><span class="line">    conn.commit();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    <span class="comment">// 回滚事务</span></span><br><span class="line">    conn.rollBack();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">// 释放数据库连接</span></span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编程式的实现方式存在缺陷： </p><ul><li><strong>细节没有被屏蔽</strong>：具体操作过程中，所有细节都需要程序员自己来完成，比较繁琐。 </li><li><strong>代码复用性不高</strong>：如果没有有效抽取出来，每次实现功能都需要自己编写代码，代码就没有得到复 用。</li></ul><h4 id="4-2-2-声明式事务"><a href="#4-2-2-声明式事务" class="headerlink" title="4.2.2 声明式事务"></a>4.2.2 声明式事务</h4><p>既然事务控制的代码有规律可循，代码的结构基本是确定的，所以框架就可以将固定模式的代码抽取出 来，进行相关的封装。</p><p>封装起来后，我们只需要在配置文件中进行简单的配置即可完成操作。</p><ul><li>好处1：提高开发效率 </li><li>好处2：消除了冗余的代码 </li><li>好处3：框架会综合考虑相关领域中在实际开发环境下有可能遇到的各种问题，进行了健壮性、性 能等各个方面的优化</li></ul><p>所以，我们可以总结下面两个概念： </p><ul><li>**<font color='red'>编程式：自己写代码</font>**实现功能 </li><li><strong><font color='red'>声明式</font><strong>：通过配置让</strong><font color='red'>框架实现功能</font></strong></li></ul><h3 id="4-3-基于注解的声明式事务❗"><a href="#4-3-基于注解的声明式事务❗" class="headerlink" title="4.3 基于注解的声明式事务❗"></a>4.3 基于注解的声明式事务❗</h3><h4 id="4-3-1-准备工作"><a href="#4-3-1-准备工作" class="headerlink" title="4.3.1 准备工作"></a>4.3.1 准备工作</h4><ol><li><p>配置Spring的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxuan.spring&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导入外部属性文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;jdbc.properties&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置 JdbcTemplate--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;druidDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="4-3-2-测试无事务情况"><a href="#4-3-2-测试无事务情况" class="headerlink" title="4.3.2 测试无事务情况"></a>4.3.2 测试无事务情况</h4><ol><li><p>模拟场景</p><p>用户购买图书，先查询图书的价格，再更新图书的库存和用户的余额</p><p>假设用户id为1的用户，购买id为1的图书</p><p>用户余额为50，而图书价格为80 </p><p>购买图书之后，用户的余额为-30，数据库中余额字段设置了无符号，因此无法将-30插入到余额字段 </p><p>此时执行sql语句会抛出SQLException</p></li><li><p>观察结果</p><p>因为没有添加事务，图书的库存更新了，但是用户的余额没有更新 </p><p>显然这样的结果是错误的，购买图书是一个完整的功能，更新库存和更新余额要么都成功要么都失败</p></li></ol><h4 id="4-3-3-加入事务"><a href="#4-3-3-加入事务" class="headerlink" title="4.3.3 加入事务"></a>4.3.3 加入事务</h4><ol><li><p>添加事务配置</p><p>在Spring的配置文件中添加配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;druidDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">开启事务的注解驱动</span></span><br><span class="line"><span class="comment">通过注解@Transactional所标识的方法或标识的类中所有的方法，都会被事务管理器管理事务</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- transaction-manager属性的默认值是transactionManager，如果事务管理器bean的id正好就</span></span><br><span class="line"><span class="comment">是这个默认值，则可以省略这个属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>注意：导入的名称空间需要 <strong>tx</strong> 结尾的那个。</p></li><li><p>添加事务注解</p><p>因为service层表示业务逻辑层，一个方法表示一个完成的功能，因此处理事务一般在<strong>service</strong>层处理 </p><p>在BookServiceImpl的buybook()添加注解@Transactional</p></li><li><p>观察结果</p><p>由于使用了Spring的声明式事务，更新库存和更新余额都没有执行</p></li></ol><h4 id="4-3-4-Transactional注解标识的位置"><a href="#4-3-4-Transactional注解标识的位置" class="headerlink" title="4.3.4 @Transactional注解标识的位置"></a>4.3.4 <code>@Transactional</code>注解标识的位置</h4><p><code>@Transactional</code>标识在<strong>方法</strong>上，只会影响该方法 </p><p><code>@Transactional</code>标识的<strong>类</strong>上，会影响类中所有的方法</p><h4 id="4-3-5-事务属性：只读"><a href="#4-3-5-事务属性：只读" class="headerlink" title="4.3.5 事务属性：只读"></a>4.3.5 事务属性：只读</h4><ol><li><p>介绍</p><p>对一个查询操作来说，如果我们把它设置成只读，就能够明确告诉数据库，这个操作不涉及写操作。这 样数据库就能够针对查询操作来进行优化。</p></li><li><p>使用方式</p><p><code>@Transactional(readOnly = true)</code></p></li><li><p>注意</p><p>对增删改操作设置只读会抛出下面异常： </p><p><code>Caused by: java.sql.SQLException: Connection is read-only. Queries leading to data modification are not allowe</code></p></li></ol><h4 id="4-3-6-事务属性：超时"><a href="#4-3-6-事务属性：超时" class="headerlink" title="4.3.6 事务属性：超时"></a>4.3.6 事务属性：超时</h4><ol><li><p>介绍</p><p>事务在执行过程中，有可能因为遇到某些问题，导致程序卡住，从而长时间占用数据库资源。而长时间 占用资源，大概率是因为程序运行出现了问题（可能是Java程序或MySQL数据库或网络连接等等）。 </p><p>此时这个很可能出问题的程序应该被回滚，撤销它已做的操作，事务结束，把资源让出来，让其他正常 程序可以执行。</p><p><strong>概括来说就是一句话：超时回滚，释放资源。</strong></p></li><li><p>使用方式</p><p>@Transactional(timeout &#x3D; 3)</p></li><li><p>观察结果</p><p>执行过程中抛出异常：</p><p>org.springframework.transaction.TransactionTimedOutException: Transaction timed out: deadline was Fri Jun 04 16:25:39 CST 2022</p></li></ol><h4 id="4-3-7-事务属性：回滚策略"><a href="#4-3-7-事务属性：回滚策略" class="headerlink" title="4.3.7 事务属性：回滚策略"></a>4.3.7 事务属性：回滚策略</h4><ol><li><p>介绍</p><p>声明式事务默认只针对运行时异常回滚，编译时异常不回滚。</p><p>可以通过@Transactional中相关属性设置回滚策略</p><ul><li>rollbackFor属性：需要设置一个Class类型的对象</li><li>rollbackForClassName属性：需要设置一个字符串类型的全类名</li><li>noRollbackFor属性：需要设置一个Class类型的对象 </li><li>rollbackFor属性：需要设置一个字符串类型的全类名</li></ul></li><li><p>使用方式</p><p>@Transactional(noRollbackFor &#x3D; ArithmeticException.class)</p></li><li><p>观察结果</p><p>虽然购买图书功能中出现了数学运算异常（ArithmeticException），但是我们设置的回滚策略是，当出现ArithmeticException不发生回滚，因此购买图书的操作正常执行</p></li></ol><h4 id="4-3-8-事务属性：事务隔离级别"><a href="#4-3-8-事务属性：事务隔离级别" class="headerlink" title="4.3.8 事务属性：事务隔离级别"></a>4.3.8 事务属性：事务隔离级别</h4><ol><li><p>介绍</p><p>数据库系统必须具有隔离并发运行各个事务的能力，使它们不会相互影响，避免各种并发问题。一个事 务与其他事务隔离的程度称为隔离级别。SQL标准中规定了多种事务隔离级别，不同隔离级别对应不同 的干扰程度，隔离级别越高，数据一致性就越好，但并发性越弱。</p><p><a href="MySQL.md#%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB">隔离级别一共有四种：</a></p><ul><li><p><strong>读未提交：READ UNCOMMITTED</strong> </p><p>允许Transaction01读取Transaction02未提交的修改。</p></li><li><p><strong>读已提交：READ COMMITTED</strong></p><p>要求Transaction01只能读取Transaction02已提交的修改。</p></li><li><p><strong>可重复读：REPEATABLE READ</strong> </p><p>确保Transaction01可以多次从一个字段中读取到相同的值，即Transaction01执行期间禁止其它 事务对这个字段进行更新。</p><p>在MySQL数据库中，可重复读是默认事务隔离级别，且MySQL解决了幻读问题，因此是MySQL最理想的隔离级别</p></li><li><p><strong>串行化：SERIALIZABLE</strong> </p><p>确保Transaction01可以多次从一个表中读取到相同的行，在Transaction01执行期间，禁止其它 事务对这个表进行添加、更新、删除操作。可以避免任何并发问题，但性能十分低下。</p></li></ul><p>各个隔离级别解决并发问题的能力见下表：</p><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>READ UNCOMMITTED</td><td>有</td><td>有</td><td>有</td></tr><tr><td>READ COMMITTED</td><td>无</td><td>有</td><td>有</td></tr><tr><td>REPEATABLE READ</td><td>无</td><td>无</td><td>有</td></tr><tr><td>SERIALIZABLE</td><td>无</td><td>无</td><td>无</td></tr></tbody></table><p>各种数据库产品对事务隔离级别的支持程度：</p><table><thead><tr><th>隔离级别</th><th>Oracle</th><th>MySQL</th></tr></thead><tbody><tr><td>READ UNCOMMITTED</td><td>×</td><td>√</td></tr><tr><td>READ COMMITTED</td><td>√(默认)</td><td>√</td></tr><tr><td>REPEATABLE READ</td><td>×</td><td>√(默认)</td></tr><tr><td>SERIALIZABLE</td><td>√</td><td>√</td></tr></tbody></table></li><li><p>使用方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional(isolation = Isolation.DEFAULT)</span><span class="comment">//使用数据库默认的隔离级别</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.READ_UNCOMMITTED)</span><span class="comment">//读未提交</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.READ_COMMITTED)</span><span class="comment">//读已提交</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.REPEATABLE_READ)</span><span class="comment">//可重复读</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.SERIALIZABLE)</span><span class="comment">//串行化</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="4-3-9-事务属性：事务传播行为"><a href="#4-3-9-事务属性：事务传播行为" class="headerlink" title="4.3.9 事务属性：事务传播行为"></a>4.3.9 事务属性：事务传播行为</h4><ol><li><p>介绍</p><p>当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。</p></li><li><p>测试</p><p>创建接口CheckoutService：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CheckoutService</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">checkout</span><span class="params">(Integer[] bookIds, Integer userId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建实现类CheckoutServiceImpl：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckoutServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">CheckoutService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="comment">//一次购买多本图书</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkout</span><span class="params">(Integer[] bookIds, Integer userId)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Integer bookId : bookIds) &#123;</span><br><span class="line">        bookService.buyBook(bookId, userId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在BookController中添加方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckoutService checkoutService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkout</span><span class="params">(Integer[] bookIds, Integer userId)</span>&#123;</span><br><span class="line">checkoutService.checkout(bookIds, userId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在数据库中将用户的余额修改为100元</p></li><li><p>观察结果</p><p>可以通过@Transactional中的propagation属性设置事务传播行为 </p><p>修改BookServiceImpl中buyBook()上，注解@Transactional的propagation属性 </p><p>@Transactional(propagation &#x3D; Propagation.REQUIRED)，默认情况，表示如果当前线程上有已经开启的事务可用，那么就在这个事务中运行。经过观察，购买图书的方法buyBook()在checkout()中被调用，checkout()上有事务注解，因此在此事务中执行。所购买的两本图书的价格为80和50，而用户的余额为100，因此在购买第二本图书时余额不足失败，导致整个checkout()回滚，即只要有一本书买不 了，就都买不了</p><p>@Transactional(propagation &#x3D; Propagation.REQUIRES_NEW)，表示不管当前线程上是否有已经开启的事务，都要开启新事务。同样的场景，每次购买图书都是在buyBook()的事务中执行，因此第一本图 书购买成功，事务结束，第二本图书购买失败，只在第二次的buyBook()中回滚，购买第一本图书不受 影响，即能买几本就买几本</p></li></ol><h3 id="4-4-基于XML的声明式事务"><a href="#4-4-基于XML的声明式事务" class="headerlink" title="4.4 基于XML的声明式事务"></a>4.4 基于XML的声明式事务</h3><h4 id="4-3-1-场景模拟"><a href="#4-3-1-场景模拟" class="headerlink" title="4.3.1 场景模拟"></a>4.3.1 场景模拟</h4><p>参考基于注解的声明式事务</p><h4 id="4-3-2-修改Spring配置文件"><a href="#4-3-2-修改Spring配置文件" class="headerlink" title="4.3.2 修改Spring配置文件"></a>4.3.2 修改Spring配置文件</h4><p>将Spring配置文件中去掉tx:annotation-driven 标签，并添加配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务通知和切入点表达式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut</span>=<span class="string">&quot;execution(* com.atguigu.spring.tx.xml.service.impl.*.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tx:advice标签：配置事务通知 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- id属性：给事务通知标签设置唯一标识，便于引用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- transaction-manager属性：关联事务管理器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tx:method标签：配置具体的事务方法 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name属性：指定方法名，可以使用星号代表多个字符 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;query*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- read-only属性：设置只读属性 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- rollback-for属性：设置回滚的异常 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- no-rollback-for属性：设置不回滚的异常 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- isolation属性：设置事务的隔离级别 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- timeout属性：设置事务的超时属性 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- propagation属性：设置事务的传播行为 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;save*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span> <span class="attr">rollback-for</span>=<span class="string">&quot;java.lang.Exception&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRES_NEW&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span> <span class="attr">rollback-for</span>=<span class="string">&quot;java.lang.Exception&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRES_NEW&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;delete*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span> <span class="attr">rollback-for</span>=<span class="string">&quot;java.lang.Exception&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRES_NEW&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：基于xml实现的声明式事务，必须引入aspectJ的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p><img src="/../images/SSM+Mybatis-Plus/%E5%88%86%E5%89%B2%E7%BA%BF.png" alt="分割线"></p><h1 id="二、SpringMVC"><a href="#二、SpringMVC" class="headerlink" title="二、SpringMVC"></a>二、SpringMVC</h1><h2 id="1-SpringMVC简介"><a href="#1-SpringMVC简介" class="headerlink" title="1 SpringMVC简介"></a>1 SpringMVC简介</h2><h3 id="1-1-什么是MVC"><a href="#1-1-什么是MVC" class="headerlink" title="1.1 什么是MVC"></a>1.1 什么是MVC</h3><p>MVC是一种**<font color='red'>软件架构的思想</font>**，将软件按照模型、视图、控制器来划分 </p><p>M：Model，模型层，指工程中的JavaBean，作用是处理数据</p><p>JavaBean分为两类： </p><ul><li>一类称为实体类Bean：专门存储业务数据的，如 Student、User 等 </li><li>一类称为业务处理 Bean：指 Service 或 Dao 对象，专门用于处理业务逻辑和数据访问。</li></ul><p>V：View，视图层，指工程中的html或jsp等页面，作用是与用户进行交互，展示数据 </p><p>C：Controller，控制层，指工程中的servlet，作用是接收请求和响应浏览器</p><p>MVC的工作流程： 用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller 调用相应的Model层处理请求，处理完毕将结果返回到Controller，Controller再根据请求处理的结果 找到相应的View视图，渲染数据后最终响应给浏览器</p><h3 id="1-2-什么是SpringMVC"><a href="#1-2-什么是SpringMVC" class="headerlink" title="1.2 什么是SpringMVC"></a>1.2 什么是SpringMVC</h3><p>SpringMVC是Spring的一个后续产品，是Spring的一个子项目 </p><p>SpringMVC 是 Spring 为<strong>表述层</strong>开发提供的一整套完备的解决方案。在表述层框架历经 Strust、 WebWork、Strust2 等诸多产品的历代更迭之后，目前业界普遍选择了 SpringMVC 作为 Java EE 项目 表述层开发的**<font color='red'>首选方案</font>**。</p><blockquote><p>注：三层架构分为**<font color='red'>表述层（或表示层）、业务逻辑层、数据访问层</font>**，表述层表示前台页面和后台 servlet</p></blockquote><h3 id="1-3-SpringMVC的特点"><a href="#1-3-SpringMVC的特点" class="headerlink" title="1.3 SpringMVC的特点"></a>1.3 SpringMVC的特点</h3><ul><li><strong>Spring 家族原生产品</strong>，与 IOC 容器等基础设施无缝对接</li><li><strong>基于原生的Servlet</strong>，通过了功能强大的**前端控制器<font color='red'>DispatcherServlet</font>**，对请求和响应进行统一 处理</li><li>表述层各细分领域需要解决的问题<strong>全方位覆盖</strong>，提供<strong>全面解决方案</strong></li><li><strong>代码清新简洁</strong>，大幅度提升开发效率 </li><li>内部组件化程度高，可插拔式组件<strong>即插即用</strong>，想要什么功能配置相应组件即可 </li><li><strong>性能卓著</strong>，尤其适合现代大型、超大型互联网项目要求</li></ul><h2 id="2-入门案例"><a href="#2-入门案例" class="headerlink" title="2 入门案例"></a>2 入门案例</h2><h3 id="2-1-开发环境"><a href="#2-1-开发环境" class="headerlink" title="2.1 开发环境"></a>2.1 开发环境</h3><p>IDE：idea 2019.2 </p><p>构建工具：maven3.5.4 </p><p>服务器：tomcat8.5 </p><p>Spring版本：5.3.1</p><h3 id="2-2-创建maven工程"><a href="#2-2-创建maven工程" class="headerlink" title="2.2 创建maven工程"></a>2.2 创建maven工程</h3><ol><li><p>添加web模块</p></li><li><p>打包方式：war</p></li><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- SpringMVC --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencymodel</span></span></span><br><span class="line"><span class="tag">&lt;<span class="attr">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ServletAPI --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring5和Thymeleaf整合包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.15.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：由于 Maven 的传递性，我们不必将所有需要的包全部配置依赖，而是配置最顶端的依赖，其他靠 传递性导入。</p></li></ol><h3 id="2-3-配置web-xml"><a href="#2-3-配置web-xml" class="headerlink" title="2.3 配置web.xml"></a>2.3 配置web.xml</h3><p>注册SpringMVC的前端控制器DispatcherServlet</p><ol><li><p>默认配置方式</p><p>此配置作用下，SpringMVC的配置文件默认位于WEB-INF下，默认名称为- servlet.xml，例如，以下配置所对应SpringMVC的配置文件位于WEB-INF下，文件名为springMVCservlet.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">设置springMVC的核心控制器所能处理的请求的请求路径</span></span><br><span class="line"><span class="comment">/所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span></span><br><span class="line"><span class="comment">但是/不能匹配.jsp请求路径的请求</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>扩展配置方式</p><p>可通过init-param标签设置SpringMVC配置文件的位置和名称，通过load-on-startup标签设置 SpringMVC前端控制器DispatcherServlet的初始化时间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通过初始化参数指定SpringMVC配置文件的位置和名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- contextConfigLocation为固定值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用classpath:表示从类路径查找配置文件，例如maven工程中的src/main/resources --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      作为框架的核心组件，在启动过程中有大量的初始化操作要做</span></span><br><span class="line"><span class="comment">      而这些操作放在第一次请求时才执行会严重影响访问速度</span></span><br><span class="line"><span class="comment">      因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      设置springMVC的核心控制器所能处理的请求的请求路径</span></span><br><span class="line"><span class="comment">      /所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span></span><br><span class="line"><span class="comment">      但是/不能匹配.jsp请求路径的请求</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注：</p><p><code>&lt;url-pattern&gt;</code>标签中使用&#x2F;和&#x2F;*的区别：<br>   &#x2F;所匹配的请求可以是&#x2F;login或.html或.js或.css方式的请求路径，但是&#x2F;不能匹配.jsp请求路径的请<br>求<br>因此就可以避免在访问jsp页面时，该请求被DispatcherServlet处理，从而找不到相应的页面<br>&#x2F;*则能够匹配所有请求，例如在使用过滤器时，若需要对所有请求进行过滤，就需要使用&#x2F;*的写<br>法</p></blockquote><h3 id="2-4-创建请求控制器"><a href="#2-4-创建请求控制器" class="headerlink" title="2.4 创建请求控制器"></a>2.4 创建请求控制器</h3><p>由于前端控制器对浏览器发送的请求进行了统一的处理，但是具体的请求有不同的处理过程，因此需要 创建处理具体请求的类，即请求控制器</p><p>请求控制器中每一个处理请求的方法成为控制器方法</p><p>因为SpringMVC的控制器由一个POJO（普通的Java类）担任，因此需要通过@Controller注解将其标识为一个控制层组件，交给Spring的IoC容器管理，此时SpringMVC才能够识别控制器的存在</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-创建SpringMVC的配置文件"><a href="#2-5-创建SpringMVC的配置文件" class="headerlink" title="2.5 创建SpringMVC的配置文件"></a>2.5 创建SpringMVC的配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxuan.springmvc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;order&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateEngine&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图前缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateMode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HTML5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">处理静态资源，例如html、js、css、jpg</span></span><br><span class="line"><span class="comment">若只设置该标签，则只能访问静态资源，其他请求则无法访问</span></span><br><span class="line"><span class="comment">此时必须设置&lt;mvc:annotation-driven/&gt;解决问题</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启mvc注解驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 处理响应中文内容乱码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultCharset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-6-测试HelloWorld"><a href="#2-6-测试HelloWorld" class="headerlink" title="2.6 测试HelloWorld"></a>2.6 测试HelloWorld</h3><ol><li><p>实现对首页的访问</p><p>在请求控制器中创建处理请求的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @RequestMapping注解：处理请求和控制器方法之间的映射关系</span></span><br><span class="line"><span class="comment">// @RequestMapping注解的value属性可以通过请求地址匹配请求，/表示的当前工程的上下文路径</span></span><br><span class="line"><span class="comment">// 也就是localhost:8080/springMVC/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//设置视图名称</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通过超链接跳转到指定页面</p><p>在主页index.html中设置超链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/hello&#125;&quot;</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在请求控制器中创建处理请求的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">HelloWorld</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-7-总结"><a href="#2-7-总结" class="headerlink" title="2.7 总结"></a>2.7 总结</h3><p>浏览器发送请求，若请求地址符合前端控制器的<code>url-pattern</code>，该请求就会被前端控制器 <code>DispatcherServlet</code>处理。前端控制器会读取<code>SpringMVC</code>的核心配置文件，通过扫描组件找到控制器， 将请求地址和控制器中<code>@RequestMapping</code>注解的<code>value</code>属性值进行匹配，若匹配成功，该注解所标识的 控制器方法就是处理请求的方法。处理请求的方法需要返回一个字符串类型的视图名称，该视图名称会 被视图解析器解析，加上前缀和后缀组成视图的路径，通过<code>Thymeleaf</code>对视图进行渲染，最终转发到视 图所对应页面</p><h2 id="3-RequestMapping注解"><a href="#3-RequestMapping注解" class="headerlink" title="3 @RequestMapping注解"></a>3 <code>@RequestMapping</code>注解</h2><h3 id="3-1-RequestMapping注解的功能"><a href="#3-1-RequestMapping注解的功能" class="headerlink" title="3.1 @RequestMapping注解的功能"></a>3.1 @RequestMapping注解的功能</h3><p>从注解名称上我们可以看到，<code>@RequestMapping</code>注解的作用就是将请求和处理请求的控制器方法关联 起来，建立映射关系。 </p><p>SpringMVC 接收到指定的请求，就会来找到在映射关系中对应的控制器方法来处理这个请求。</p><h3 id="3-2-RequestMapping注解的位置"><a href="#3-2-RequestMapping注解的位置" class="headerlink" title="3.2 @RequestMapping注解的位置"></a>3.2 @RequestMapping注解的位置</h3><p>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息</p><p>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息</p><p>如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestMappingController</span> &#123;</span><br><span class="line">    <span class="comment">//此时请求映射所映射的请求的请求路径为：/test/testRequestMapping</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/testRequestMapping&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-RequestMapping注解的value属性"><a href="#3-3-RequestMapping注解的value属性" class="headerlink" title="3.3 @RequestMapping注解的value属性"></a>3.3 @RequestMapping注解的value属性</h3><p>@RequestMapping注解的<code>value</code>属性通过请求的请求地址匹配请求映射</p><p>@RequestMapping注解的<code>value</code>属性是一个字符串类型的数组，表示该请求映射能够匹配多个请求地址 所对应的请求 </p><p>@RequestMapping注解的<code>value</code>属性必须设置，至少通过请求地址匹配请求映射</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testRequestMapping&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/testRequestMapping<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-RequestMapping注解的method属性"><a href="#3-4-RequestMapping注解的method属性" class="headerlink" title="3.4 @RequestMapping注解的method属性"></a>3.4 @RequestMapping注解的method属性</h3><p>@RequestMapping注解的<code>method</code>属性通过请求的请求方式（<code>get</code>或<code>post</code>）匹配请求映射 </p><p>@RequestMapping注解的<code>method</code>属性是一个RequestMethod类型的数组，表示该请求映射能够匹配多种请求方式的请求</p><p>若当前请求的请求地址满足请求映射的<code>value</code>属性，但是请求方式不满足<code>method</code>属性，则浏览器报错 405：<code>Request method &#39;POST&#39; not supported</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>测试@Req uestMapping的value属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/test&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(</span></span><br><span class="line"><span class="meta">    value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;,</span></span><br><span class="line"><span class="meta">    method = &#123;RequestMethod.GET, RequestMethod.POST&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注： </p><p>1、对于处理指定请求方式的控制器方法，SpringMVC中提供了@RequestMapping的派生注解</p><p>处理get请求的映射–&gt;<code>@GetMapping</code> </p><p>处理post请求的映射–&gt;@PostMapping </p><p>处理put请求的映射–&gt;<code>@PutMapping</code> </p><p>处理delete请求的映射–&gt;<code>@DeleteMapping</code></p><p>2、常用的请求方式有<code>get</code>，<code>post</code>，<code>put</code>，<code>delete</code></p><p>但是目前浏览器只支持get和post，若在form表单提交时，为method设置了其他请求方式的字符串（put或delete），则按照默认的请求方式get处理 </p><p>若要发送put和delete请求，则需要通过spring提供的过滤器HiddenHttpMethodFilter，在 RESTful部分会讲到</p></blockquote><h3 id="3-5-RequestMapping注解的params属性（了解）"><a href="#3-5-RequestMapping注解的params属性（了解）" class="headerlink" title="3.5 @RequestMapping注解的params属性（了解）"></a>3.5 @RequestMapping注解的params属性（了解）</h3><p>@RequestMapping注解的<code>params</code>属性通过请求的请求参数匹配请求映射</p><p>@RequestMapping注解的<code>params</code>属性是一个字符串类型的数组，可以通过四种表达式设置请求参数 和请求映射的匹配关系</p><ul><li><p><code>&quot;param&quot;</code>：要求请求映射所匹配的请求必须携带param请求参数</p></li><li><p><code>&quot;!param&quot;</code>：要求请求映射所匹配的请求必须不能携带param请求参数</p></li><li><p><code>&quot;param=value&quot;</code>：要求请求映射所匹配的请求必须携带param请求参数，且param必须为value</p></li><li><p><code>&quot;param!=value&quot;</code>：要求请求映射所匹配的请求可以不携带param请求参数，但是若携带则param不能为value</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/test(username=&#x27;admin&#x27;,password=123456)&quot;</span>&gt;</span>测试@RequestMapping的params属性--&gt;/test<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(</span></span><br><span class="line"><span class="meta">    value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;</span></span><br><span class="line"><span class="meta">    ,method = &#123;RequestMethod.GET, RequestMethod.POST&#125;</span></span><br><span class="line"><span class="meta">    ,params = &#123;&quot;username&quot;,&quot;password!=123456&quot;&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestMapping</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注： </p><p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足params属性，此时 页面回报错400：Parameter conditions “username, password!&#x3D;123456” not met for actual request parameters: username&#x3D;{admin}, password&#x3D;{123456}</p></blockquote><h3 id="3-6-RequestMapping注解的headers属性（了解）"><a href="#3-6-RequestMapping注解的headers属性（了解）" class="headerlink" title="3.6 @RequestMapping注解的headers属性（了解）"></a>3.6 @RequestMapping注解的headers属性（了解）</h3><p>@RequestMapping注解的<code>headers</code>属性通过请求的请求头信息匹配请求映射</p><p>@RequestMapping注解的<code>headers</code>属性是一个字符串类型的数组，可以通过四种表达式设置请求头信 息和请求映射的匹配关系</p><ul><li><code>&quot;header&quot;</code>：要求请求映射所匹配的请求必须携带header请求头信息</li><li><code>&quot;!header&quot;</code>：要求请求映射所匹配的请求必须不能携带header请求头信息</li><li><code>&quot;header=value&quot;</code>：要求请求映射所匹配的请求必须携带header请求头信息，且header必须为value </li><li><code>&quot;header!=value&quot;</code>：要求请求映射所匹配的请求可以不携带header请求头信息，但是若携带则header不能为value</li></ul><h3 id="3-7-SpringMVC支持ant风格的路径"><a href="#3-7-SpringMVC支持ant风格的路径" class="headerlink" title="3.7 SpringMVC支持ant风格的路径"></a>3.7 SpringMVC支持ant风格的路径</h3><p><code>?</code>：表示任意的单个字符 （ 不包括？）</p><p><code>*</code>：表示任意的0个或多个字符 （不包括?和&#x2F;）</p><p><code>**</code>：表示任意层数的任意目录 </p><p>注意：在使用<code>**</code>时，只能使用 <code>xxx/**/xxx</code>的方式</p><h3 id="3-8-SpringMVC支持路径中的占位符❗"><a href="#3-8-SpringMVC支持路径中的占位符❗" class="headerlink" title="3.8 SpringMVC支持路径中的占位符❗"></a>3.8 SpringMVC支持路径中的占位符❗</h3><p>原始方式：<code>/deleteUser?id=1</code> </p><p>rest方式：<code>/user/delete/1</code></p><p>SpringMVC路径中的占位符常用于RESTful风格中，当请求路径中将某些数据通过路径的方式传输到服 务器中，就可以在相应的<code>@RequestMapping</code>注解的<code>value</code>属性中通过占位符<code>&#123;xxx&#125;</code>表示传输的数据，在 通过<code>@PathVariable</code>注解，将占位符所表示的数据赋值给控制器方法的形参</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testRest/1/admin&#125;&quot;</span>&gt;</span>测试路径中的占位符--&gt;/testRest<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRest/&#123;id&#125;/&#123;username&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRest</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id, <span class="meta">@PathVariable(&quot;username&quot;)</span></span></span><br><span class="line"><span class="params">String username)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;id:&quot;</span>+id+<span class="string">&quot;,username:&quot;</span>+username);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最终输出的内容为--&gt;id:1,username:admin</span></span><br></pre></td></tr></table></figure><h2 id="4-SpringMVC获取请求参数"><a href="#4-SpringMVC获取请求参数" class="headerlink" title="4 SpringMVC获取请求参数"></a>4 SpringMVC获取请求参数</h2><h3 id="4-1-通过ServletAPI获取"><a href="#4-1-通过ServletAPI获取" class="headerlink" title="4.1 通过ServletAPI获取"></a>4.1 通过ServletAPI获取</h3><p>将<code>HttpServletRequest</code>作为控制器方法的形参，此时HttpServletRequest类型的参数表示封装了当前请 求的请求报文的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testParam</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;username:&quot;</span>+username+<span class="string">&quot;,password:&quot;</span>+password);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-通过控制器方法的形参获取请求参数"><a href="#4-2-通过控制器方法的形参获取请求参数" class="headerlink" title="4.2 通过控制器方法的形参获取请求参数"></a>4.2 通过控制器方法的形参获取请求参数</h3><p>在控制器方法的形参位置，设置<strong>和请求参数同名的形参</strong>，当浏览器发送请求，匹配到请求映射时，在 <code>DispatcherServlet</code>中就会将请求参数赋值给相应的形参</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/testParam(username=&#x27;admin&#x27;,password=123456)&#125;&quot;</span>&gt;</span>测试获取请求参数--&gt;/testParam<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testParam</span><span class="params">(String username, String password)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;username:&quot;</span>+username+<span class="string">&quot;,password:&quot;</span>+password);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注： </p><p>若请求所传输的请求参数中有多个同名的请求参数，此时可以在控制器方法的形参中设置字符串 数组或者字符串类型的形参接收此请求参数 </p><p>若使用字符串数组类型的形参，此参数的数组中包含了每一个数据 </p><p>若使用字符串类型的形参，此参数的值为每个数据中间使用逗号拼接的结果</p></blockquote><h3 id="4-3-RequestParam"><a href="#4-3-RequestParam" class="headerlink" title="4.3 @RequestParam"></a>4.3 <code>@RequestParam</code></h3><p>@RequestParam是将请求参数和控制器方法的形参创建映射关系 </p><p>@RequestParam注解一共有三个属性： </p><ul><li><code>value</code>：指定为形参赋值的请求参数的参数名 </li><li><code>required</code>：设置是否必须传输此请求参数，默认值为true<ul><li>若设置为true时，则当前请求必须传输value所指定的请求参数，若没有传输该请求参数，且没有设置 defaultValue属性，则页面报错400：Required String parameter ‘xxx’ is not present；若设置为 false，则当前请求不是必须传输value所指定的请求参数，若没有传输，则注解所标识的形参的值为 null</li></ul></li><li><code>defaultValue</code>：不管required属性值为true或false，当value所指定的请求参数没有传输或传输的值 为””时，则使用默认值为形参赋值</li></ul><h3 id="4-4-RequestHeader"><a href="#4-4-RequestHeader" class="headerlink" title="4.4 @RequestHeader"></a>4.4 <code>@RequestHeader</code></h3><p>@RequestHeader是将请求头信息和控制器方法的形参创建映射关系 </p><p>@RequestHeader注解一共有三个属性：<code>value</code>、<code>required</code>、<code>defaultValue</code>，用法同@RequestParam</p><h3 id="4-5-CookieValue"><a href="#4-5-CookieValue" class="headerlink" title="4.5 @CookieValue"></a>4.5 <code>@CookieValue</code></h3><p>@CookieValue是将cookie数据和控制器方法的形参创建映射关系 </p><p>@CookieValue注解一共有三个属性：<code>value</code>、<code>required</code>、<code>defaultValue</code>，用法同@RequestParam</p><h3 id="4-6-通过POJO获取请求参数"><a href="#4-6-通过POJO获取请求参数" class="headerlink" title="4.6 通过POJO获取请求参数"></a>4.6 通过POJO获取请求参数</h3><p>可以在控制器方法的形参位置设置一个实体类类型的形参，此时若浏览器传输的请求参数的<strong>参数名和实体类中的属性名一致</strong>，那么请求参数就会为此属性赋值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/testpojo&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testpojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testPOJO</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最终结果--&gt;User&#123;id=null, username=&#x27;张三&#x27;, password=&#x27;123&#x27;, age=23, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-7-解决获取请求参数的乱码问题"><a href="#4-7-解决获取请求参数的乱码问题" class="headerlink" title="4.7 解决获取请求参数的乱码问题"></a>4.7 解决获取请求参数的乱码问题</h3><p>解决获取请求参数的乱码问题，可以使用SpringMVC提供的编码过滤器<code>CharacterEncodingFilter</code>，但是必须在web.xml中进行注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置Spring的编码过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter&lt;</span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注： </p><p><strong><font color='red'>SpringMVC中处理编码的过滤器一定要配置到其他过滤器之前，否则无效</font></strong></p></blockquote><h2 id="5-域对象共享数据"><a href="#5-域对象共享数据" class="headerlink" title="5 域对象共享数据"></a>5 域对象共享数据</h2><h3 id="5-1-使用ServletAPI向request域对象共享数据"><a href="#5-1-使用ServletAPI向request域对象共享数据" class="headerlink" title="5.1 使用ServletAPI向request域对象共享数据"></a>5.1 使用ServletAPI向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testServletAPI&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testServletAPI</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">    request.setAttribute(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,servletAPI&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-使用ModelAndView向request域对象共享数据"><a href="#5-2-使用ModelAndView向request域对象共享数据" class="headerlink" title="5.2 使用ModelAndView向request域对象共享数据"></a>5.2 使用ModelAndView向request域对象共享数据</h3><p><code>ModelAndView</code>有<code>Model</code>和<code>View</code>的功能</p><ul><li><code>Model</code>主要用于向请求域共享数据</li><li><code>View</code>主要用于设置视图，实现页面跳转</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testModelAndView&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">testModelAndView</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">ModelAndView</span> <span class="variable">mav</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">    <span class="comment">//向请求域共享数据</span></span><br><span class="line">    mav.addObject(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,ModelAndView&quot;</span>);</span><br><span class="line">    <span class="comment">//设置视图，实现页面跳转</span></span><br><span class="line">    mav.setViewName(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> mav;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-使用Model向request域对象共享数据"><a href="#5-3-使用Model向request域对象共享数据" class="headerlink" title="5.3 使用Model向request域对象共享数据"></a>5.3 使用Model向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testModel&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testModel</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,Model&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4-使用map向request域对象共享数据"><a href="#5-4-使用map向request域对象共享数据" class="headerlink" title="5.4 使用map向request域对象共享数据"></a>5.4 使用map向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testMap&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testMap</span><span class="params">(Map&lt;String, Object&gt; map)</span>&#123;</span><br><span class="line">    map.put(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,Map&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5-使用ModelMap向request域对象共享数据"><a href="#5-5-使用ModelMap向request域对象共享数据" class="headerlink" title="5.5 使用ModelMap向request域对象共享数据"></a>5.5 使用ModelMap向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testModelMap&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testModelMap</span><span class="params">(ModelMap modelMap)</span>&#123;</span><br><span class="line">    modelMap.addAttribute(<span class="string">&quot;testScope&quot;</span>, <span class="string">&quot;hello,ModelMap&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-6-Model、ModelMap、Map的关系"><a href="#5-6-Model、ModelMap、Map的关系" class="headerlink" title="5.6 Model、ModelMap、Map的关系"></a>5.6 Model、ModelMap、Map的关系</h3><p>Model、ModelMap、Map类型的参数其实本质上都是 <code>BindingAwareModelMap</code> 类型的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Model</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModelMap</span> <span class="keyword">extends</span> <span class="title class_">LinkedHashMap</span>&lt;String, Object&gt; &#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendedModelMap</span> <span class="keyword">extends</span> <span class="title class_">ModelMap</span> <span class="keyword">implements</span> <span class="title class_">Model</span> &#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BindingAwareModelMap</span> <span class="keyword">extends</span> <span class="title class_">ExtendedModelMap</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="5-7-向session域共享数据"><a href="#5-7-向session域共享数据" class="headerlink" title="5.7 向session域共享数据"></a>5.7 向session域共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testSession&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testSession</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">    session.setAttribute(<span class="string">&quot;testSessionScope&quot;</span>, <span class="string">&quot;hello,session&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><font color='red'>session 相当于你在服务器内存存了一份数据，如果项前端传数据都用 session 那服务器的内存会吃不消的。所以一般的数据最好用接口直接传json数据到前端</font></strong></p><h3 id="5-8-向application域共享数据"><a href="#5-8-向application域共享数据" class="headerlink" title="5.8 向application域共享数据"></a>5.8 向application域共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testApplication&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testApplication</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">application</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    application.setAttribute(<span class="string">&quot;testApplicationScope&quot;</span>, <span class="string">&quot;hello,application&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-SpringMVC的视图"><a href="#6-SpringMVC的视图" class="headerlink" title="6 SpringMVC的视图"></a>6 SpringMVC的视图</h2><p>SpringMVC中的视图是View接口，视图的作用渲染数据，将模型Model中的数据展示给用户</p><p>SpringMVC视图的种类很多，默认有转发视图和重定向视图 </p><p>当工程引入jstl的依赖，转发视图会自动转换为JstlView </p><p>若使用的视图技术为Thymeleaf，在SpringMVC的配置文件中配置了Thymeleaf的视图解析器，由此视 图解析器解析之后所得到的是ThymeleafView</p><h3 id="6-1-ThymeleafView"><a href="#6-1-ThymeleafView" class="headerlink" title="6.1 ThymeleafView"></a>6.1 ThymeleafView</h3><p>当控制器方法中所设置的视图名称没有任何前缀时，此时的视图名称会被SpringMVC配置文件中所配置的视图解析器解析，视图名称拼接视图前缀和视图后缀所得到的最终路径，会通过转发的方式实现跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testHello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testHello</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-转发视图（很少用）🚫"><a href="#6-2-转发视图（很少用）🚫" class="headerlink" title="6.2 转发视图（很少用）🚫"></a>6.2 转发视图（很少用）🚫</h3><p>SpringMVC中默认的转发视图是<code>InternalResourceView</code> </p><p>SpringMVC中创建转发视图的情况：</p><p>当控制器方法中所设置的视图名称<strong>以<code>&quot;forward:&quot;</code>为前缀</strong>时，创建<code>InternalResourceView</code>视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀<code>&quot;forward:&quot;</code>去掉，剩余部分作为最终路径通过转发的方式实现跳转</p><p>例如”forward:&#x2F;“，”forward:&#x2F;employee”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testForward&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testForward</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;forward:/testHello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-重定向视图"><a href="#6-3-重定向视图" class="headerlink" title="6.3 重定向视图"></a>6.3 重定向视图</h3><p>SpringMVC中默认的重定向视图是<code>RedirectView</code></p><p>当控制器方法中所设置的视图名称<strong>以”redirect:”为前缀</strong>时，创建RedirectView视图，此时的视图名称不 会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”redirect:”去掉，剩余部分作为最 终路径通过重定向的方式实现跳转</p><p>例如”redirect:&#x2F;“，”redirect:&#x2F;employee”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testRedirect&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRedirect</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/testHello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注： </p><p>重定向视图在解析时，会先将redirect:前缀去掉，然后会判断剩余部分是否以&#x2F;开头，若是则会自 动拼接上下文路径</p></blockquote><h3 id="6-4-视图控制器view-controller"><a href="#6-4-视图控制器view-controller" class="headerlink" title="6.4 视图控制器view-controller"></a>6.4 视图控制器view-controller</h3><p>当控制器方法中，仅仅用来实现页面跳转，即只需要设置视图名称时，可以将处理器方法使用<code>viewcontroller</code>标签进行表示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    path：设置处理的请求地址</span></span><br><span class="line"><span class="comment">    view-name：设置请求地址所对应的视图名称</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/testView&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;success&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注： </p><p>当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：</p><p>&lt;mvc:annotation-driven &#x2F;&gt;</p></blockquote><h2 id="7-RESTful"><a href="#7-RESTful" class="headerlink" title="7 RESTful"></a>7 RESTful</h2><h3 id="7-1-RESTful简介"><a href="#7-1-RESTful简介" class="headerlink" title="7.1 RESTful简介"></a>7.1 RESTful简介</h3><p>REST：Representational State Transfer，表现层资源状态转移。</p><ol><li><p>资源</p><p><strong>资源是一种看待服务器的方式</strong>，即，将服务器看作是由很多离散的资源组成。每个资源是服务器上一个可命名的抽象概念。因为资源是一个抽象的概念，所以它不仅仅 能代表服务器文件系统中的一个文件、 数据库中的一张表等等具体的东西，可以将资源设计的要多抽象有多抽象，只要想象力允许而且客户端 应用开发者能够理解。与面向对象设计类似，<strong>资源是以名词为核心来组织的</strong>，首先关注的是名词。一个 资源可以由一个或多个URI来标识。URI既是资源的名称，也是资源在Web上的地址。对某个资源感兴 趣的客户端应用，可以通过资源的URI与其进行交互。</p></li><li><p>资源的表述</p><p>资源的表述是一段对于资源在某个特定时刻的状态的描述。可以在客户端-服务器端之间转移（交 换）。资源的表述可以有多种格式，例如HTML&#x2F;XML&#x2F;JSON&#x2F;纯文本&#x2F;图片&#x2F;视频&#x2F;音频等等。资源的表述格 式可以通过协商机制来确定。请求-响应方向的表述通常使用不同的格式。</p></li><li><p>状态转移</p><p>状态转移说的是：在客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资 源的表述，来间接实现操作资源的目的。</p></li></ol><h3 id="7-2-RESTful的实现"><a href="#7-2-RESTful的实现" class="headerlink" title="7.2 RESTful的实现"></a>7.2 RESTful的实现</h3><p>具体说，就是 HTTP 协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。</p><p>它们分别对应四种基本操作：<strong>GET 用来获取资源</strong>，<strong>POST 用来新建资源</strong>，<strong>PUT 用来更新资源</strong>，<strong>DELETE 用来删除资源</strong>。</p><p>REST 风格提倡 URL 地址使用统一的风格设计，从前到后各个单词使用**<font color='red'>斜杠</font>**分开，不使用问号键值对方式携带请求参数，而是将要发送给服务器的数据作为 URL 地址的一部分，以保证整体风格的一致性。</p><table><thead><tr><th>操作</th><th>传统方式</th><th>REST风格</th></tr></thead><tbody><tr><td>查询操作</td><td>getUserById?id&#x3D;1</td><td>user&#x2F;1–&gt;get请求方式</td></tr><tr><td>保存操作</td><td>saveUser</td><td>user–&gt;post请求方式</td></tr><tr><td>删除操作</td><td>deleteUser?id&#x3D;1</td><td>user&#x2F;1–&gt;delete请求方式</td></tr><tr><td>更新操作</td><td>updateUser</td><td>user–&gt;put请求方式</td></tr></tbody></table><h3 id="7-3-HiddenHttpMethodFilter"><a href="#7-3-HiddenHttpMethodFilter" class="headerlink" title="7.3 HiddenHttpMethodFilter"></a>7.3 HiddenHttpMethodFilter</h3><p>由于浏览器只支持发送<code>get</code>和<code>post</code>方式的请求，那么该如何发送<code>put</code>和<code>delete</code>请求呢？</p><p>SpringMVC 提供了 <code>HiddenHttpMethodFilter</code> 帮助我们<strong>将 POST 请求转换为 DELETE 或 PUT 请求</strong> </p><p>HiddenHttpMethodFilter处理**<font color='red'>put</font><strong>和</strong><font color='red'>delete</font>**请求的条件：</p><ol><li>当前请求的请求方式必须为<code>post</code></li><li>当前请求必须传输请求参数<code>_method</code></li></ol><p>满足以上条件，HiddenHttpMethodFilter 过滤器就会将当前请求的请求方式转换为请求参数 <code>_method</code>的值，因此请求参数<code>_method</code>的值才是最终的请求方式</p><p>在web.xml中注册HiddenHttpMethodFilter</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注：</p><p>目前为止，SpringMVC中提供了两个过滤器：CharacterEncodingFilter和 HiddenHttpMethodFilter</p><p>在web.xml中注册时，必须先注册CharacterEncodingFilter，再注册HiddenHttpMethodFilter</p><p>原因：</p><ul><li><p>在 CharacterEncodingFilter 中通过 request.setCharacterEncoding(encoding) 方法设置字 符集的</p></li><li><p>request.setCharacterEncoding(encoding) 方法要求前面不能有任何获取请求参数的操作</p></li><li><p>而 HiddenHttpMethodFilter 恰恰有一个获取请求方式的操作：</p></li><li><pre><code class="java">String paramValue = request.getParameter(this.methodParam);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 8 RESTful案例</span><br><span class="line"></span><br><span class="line">## 9 SpringMVC处理ajax请求</span><br><span class="line"></span><br><span class="line">### 9.1 `@RequestBody`</span><br><span class="line"></span><br><span class="line">`@RequestBody`可以获取请求体信息，使用`@RequestBody`注解标识控制器方法的形参，当前请求的请求体就会为当前注解所标识的形参赋值</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;!--此时必须使用post请求方式，因为get请求没有请求体--&gt;</span><br><span class="line">&lt;form th:action=&quot;@&#123;/test/RequestBody&#125;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">   用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line">   密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">   &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/test/RequestBody&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> String requestBody)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;requestBody:&quot;</span>+requestBody);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果： </p><p><code>requestBody:username=admin&amp;password=123456</code></p><h3 id="9-2-RequestBody获取json格式的请求参数"><a href="#9-2-RequestBody获取json格式的请求参数" class="headerlink" title="9.2 @RequestBody获取json格式的请求参数"></a>9.2 @RequestBody获取json格式的请求参数</h3><blockquote><p>在使用了axios发送ajax请求之后，浏览器发送到服务器的请求参数有两种格式： </p><ol><li><p>name&#x3D;value&amp;name&#x3D;value…</p><p>此时的请求参数可以通过<code>request.getParameter()</code>获取，对应 SpringMVC中，可以直接通过控制器方法的形参获取此类请求参数</p></li><li><p>{key:value,key:value,…}</p><p>此时无法通过request.getParameter()获取，之前我们使用操作 json的相关jar包gson或jackson处理此类请求参数，可以将其转换为指定的实体类对象或map集合。在SpringMVC中，直接使用<code>@RequestBody</code>注解标识控制器方法的形参即可将此类请求参数 转换为java对象</p></li></ol></blockquote><p>使用<code>@RequestBody</code>获取<code>json</code>格式的请求参数的条件：</p><ol><li><p>导入jackson的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>SpringMVC的配置文件中设置开启mvc的注解驱动</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启mvc的注解驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在控制器方法的形参位置，设置json格式的请求参数要转换成的java类型（实体类或map）的参数，并使用<code>@RequestBody</code>注解标识</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试@RequestBody获取json格式的请求参数&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;testRequestBody()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/vue.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/axios.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vue = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">testRequestBody</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;/SpringMVC/test/RequestBody/json&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    &#123;<span class="attr">username</span>:<span class="string">&quot;admin&quot;</span>,<span class="attr">password</span>:<span class="string">&quot;123456&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                ).<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将json格式的数据转换为map集合</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test/RequestBody/json&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String, Object&gt; map,</span></span><br><span class="line"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(map);</span><br><span class="line">    <span class="comment">//&#123;username=admin, password=123456&#125;</span></span><br><span class="line">    response.getWriter().print(<span class="string">&quot;hello,axios&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将json格式的数据转换为实体类对象</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test/RequestBody/json&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRequestBody</span><span class="params">(<span class="meta">@RequestBody</span> User user, HttpServletResponse</span></span><br><span class="line"><span class="params">response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="comment">//User&#123;id=null, username=&#x27;admin&#x27;, password=&#x27;123456&#x27;, age=null, gender=&#x27;null&#x27;&#125;</span></span><br><span class="line">    response.getWriter().print(<span class="string">&quot;hello,axios&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h3 id="9-3-ResponseBody"><a href="#9-3-ResponseBody" class="headerlink" title="9.3 @ResponseBody"></a>9.3 <code>@ResponseBody</code></h3><p><code>@ResponseBody</code>用于标识一个控制器方法，可以将该方法的返回值直接作为响应报文的响应体响应到浏览器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testResponseBody&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testResponseBody</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//此时会跳转到逻辑视图success所对应的页面</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/testResponseBody&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testResponseBody</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//此时响应浏览器数据success</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-4-ResponseBody响应浏览器json数据"><a href="#9-4-ResponseBody响应浏览器json数据" class="headerlink" title="9.4 @ResponseBody响应浏览器json数据"></a>9.4 @ResponseBody响应浏览器json数据</h3><p>服务器处理ajax请求之后，大多数情况都需要向浏览器响应一个java对象，此时必须将java对象转换为 json字符串才可以响应到浏览器，之前我们使用操作json数据的jar包gson或jackson将java对象转换为 json字符串。在SpringMVC中，我们可以直接使用@ResponseBody注解实现此功能</p><p>@ResponseBody响应浏览器json数据的条件：</p><ol><li><p>导入jackson的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>SpringMVC的配置文件中设置开启mvc的注解驱动</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启mvc的注解驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用@ResponseBody注解标识控制器方法，在方法中，将需要转换为json字符串并响应到浏览器 的java对象作为控制器方法的返回值，此时SpringMVC就可以将此对象直接转换为json字符串并响应到 浏览器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试@ResponseBody响应浏览器json格式的数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;testResponseBody()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/vue.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/js/axios.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vue = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">testResponseBody</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/SpringMVC/test/ResponseBody/json&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//响应浏览器list集合</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test/ResponseBody/json&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">testResponseBody</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;admin1&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1002</span>,<span class="string">&quot;admin2&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1003</span>,<span class="string">&quot;admin3&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    List&lt;User&gt; list = Arrays.asList(user1, user2, user3);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//响应浏览器map集合</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test/ResponseBody/json&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">testResponseBody</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;admin1&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1002</span>,<span class="string">&quot;admin2&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1003</span>,<span class="string">&quot;admin3&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;1001&quot;</span>, user1);</span><br><span class="line">    map.put(<span class="string">&quot;1002&quot;</span>, user2);</span><br><span class="line">    map.put(<span class="string">&quot;1003&quot;</span>, user3);</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//响应浏览器实体类对象</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test/ResponseBody/json&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">testResponseBody</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="9-5-RestController注解"><a href="#9-5-RestController注解" class="headerlink" title="9.5 @RestController注解"></a>9.5 @RestController注解</h3><p><code>@RestController</code>注解是springMVC提供的一个复合注解，标识在控制器的类上，就相当于为类添加了 <code>@Controller</code>注解，并且为其中的每个方法添加了<code>@ResponseBody</code>注解</p><h2 id="10-文件上传和下载"><a href="#10-文件上传和下载" class="headerlink" title="10 文件上传和下载"></a>10 文件上传和下载</h2><h3 id="10-1-文件下载"><a href="#10-1-文件下载" class="headerlink" title="10.1 文件下载"></a>10.1 文件下载</h3><p><code>ResponseEntity</code>用于控制器方法的返回值类型，表示相应到浏览器的完整的响应报文</p><p>使用ResponseEntity实现下载文件的功能:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testDown&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;<span class="type">byte</span>[]&gt; testResponseEntity(HttpSession session) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取ServletContext对象</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    <span class="comment">//获取服务器中文件的真实路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> servletContext.getRealPath(<span class="string">&quot;/static/img/1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">//创建输入流</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line">    <span class="comment">//创建字节数组</span></span><br><span class="line">    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[is.available()];</span><br><span class="line">    <span class="comment">//将流读到字节数组中</span></span><br><span class="line">    is.read(bytes);</span><br><span class="line">    <span class="comment">//创建HttpHeaders对象设置响应头信息</span></span><br><span class="line">    MultiValueMap&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">    <span class="comment">//设置要下载方式以及下载文件的名字</span></span><br><span class="line">    headers.add(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">//设置响应状态码</span></span><br><span class="line">    <span class="type">HttpStatus</span> <span class="variable">statusCode</span> <span class="operator">=</span> HttpStatus.OK;</span><br><span class="line">    <span class="comment">//创建ResponseEntity对象</span></span><br><span class="line">    ResponseEntity&lt;<span class="type">byte</span>[]&gt; responseEntity = <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;&gt;(bytes, headers, statusCode);</span><br><span class="line">    <span class="comment">//关闭输入流</span></span><br><span class="line">    is.close();</span><br><span class="line">    <span class="keyword">return</span> responseEntity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ul><li><p>6行：getRealPath()，这个方法是获取当前项目目录在服务器中的物理地址，参数可以为目录下的任意目录下的任意目录……；因为 win 和 linux 的目录结构不同，“&#x2F;” 和 “\” 不同，因此避免直接在参数中写入两个及以上的目录，此时可以使用 <code>File.separator</code> 来拼接目录或者文件。如 <code>realPath=realoath+File.separator+&quot;1.jpg&quot;</code></p></li><li><p>10行：available()，这个方法是获取当前字节输入流对象所对应的文件的字节数</p></li></ul></blockquote><h3 id="10-2-文件上传"><a href="#10-2-文件上传" class="headerlink" title="10.2 文件上传"></a>10.2 文件上传</h3><p>文件上传要求<code>form</code>表单的请求方式必须为<code>post</code>，并且添加属性<code>enctype=&quot;multipart/form-data&quot;</code> </p><p>SpringMVC中将上传的文件封装到<code>MultipartFile</code>对象中，通过此对象可以获取文件相关信息，但是此对象的变量名要与html文件中文件上传所在的input标签的name属性一致</p><p>上传步骤：</p><ol><li><p>添加依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在SpringMVC的配置文件中添加配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>控制器方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testUp&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testUp</span><span class="params">(MultipartFile photo, HttpSession session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取上传的文件的文件名</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> photo.getOriginalFilename();</span><br><span class="line">    <span class="comment">//处理文件可能重名问题</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">filenamePrefix</span> <span class="operator">=</span> filename.substring(<span class="number">0</span>, filename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="type">String</span> <span class="variable">filenameSuffix</span> <span class="operator">=</span> filename.substring(filename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    filename = filenamePrefix + UUID.randomUUID() + filenameSuffix;</span><br><span class="line">    <span class="comment">//获取服务器中photo目录的路径</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    <span class="type">String</span> <span class="variable">photoPath</span> <span class="operator">=</span> servletContext.getRealPath(<span class="string">&quot;img&quot;</span>) + File.separator + <span class="string">&quot;photo&quot;</span>;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(photoPath);</span><br><span class="line">  <span class="comment">//判断file对应的目录是否存在</span></span><br><span class="line">    <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">        file.mkdir();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> photoPath + File.separator + fileName;</span><br><span class="line">    <span class="comment">//实现上传功能</span></span><br><span class="line">    photo.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(filePath));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/test/up&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn-info&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;photo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="11-拦截器"><a href="#11-拦截器" class="headerlink" title="11 拦截器"></a>11 拦截器</h2><h3 id="11-1-拦截器的配置"><a href="#11-1-拦截器的配置" class="headerlink" title="11.1 拦截器的配置"></a>11.1 拦截器的配置</h3><p>SpringMVC中的拦截器用于拦截控制器方法的执行 </p><p>SpringMVC中的拦截器需要实现<code>HandlerInterceptor</code> </p><p>SpringMVC的拦截器必须在SpringMVC的配置文件中进行配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;bean class=&quot;com.lxuan.interceptor.FirstInterceptor&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;firstInterceptor&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>bean和ref标签配置的拦截器默认对DispatcherServlet处理的**<font color='red'>所有</font>**的请求进行拦截，</p><p>不太符合需求</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/abc&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>&lt;mvc:mapping path=&quot;/**&quot;/&gt;</code> 指的是拦截所有请求，如果是 <code>/*</code> 的话只能表示一级路径的请求，如<code>/test</code>，而不能拦截 <code>/test/abc</code> 。</p><p>小知识：</p><p>&#x2F;** 匹配任意多级路径如&#x2F;aa&#x2F;bb&#x2F;cc</p><p>&#x2F;* 仅可匹配一级路径如&#x2F;aa</p><p>&#x2F;? 仅可匹配一级路径且最多只有一个字符 如&#x2F;a 、&#x2F;b、&#x2F;</p></blockquote><h3 id="11-2-拦截器的三个抽象方法"><a href="#11-2-拦截器的三个抽象方法" class="headerlink" title="11.2 拦截器的三个抽象方法"></a>11.2 拦截器的三个抽象方法</h3><p>SpringMVC中的拦截器有三个抽象方法：</p><p><code>preHandle()</code>：控制器方法执行**<font color='red'>之前</font><strong>执行preHandle()，其boolean类型的返回值表示是否拦截或放行，返回</strong><font color='red'>true为放行</font><strong>，即调用控制器方法；返回</strong><font color='red'>false表示拦截</font>**，即不调用控制器方法</p><p><code>postHandle()</code>：控制器方法执行**<font color='red'>之后</font>**执行postHandle() </p><p><code>afterCompletion()</code>：处理完视图和模型数据，渲染视图完毕之后执行afterCompletion()</p><h3 id="11-3-多个拦截器的执行顺序"><a href="#11-3-多个拦截器的执行顺序" class="headerlink" title="11.3 多个拦截器的执行顺序"></a>11.3 多个拦截器的执行顺序</h3><ol><li><p>若每个拦截器的preHandle()都返回true</p><p>此时多个拦截器的执行顺序和拦截器在SpringMVC的配置文件的配置顺序有关：</p><p>preHandle()会按照配置的顺序执行，而postHandle()和afterCompletion()会按照配置的反序执行</p></li><li><p>若某个拦截器的preHandle()返回了false</p><p>preHandle()返回false和它之前的拦截器的preHandle()都会执行，postHandle()都不执行，返回false 的拦截器之前的拦截器的afterCompletion()会执行</p></li></ol><h2 id="12-异常处理器"><a href="#12-异常处理器" class="headerlink" title="12 异常处理器"></a>12 异常处理器</h2><h3 id="12-1-基于配置的异常处理"><a href="#12-1-基于配置的异常处理" class="headerlink" title="12.1 基于配置的异常处理"></a>12.1 基于配置的异常处理</h3><p>SpringMVC提供了一个处理控制器方法执行过程中所出现的异常的接口：<code>HandlerExceptionResolver</code></p><p>HandlerExceptionResolver接口的实现类有：<code>DefaultHandlerExceptionResolver</code>和<code>SimpleMappingExceptionResolver</code></p><p>SpringMVC提供了自定义的异常处理器<code>SimpleMappingExceptionResolver</code>，使用方式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;exceptionMappings&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                properties的键表示处理器方法执行过程中出现的异常</span></span><br><span class="line"><span class="comment">                properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;java.lang.ArithmeticException&quot;</span>&gt;</span>error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;exceptionAttribute&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;ex&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="12-2-基于注解的异常处理"><a href="#12-2-基于注解的异常处理" class="headerlink" title="12.2 基于注解的异常处理"></a>12.2 基于注解的异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@ControllerAdvice将当前类标识为异常处理的组件</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionController</span> &#123;</span><br><span class="line">    <span class="comment">//@ExceptionHandler用于设置所标识方法处理的异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(ArithmeticException.class)</span></span><br><span class="line">    <span class="comment">//ex表示当前请求处理中出现的异常对象</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleArithmeticException</span><span class="params">(Exception ex, Model model)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;ex&quot;</span>, ex);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-注解配置SpringMVC"><a href="#13-注解配置SpringMVC" class="headerlink" title="13 注解配置SpringMVC"></a>13 注解配置SpringMVC</h2><p>使用配置类和注解代替web.xml和SpringMVC配置文件的功能</p><h3 id="13-1-创建初始化类，代替web-xml"><a href="#13-1-创建初始化类，代替web-xml" class="headerlink" title="13.1 创建初始化类，代替web.xml"></a>13.1 创建初始化类，代替web.xml</h3><p>在Servlet3.0环境中，容器会在类路径中查找实现javax.servlet.ServletContainerInitializer接口的类， 如果找到的话就用它来配置Servlet容器。 </p><p>Spring提供了这个接口的实现，名为SpringServletContainerInitializer，这个类反过来又会查找实现WebApplicationInitializer的类并将配 置的任务交给它们来完成。Spring3.2引入了一个便利的WebApplicationInitializer基础实现，名为AbstractAnnotationConfigDispatcherServletInitializer，当我们的类扩展了AbstractAnnotationConfigDispatcherServletInitializer并将其部署到Servlet3.0容器的时候，容器会自动发现它，并用它来配置Servlet上下文。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebInit</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 指定spring的配置类</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;SpringConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 指定SpringMVC的配置类</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;WebConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 指定DispatcherServlet的映射规则，即url-pattern</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加过滤器</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Filter[] getServletFilters() &#123;</span><br><span class="line">        <span class="type">CharacterEncodingFilter</span> <span class="variable">encodingFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CharacterEncodingFilter</span>();</span><br><span class="line">        encodingFilter.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        encodingFilter.setForceRequestEncoding(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">HiddenHttpMethodFilter</span> <span class="variable">hiddenHttpMethodFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HiddenHttpMethodFilter</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Filter</span>[]&#123;encodingFilter, hiddenHttpMethodFilter&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-2-创建SpringConfig配置类，代替spring的配置文件"><a href="#13-2-创建SpringConfig配置类，代替spring的配置文件" class="headerlink" title="13.2 创建SpringConfig配置类，代替spring的配置文件"></a>13.2 创建SpringConfig配置类，代替spring的配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line">    <span class="comment">//ssm整合之后，spring的配置信息写在此类中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-3-创建WebConfig配置类，代替SpringMVC的配置文件"><a href="#13-3-创建WebConfig配置类，代替SpringMVC的配置文件" class="headerlink" title="13.3 创建WebConfig配置类，代替SpringMVC的配置文件"></a>13.3 创建WebConfig配置类，代替SpringMVC的配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//扫描组件</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.atguigu.mvc.controller&quot;)</span></span><br><span class="line"><span class="comment">//开启MVC注解驱动</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="comment">//使用默认的servlet处理静态资源</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureDefaultServletHandling</span><span class="params">(DefaultServletHandlerConfigurer configurer)</span> &#123;</span><br><span class="line">    configurer.enable();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//配置文件上传解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CommonsMultipartResolver <span class="title function_">multipartResolver</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonsMultipartResolver</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置拦截器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="type">FirstInterceptor</span> <span class="variable">firstInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FirstInterceptor</span>();</span><br><span class="line">        registry.addInterceptor(firstInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//配置视图控制</span></span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void addViewControllers(ViewControllerRegistry registry) &#123;</span></span><br><span class="line"><span class="comment">    registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//配置异常映射</span></span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void configureHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; resolvers) &#123;</span></span><br><span class="line"><span class="comment">        SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver();</span></span><br><span class="line"><span class="comment">        Properties prop = new Properties();</span></span><br><span class="line"><span class="comment">        prop.setProperty(&quot;java.lang.ArithmeticException&quot;, &quot;error&quot;);</span></span><br><span class="line"><span class="comment">        //设置异常映射</span></span><br><span class="line"><span class="comment">        exceptionResolver.setExceptionMappings(prop);</span></span><br><span class="line"><span class="comment">        //设置共享异常信息的键</span></span><br><span class="line"><span class="comment">        exceptionResolver.setExceptionAttribute(&quot;ex&quot;);</span></span><br><span class="line"><span class="comment">        resolvers.add(exceptionResolver);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置生成模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ITemplateResolver <span class="title function_">templateResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebApplicationContext</span> <span class="variable">webApplicationContext</span> <span class="operator">=</span> ContextLoader.getCurrentWebApplicationContext();</span><br><span class="line">        <span class="comment">// ServletContextTemplateResolver需要一个ServletContext作为构造参数，可通过WebApplicationContext 的方法获得</span></span><br><span class="line">        <span class="type">ServletContextTemplateResolver</span> <span class="variable">templateResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletContextTemplateResolver</span>(webApplicationContext.getServletContext());</span><br><span class="line">        templateResolver.setPrefix(<span class="string">&quot;/WEB-INF/templates/&quot;</span>);</span><br><span class="line">        templateResolver.setSuffix(<span class="string">&quot;.html&quot;</span>);</span><br><span class="line">        templateResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        templateResolver.setTemplateMode(TemplateMode.HTML);</span><br><span class="line">        <span class="keyword">return</span> templateResolver;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//生成模板引擎并为模板引擎注入模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringTemplateEngine <span class="title function_">templateEngine</span><span class="params">(ITemplateResolver templateResolver)</span> &#123;</span><br><span class="line">        <span class="type">SpringTemplateEngine</span> <span class="variable">templateEngine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">        templateEngine.setTemplateResolver(templateResolver);</span><br><span class="line">        <span class="keyword">return</span> templateEngine;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//生成视图解析器并未解析器注入模板引擎</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ViewResolver <span class="title function_">viewResolver</span><span class="params">(SpringTemplateEngine templateEngine)</span> &#123;</span><br><span class="line">        <span class="type">ThymeleafViewResolver</span> <span class="variable">viewResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">        viewResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        viewResolver.setTemplateEngine(templateEngine);</span><br><span class="line">        <span class="keyword">return</span> viewResolver;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@Bean 注解可以将标识的方法的返回值作为bean进行管理，bean的id为方法的方法名</p></blockquote><h2 id="14-SpringMVC执行流程"><a href="#14-SpringMVC执行流程" class="headerlink" title="14 SpringMVC执行流程"></a>14 SpringMVC执行流程</h2><h3 id="14-1-SpringMVC常用组件"><a href="#14-1-SpringMVC常用组件" class="headerlink" title="14.1 SpringMVC常用组件"></a>14.1 SpringMVC常用组件</h3><ul><li><p>DispatcherServlet：<strong>前端控制器</strong>，不需要工程师开发，由框架提供</p><p>作用：统一处理请求和响应，整个流程控制的中心，由它调用其它组件处理用户的请求</p></li><li><p>HandlerMapping：<strong>处理器映射器</strong>，不需要工程师开发，由框架提供</p><p>作用：根据请求的url、method等信息查找Handler，即控制器方法</p></li><li><p>Handler：<strong>处理器</strong>，需要工程师开发</p><p>作用：在DispatcherServlet的控制下Handler对具体的用户请求进行处理</p></li><li><p>HandlerAdapter：<strong>处理器适配器</strong>，不需要工程师开发，由框架提供</p><p>作用：通过HandlerAdapter对处理器（控制器方法）进行执行</p></li><li><p>ViewResolver：<strong>视图解析器</strong>，不需要工程师开发，由框架提供</p><p>作用：进行视图解析，得到相应的视图，例如：ThymeleafView、InternalResourceView、RedirectView</p></li><li><p>View：<strong>视图</strong></p><p>作用：将模型数据通过页面展示给用户</p></li></ul><h3 id="14-2-DispatcherServlet初始化过程"><a href="#14-2-DispatcherServlet初始化过程" class="headerlink" title="14.2 DispatcherServlet初始化过程"></a>14.2 DispatcherServlet初始化过程</h3><p>DispatcherServlet 本质上是一个 Servlet，所以天然的遵循 Servlet 的生命周期。所以宏观上是 Servlet 生命周期来进行调度。</p><h4 id="14-2-1-初始化WebApplicationContext"><a href="#14-2-1-初始化WebApplicationContext" class="headerlink" title="14.2.1 初始化WebApplicationContext"></a>14.2.1 初始化WebApplicationContext</h4><p>所在类：org.springframework.web.servlet.FrameworkServlet</p><h4 id="14-2-2-创建WebApplicationContext"><a href="#14-2-2-创建WebApplicationContext" class="headerlink" title="14.2.2 创建WebApplicationContext"></a>14.2.2 创建WebApplicationContext</h4><p>所在类：org.springframework.web.servlet.FrameworkServlet</p><h4 id="14-2-3-DispatcherServlet初始化策略"><a href="#14-2-3-DispatcherServlet初始化策略" class="headerlink" title="14.2.3 DispatcherServlet初始化策略"></a>14.2.3 DispatcherServlet初始化策略</h4><p>FrameworkServlet创建WebApplicationContext后，刷新容器，调用onRefresh(wac)，此方法在 DispatcherServlet中进行了重写，调用了initStrategies(context)方法，初始化策略，即初始化DispatcherServlet的各个组件</p><p>所在类：org.springframework.web.servlet.DispatcherServlet</p><h3 id="14-3-DispatcherServlet调用组件处理请求"><a href="#14-3-DispatcherServlet调用组件处理请求" class="headerlink" title="14.3 DispatcherServlet调用组件处理请求"></a>14.3 DispatcherServlet调用组件处理请求</h3><ol><li><p>processRequest()</p><p>FrameworkServlet重写HttpServlet中的service()和doXxx()，这些方法中调用了 processRequest(request, response)</p><p>所在类：org.springframework.web.servlet.FrameworkServlet</p></li><li><p>doService()</p><p>所在类：org.springframework.web.servlet.DispatcherServlet</p></li><li><p>doDispatch()</p><p>所在类：org.springframework.web.servlet.DispatcherServlet</p></li><li><p>processDispatchResult()</p></li></ol><h3 id="14-4-SpringMVC的执行流程"><a href="#14-4-SpringMVC的执行流程" class="headerlink" title="14.4 SpringMVC的执行流程"></a>14.4 SpringMVC的执行流程</h3><ol><li><p>用户向服务器发送请求，请求被SpringMVC 前端控制器 <code>DispatcherServlet</code> 捕获。</p></li><li><p>DispatcherServlet对请求URL（统一资源定义符）进行解析，得到URI（统一资源标识符），判断请求URI对应的映射是否存在：</p><ul><li>不存在<ul><li>再判断是否配置了<code>mvc:default-servlet-handler</code></li><li>如果没配置，则控制台报映射查找不到，客户端展示404错误</li><li>如果有配置，则访问目标资源（一般为静态资源，如：JS,CSS,HTML），找不到客户端也会展示404 错误</li></ul></li><li>存在则执行下面的流程</li></ul></li><li><p>根据该URI，调用<code>HandlerMapping</code>获得该Handler配置的所有相关的对象（包括Handler对象以及 Handler对象对应的拦截器），最后以HandlerExecutionChain执行链对象的形式返回。</p></li><li><p>DispatcherServlet 根据获得的Handler，选择一个合适的<code>HandlerAdapter</code>。</p></li><li><p>如果成功获得HandlerAdapter，此时将开始执行<code>拦截器的preHandler(…)</code>方法【正向】</p></li><li><p>提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)方法，处理请求。 在填充Handler的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：</p><ul><li>HttpMessageConveter： 将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息</li><li>数据转换：对请求消息进行数据转换。如String转换成Integer、Double等</li><li>数据格式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等</li><li>数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中</li></ul></li><li><p>Handler执行完成后，向DispatcherServlet 返回一个<code>ModelAndView</code>对象。</p></li><li><p>此时将开始执行<code>拦截器的postHandle(...)</code>方法【逆向】。</p></li><li><p>根据返回的ModelAndView（此时会判断是否存在异常：如果存在异常，则执行 <code>HandlerExceptionResolver</code>进行异常处理）选择一个适合的ViewResolver进行视图解析，根据Model 和View，来渲染视图。</p></li><li><p>渲染视图完毕执行<code>拦截器的afterCompletion(…)</code>方法【逆向】。</p></li><li><p>将渲染结果返回给客户端。</p></li></ol><p><img src="/../images/SSM+Mybatis-Plus/%E5%88%86%E5%89%B2%E7%BA%BF.png" alt="分割线"></p><h1 id="三、MyBatis"><a href="#三、MyBatis" class="headerlink" title="三、MyBatis"></a>三、MyBatis</h1><h2 id="1-搭建MyBatis"><a href="#1-搭建MyBatis" class="headerlink" title="1 搭建MyBatis"></a>1 搭建MyBatis</h2><h3 id="1-1-引入依赖"><a href="#1-1-引入依赖" class="headerlink" title="1.1 引入依赖"></a>1.1 引入依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;!--mybatis--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.5.9&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h3 id="1-2-创建MyBatis的核心配置文件"><a href="#1-2-创建MyBatis的核心配置文件" class="headerlink" title="1.2 创建MyBatis的核心配置文件"></a>1.2 创建MyBatis的核心配置文件</h3><p>习惯上命名为mybatis-config.xml，这个文件名仅仅只是建议，并非强制要求。将来整合Spring 之后，这个配置文件可以省略<br>核心配置文件主要用于配置连接数据库的环境以及MyBatis的全局配置信息 核心配置文件存放的位置是src&#x2F;main&#x2F;resources目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span><br><span class="line">        </span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;!--设置连接数据库的环境--&gt;</span><br><span class="line">    &lt;environments default=&quot;development&quot;&gt;</span><br><span class="line">        &lt;environment id=&quot;development&quot;&gt;</span><br><span class="line">            &lt;transactionManager type=&quot;JDBC&quot;/&gt;</span><br><span class="line">            &lt;dataSource type=&quot;POOLED&quot;&gt;</span><br><span class="line">                &lt;property name=&quot;driver&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt;</span><br><span class="line">                &lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC&quot;/&gt;</span><br><span class="line">                &lt;property name=&quot;username&quot; value=&quot;root&quot;/&gt;</span><br><span class="line">                &lt;property name=&quot;password&quot; value=&quot;123456&quot;/&gt;</span><br><span class="line">            &lt;/dataSource&gt;</span><br><span class="line">        &lt;/environment&gt;</span><br><span class="line">    &lt;/environments&gt;</span><br><span class="line">    &lt;!--引入映射文件--&gt;</span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;mapper resource=&quot;mappers/UserMapper.xml&quot;/&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-创建mapper接口"><a href="#1-3-创建mapper接口" class="headerlink" title="1.3 创建mapper接口"></a>1.3 创建mapper接口</h3><p>MyBatis中的mapper接口相当于以前的dao。但是区别在于，mapper仅仅是接口，我们不需要提供实现类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加用户信息</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-创建MyBatis的映射文件"><a href="#1-4-创建MyBatis的映射文件" class="headerlink" title="1.4 创建MyBatis的映射文件"></a>1.4 创建MyBatis的映射文件</h3><p>相关概念：ORM（Object Relationship Mapping）对象关系映射。</p><ul><li>对象：Java的实体类对象</li><li>关系：关系型数据库</li><li>映射：二者之间的对应关系</li></ul><blockquote><p>1、映射文件的命名规则：<br>表所对应的实体类的类名+Mapper.xml<br>例如：表t_user，映射的实体类为User，所对应的映射文件为UserMapper.xml<br>因此一个映射文件对应一个实体类，对应一张表的操作<br>MyBatis映射文件用于编写SQL，访问以及操作表中的数据<br> MyBatis映射文件存放的位置是src&#x2F;main&#x2F;resources&#x2F;mappers目录下</p><p> 2、 MyBatis 中可以面向接口操作数据，要保证两个一致：   </p><ul><li>mapper接口的<strong>全类名</strong>和映射文件的<strong>命名空间（namespace）</strong>保持一致  </li><li>mapper接口中方法的<strong>方法名</strong>和映射文件中编写 <strong>SQL 的标签的 id 属性</strong>保持一致</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.lxuan.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--int insertUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> &gt;</span></span><br><span class="line">insert into user values (Default,&#x27;沐洹&#x27;,&#x27;lx*0+0-0&#x27;,&#x27;21&#x27;,&#x27;男&#x27;,&#x27;1274872144@qq.com&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--int updataUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updataUser&quot;</span>&gt;</span></span><br><span class="line">update user set name=&#x27;梁渲&#x27;, password=&#x27;123456&#x27;,age=&#x27;22&#x27;,gender=&#x27;女&#x27; where id=1;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--int deleteUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class="line">delete from user where id=2;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--User getUserById();--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">resultType: 设置结果类型，即查询的数据要转换为的java类型</span></span><br><span class="line"><span class="comment">resultMap: 自定义映射，处理多对一或一对多的映射关系</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.lxuan.dto.User&quot;</span>&gt;</span></span><br><span class="line">select * from user where id=1;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-测试"><a href="#1-5-测试" class="headerlink" title="1.5 测试"></a>1.5 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//获取核心配置文件输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取SqlSessionFactoryBuilder对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">//获取SqlSessionFactory对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">        <span class="comment">//获取sql的会话对象SqlSession，是MyBatis提供的操作数据库的对象。参数为true意思是自动提交就不用（第16行）手动commit了</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//获取UserMapper的代理实现类对象</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">//调用mapper接口中的方法，实现添加用户信息的功能</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.insertUser();</span><br><span class="line"><span class="comment">//sqlSession.commit();</span></span><br><span class="line">        System.out.println(i==<span class="number">1</span>? <span class="string">&quot;Success&quot;</span>:<span class="string">&quot;failure&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将以上5-11行的操作封装为<code>SqlSessionUtil</code>类中的<code>getSqlSession()</code>静态方法，使用更加方便</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updataTest</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">  <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">  <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.updataUser();</span><br><span class="line">  System.out.println(i==<span class="number">1</span>? <span class="string">&quot;Success&quot;</span>:<span class="string">&quot;failure&quot;</span>);</span><br><span class="line">  sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">  <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">  <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.deleteUser();</span><br><span class="line">  System.out.println(i==<span class="number">1</span>? <span class="string">&quot;Success&quot;</span>:<span class="string">&quot;failure&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserById</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">  <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">  <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.getUserById();</span><br><span class="line">  System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-log4j"><a href="#1-6-log4j" class="headerlink" title="1.6 log4j"></a>1.6 log4j</h3><ol><li><p>加入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>加入log4j的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">log4j</span>:configuration <span class="keyword">SYSTEM</span> <span class="string">&quot;log4j.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span> <span class="attr">xmlns:log4j</span>=<span class="string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Encoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125;%m (%F:%L) \n&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.ibatis&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;info&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>日志的级别</strong></p><p>FATAL(致命)&gt;ERROR(错误)&gt;WARN(警告)&gt;INFO(信息)&gt;DEBUG(调试) </p><p>从左到右打印的内容越来越详细</p></blockquote></li></ol><h2 id="2-核心配置文件详解"><a href="#2-核心配置文件详解" class="headerlink" title="2 核心配置文件详解"></a>2 核心配置文件详解</h2><p>每个注释都对应下一行的代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入properties文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--settings--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将下划线映射为驼峰命名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启延迟加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--按需加载：默认为false，无论延迟加载是否开启都会执行分布查询的所有查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;aggressiveLazyLoading&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置类型别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        typeAlias：设置某个类型的别名</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">        type：设置需要设置别名的类型</span></span><br><span class="line"><span class="comment">        alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名</span></span><br><span class="line"><span class="comment">        且不区分大小写</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.atguigu.mybatis.pojo.User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        environment：配置某个具体的环境</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">        id：表示连接数据库的环境的唯一标识，不能重复</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">          transactionManager：设置事务管理方式</span></span><br><span class="line"><span class="comment">          属性：</span></span><br><span class="line"><span class="comment">          type=&quot;JDBC|MANAGED&quot;</span></span><br><span class="line"><span class="comment">            JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事务的提交或回滚需要手动处理</span></span><br><span class="line"><span class="comment">            MANAGED：被管理，例如Spring</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">          dataSource：配置数据源</span></span><br><span class="line"><span class="comment">          属性：</span></span><br><span class="line"><span class="comment">          type：设置数据源的类型</span></span><br><span class="line"><span class="comment">          type=&quot;POOLED|UNPOOLED|JNDI&quot;</span></span><br><span class="line"><span class="comment">            POOLED：表示使用数据库连接池缓存数据库连接</span></span><br><span class="line"><span class="comment">            UNPOOLED：表示不使用数据库连接池</span></span><br><span class="line"><span class="comment">            JNDI：表示使用上下文中的数据源</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置连接数据库的驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置连接数据库的连接地址--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatisdemo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置连接数据库的用户名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置连接数据库的密码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lx*0+0-0&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--引入映射文件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--引入单个映射文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mappers/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        以包为单位引入映射文件</span></span><br><span class="line"><span class="comment">        要求：</span></span><br><span class="line"><span class="comment">        1、mapper接口所在的包要和映射文件所在的包一致</span></span><br><span class="line"><span class="comment">        2、mapper接口要和映射文件的名字一致</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-MyBatis的增删改查"><a href="#3-MyBatis的增删改查" class="headerlink" title="3 MyBatis的增删改查"></a>3 MyBatis的增删改查</h2><h3 id="3-1-新增"><a href="#3-1-新增" class="headerlink" title="3.1 新增"></a>3.1 新增</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">insert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-删除"><a href="#3-2-删除" class="headerlink" title="3.2 删除"></a>3.2 删除</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int deleteUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class="line">delete from t_user where id = 7</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-修改"><a href="#3-3-修改" class="headerlink" title="3.3 修改"></a>3.3 修改</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int updateUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span>&gt;</span></span><br><span class="line">update t_user set username=&#x27;ybc&#x27;,password=&#x27;123&#x27; where id = 6</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-查询一个实体类对象"><a href="#3-4-查询一个实体类对象" class="headerlink" title="3.4 查询一个实体类对象"></a>3.4 查询一个实体类对象</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserById();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.bean.User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user where id = 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-5-查询list集合"><a href="#3-5-查询list集合" class="headerlink" title="3.5 查询list集合"></a>3.5 查询list集合</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.bean.User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意： 1、查询的标签 select 必须设置属性 resultType 或 resultMap，用于设置实体类和数据库表的映射关系 </p><p>resultType：自动映射，用于属性名和表中字段名一致的情况 </p><p>resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况</p></blockquote><h2 id="4-MyBatis-获取参数"><a href="#4-MyBatis-获取参数" class="headerlink" title="4 MyBatis 获取参数"></a>4 MyBatis 获取参数</h2><blockquote><p>MyBatis获取参数值的两种方式：<code>$&#123;&#125;</code>和 <code>#&#123;&#125;</code></p><p><code>$&#123;&#125;</code>的本质就是字符串拼接，<code>#&#123;&#125;</code>的本质就是占位符赋值</p><p> <code>$&#123;&#125;</code>使用字符串拼接的方式拼接sql，若为字符串类型或日期类型的字段进行赋值时，需要手动加单引号；</p><p><code>#&#123;&#125;</code>使用占位符赋值的方式拼接sql，此时为字符串类型或日期类型的字段进行赋值时，可以自动添加单引号</p></blockquote><h3 id="4-1-单个字面量类型的参数"><a href="#4-1-单个字面量类型的参数" class="headerlink" title="4.1 单个字面量类型的参数"></a>4.1 单个字面量类型的参数</h3><blockquote><p>若mapper接口中的方法参数为单个的字面量类型</p><p>此时可以使用<code>$&#123;&#125;</code>和<code>#&#123;&#125;</code>以任意的名称获取参数的值，注意<code>$&#123;&#125;</code>需要手动加单引号</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;getUserByName&quot;</span> resultType=<span class="string">&quot;User&quot;</span>&gt;</span><br><span class="line">  select * from user <span class="type">where</span> <span class="variable">name</span> <span class="operator">=</span> #&#123;name&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="4-2-多个字面量类型的参数"><a href="#4-2-多个字面量类型的参数" class="headerlink" title="4.2 多个字面量类型的参数"></a>4.2 多个字面量类型的参数</h3><blockquote><p>若mapper接口中的方法参数为多个时</p><p>此时MyBatis会自动将这些参数放在一个map集合中，<br>以arg0,arg1…为键，以参数为值；<br>以 param1,param2…为键，以参数为值；<br>因此只需要通过<code>$&#123;&#125;</code>和<code>#&#123;&#125;</code>访问map集合的键就可以获取相对应的值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;checkLogin&quot;</span> resultType=<span class="string">&quot;User&quot;</span>&gt;</span><br><span class="line">select * from user where name=#&#123;param1&#125; and password=#&#123;param2&#125;;</span><br><span class="line">select * from user where name=#&#123;arg0&#125; and password=#&#123;arg1&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="4-3-map集合类型的参数"><a href="#4-3-map集合类型的参数" class="headerlink" title="4.3 map集合类型的参数"></a>4.3 map集合类型的参数</h3><blockquote><p>若mapper接口中的方法需要的参数为多个时</p><p>此时可以手动创建map集合，将这些数据放在 map中，</p><p>只需要通过<code>$&#123;&#125;</code>和<code>#&#123;&#125;</code>访问map集合的键就可以获取相对应的值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">User <span class="title function_">checkLoginByMap</span><span class="params">(Map&lt;String, Object&gt; map)</span>;</span><br><span class="line"></span><br><span class="line">map.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;梁渲&quot;</span>);</span><br><span class="line">map.put(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.checkLoginByMap(map);</span><br><span class="line"></span><br><span class="line">&lt;select id=<span class="string">&quot;checkLoginByMap&quot;</span> resultType=<span class="string">&quot;com.lxuan.dto.User&quot;</span>&gt;</span><br><span class="line">  select * from user where name=#&#123;username&#125; and password=#&#123;password&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="4-4-实体类类型的参数"><a href="#4-4-实体类类型的参数" class="headerlink" title="4.4 实体类类型的参数"></a>4.4 实体类类型的参数</h3><blockquote><p>若mapper接口中的方法参数为实体类对象时</p><p>此时可以使用<code>$&#123;&#125;</code>和<code>#&#123;&#125;</code>，通过访问实体类对象中的属性名获取属性值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertUserByUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">&lt;insert id=<span class="string">&quot;insertUserByUser&quot;</span>&gt;</span><br><span class="line">insert into user <span class="title function_">values</span> <span class="params">(<span class="keyword">default</span>, #&#123;name&#125;, #&#123;password&#125;, #&#123;age&#125;, #&#123;gender&#125;, #&#123;email&#125;)</span>;</span><br><span class="line">&lt;/insert&gt;</span><br></pre></td></tr></table></figure><h3 id="4-5-使用-Param标识参数"><a href="#4-5-使用-Param标识参数" class="headerlink" title="4.5 使用@Param标识参数"></a>4.5 使用@Param标识参数</h3><blockquote><p>可以通过@Param注解标识mapper接口中的方法参数</p><p>此时，会将这些参数放在map集合中，<br>以@Param注解的value属性值为键，以参数为值；<br>以 param1,param2…为键，以参数为值；<br>只需要通过<code>$&#123;&#125;</code>和<code>#&#123;&#125;</code>访问map集合的键就可以获取相对应 的值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User <span class="title function_">checkLoginByParam</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;password&quot;)</span> String password)</span>;</span><br><span class="line"></span><br><span class="line">&lt;select id=<span class="string">&quot;checkLoginByParam&quot;</span> resultType=<span class="string">&quot;com.lxuan.dto.User&quot;</span>&gt;</span><br><span class="line">  select * from user where name=#&#123;username&#125; and password=#&#123;password&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h2 id="5-Mybatis-的各种查询功能"><a href="#5-Mybatis-的各种查询功能" class="headerlink" title="5 Mybatis 的各种查询功能"></a>5 Mybatis 的各种查询功能</h2><h3 id="5-1-查询一个实体类"><a href="#5-1-查询一个实体类" class="headerlink" title="5.1 查询一个实体类"></a>5.1 查询一个实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User <span class="title function_">getUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--User <span class="title function_">getUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getUserById&quot;</span> resultType=<span class="string">&quot;User&quot;</span>&gt;</span><br><span class="line">select * from t_user <span class="type">where</span> <span class="variable">id</span> <span class="operator">=</span> #&#123;id&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="5-2-查询一个list集合"><a href="#5-2-查询一个list集合" class="headerlink" title="5.2 查询一个list集合"></a>5.2 查询一个list集合</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getUserList&quot;</span> resultType=<span class="string">&quot;User&quot;</span>&gt;</span><br><span class="line">select * from t_user</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><blockquote><p>当查询的数据为多条时，不能使用实体类作为返回值，否则会抛出异常 ：TooManyResultsException；</p><p>但是若查询的数据只有一条，可以使用实体类或集合作为返回值</p></blockquote><h3 id="5-3-查询单个数据"><a href="#5-3-查询单个数据" class="headerlink" title="5.3 查询单个数据"></a>5.3 查询单个数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--<span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getCount&quot;</span> resultType=<span class="string">&quot;_integer&quot;</span>&gt;</span><br><span class="line">select <span class="title function_">count</span><span class="params">(id)</span> from t_user</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="5-4-查询一条数据为map集合"><a href="#5-4-查询一条数据为map集合" class="headerlink" title="5.4 查询一条数据为map集合"></a>5.4 查询一条数据为map集合</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, Object&gt; <span class="title function_">getUserToMap</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--Map&lt;String, Object&gt; <span class="title function_">getUserToMap</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;--&gt;</span><br><span class="line">&lt;!--结果： &#123;password=<span class="number">123456</span>, sex=男 , id=<span class="number">1</span>, age=<span class="number">23</span>, username=admin&#125;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getUserToMap&quot;</span> resultType=<span class="string">&quot;map&quot;</span>&gt;</span><br><span class="line">select * from t_user <span class="type">where</span> <span class="variable">id</span> <span class="operator">=</span> #&#123;id&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="5-5-查询多条数据为map集合"><a href="#5-5-查询多条数据为map集合" class="headerlink" title="5.5 查询多条数据为map集合"></a>5.5 查询多条数据为map集合</h3><ol><li><p>方式一</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 查询所有用户信息为map集合</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  * 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，此</span></span><br><span class="line"><span class="comment">  时可以将这些map放在一个list集合中获取</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--Map&lt;String, Object&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getAllUserToMap&quot;</span> resultType=<span class="string">&quot;map&quot;</span>&gt;</span><br><span class="line">    select * from t_user</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li><li><p>方式二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 查询所有用户信息为map集合</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  * 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，并</span></span><br><span class="line"><span class="comment">  且最终要以一个map的方式返回数据，此时需要通过<span class="doctag">@MapKey</span>注解设置map集合的键，值是每条数据所对应的</span></span><br><span class="line"><span class="comment">  map集合</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@MapKey(&quot;id&quot;)</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--Map&lt;String, Object&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getAllUserToMap&quot;</span> resultType=<span class="string">&quot;map&quot;</span>&gt;</span><br><span class="line">select * from t_user</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-特殊SQL的执行"><a href="#6-特殊SQL的执行" class="headerlink" title="6 特殊SQL的执行"></a>6 特殊SQL的执行</h2><h3 id="6-1-模糊查询"><a href="#6-1-模糊查询" class="headerlink" title="6.1 模糊查询"></a>6.1 模糊查询</h3><p>三种解决方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 测试模糊查询</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> mohu</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">testMohu</span><span class="params">(<span class="meta">@Param(&quot;mohu&quot;)</span> String mohu)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--List&lt;User&gt; <span class="title function_">testMohu</span><span class="params">(<span class="meta">@Param(&quot;mohu&quot;)</span> String mohu)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;testMohu&quot;</span> resultType=<span class="string">&quot;User&quot;</span>&gt;</span><br><span class="line">&lt;!--select * from t_user where username like <span class="string">&#x27;%$&#123;mohu&#125;%&#x27;</span>--&gt;</span><br><span class="line">&lt;!--select * from t_user where username like <span class="title function_">concat</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,#&#123;mohu&#125;,<span class="string">&#x27;%&#x27;</span>)</span>--&gt;</span><br><span class="line">select * from t_user where username like <span class="string">&quot;%&quot;</span>#&#123;mohu&#125;<span class="string">&quot;%&quot;</span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-批量删除"><a href="#6-2-批量删除" class="headerlink" title="6.2 批量删除"></a>6.2 批量删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 批量删除</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteMore</span><span class="params">(<span class="meta">@Param(&quot;ids&quot;)</span> String ids)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--<span class="type">int</span> <span class="title function_">deleteMore</span><span class="params">(<span class="meta">@Param(&quot;ids&quot;)</span> String ids)</span>;--&gt;</span><br><span class="line">&lt;delete id=<span class="string">&quot;deleteMore&quot;</span>&gt;</span><br><span class="line">delete from t_user where id <span class="title function_">in</span> <span class="params">($&#123;ids&#125;)</span></span><br><span class="line">&lt;/delete&gt;</span><br></pre></td></tr></table></figure><h3 id="6-3-动态设置表名"><a href="#6-3-动态设置表名" class="headerlink" title="6.3 动态设置表名"></a>6.3 动态设置表名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 动态设置表名，查询所有的用户信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">getAllUser</span><span class="params">(<span class="meta">@Param(&quot;tableName&quot;)</span> String tableName)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--List&lt;User&gt; <span class="title function_">getAllUser</span><span class="params">(<span class="meta">@Param(&quot;tableName&quot;)</span> String tableName)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getAllUser&quot;</span> resultType=<span class="string">&quot;User&quot;</span>&gt;</span><br><span class="line">select * from $&#123;tableName&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h3 id="6-4-添加功能获取自增的主键"><a href="#6-4-添加功能获取自增的主键" class="headerlink" title="6.4 添加功能获取自增的主键"></a>6.4 添加功能获取自增的主键</h3><blockquote><p>场景模拟：</p><p> t_clazz(clazz_id,clazz_name) </p><p>t_student(student_id,student_name,clazz_id) </p><p>1、添加班级信息 </p><p>2、获取新添加的班级的id </p><p>3、为班级分配学生，即将某学的班级id修改为新添加的班级的id</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加用户信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  * useGeneratedKeys：设置使用自增的主键</span></span><br><span class="line"><span class="comment">  * keyProperty：因为增删改有统一的返回值是受影响的行数，因此只能将获取的自增的主键放在传输的参</span></span><br><span class="line"><span class="comment">  数user对象的某个属性中</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--<span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;--&gt;</span><br><span class="line">&lt;insert id=<span class="string">&quot;insertUser&quot;</span> useGeneratedKeys=<span class="string">&quot;true&quot;</span> keyProperty=<span class="string">&quot;id&quot;</span>&gt;</span><br><span class="line">insert into t_user <span class="title function_">values</span><span class="params">(<span class="literal">null</span>,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;sex&#125;)</span></span><br><span class="line">&lt;/insert&gt;</span><br></pre></td></tr></table></figure><h2 id="7-自定义映射resultMap"><a href="#7-自定义映射resultMap" class="headerlink" title="7 自定义映射resultMap"></a>7 自定义映射resultMap</h2><h3 id="7-1-resultMap处理字段和属性的映射关系"><a href="#7-1-resultMap处理字段和属性的映射关系" class="headerlink" title="7.1 resultMap处理字段和属性的映射关系"></a>7.1 resultMap处理字段和属性的映射关系</h3><blockquote><p>若字段名和实体类中的属性名不一致，则可以通过resultMap设置自定义映射</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    resultMap：设置自定义映射</span></span><br><span class="line"><span class="comment">    属性：</span></span><br><span class="line"><span class="comment">    id：表示自定义映射的唯一标识</span></span><br><span class="line"><span class="comment">    type：查询的数据要映射的实体类的类型</span></span><br><span class="line"><span class="comment">    子标签：</span></span><br><span class="line"><span class="comment">    id：设置主键的映射关系</span></span><br><span class="line"><span class="comment">    result：设置普通字段的映射关系</span></span><br><span class="line"><span class="comment">    association：设置多对一的映射关系</span></span><br><span class="line"><span class="comment">    collection：设置一对多的映射关系</span></span><br><span class="line"><span class="comment">    属性：</span></span><br><span class="line"><span class="comment">    property：设置映射关系中实体类中的属性名</span></span><br><span class="line"><span class="comment">    column：设置映射关系中表中的字段名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;user_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--List&lt;User&gt; testMohu(@Param(&quot;mohu&quot;) String mohu);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;testMohu&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--select * from t_user where username like &#x27;%$&#123;mohu&#125;%&#x27;--&gt;</span></span><br><span class="line">    select id,user_name,password,age,sex from t_user where user_name like concat(&#x27;%&#x27;,#&#123;mohu&#125;,&#x27;%&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>若字段名和实体类中的属性名不一致，但是字段名符合数据库的规则（使用_），实体类中的属性 名符合Java的规则（使用驼峰）</p><p>此时也可通过以下两种方式处理字段名和实体类中的属性的映射关系 </p><p>a&gt;可以通过为字段起别名的方式，保证和实体类中的属性名保持一致 </p><p>b&gt;可以在MyBatis的核心配置文件中设置一个全局配置信息mapUnderscoreToCamelCase，可 以在查询表中数据时，自动将_类型的字段名转换为驼峰 </p><p>例如：字段名user_name，设置了mapUnderscoreToCamelCase，此时字段名就会转换为 userName</p></blockquote><h3 id="7-2-多对一映射处理"><a href="#7-2-多对一映射处理" class="headerlink" title="7.2 多对一映射处理"></a>7.2 多对一映射处理</h3><blockquote><p>场景模拟： </p><p>查询员工信息以及员工所对应的部门信息</p></blockquote><h4 id="7-2-1-级联方式处理映射关系"><a href="#7-2-1-级联方式处理映射关系" class="headerlink" title="7.2.1 级联方式处理映射关系"></a>7.2.1 级联方式处理映射关系</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empDeptMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;ename&quot;</span> <span class="attr">property</span>=<span class="string">&quot;ename&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span> <span class="attr">property</span>=<span class="string">&quot;dept.did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;dname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;dept.dname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Emp getEmpAndDeptByEid(@Param(&quot;eid&quot;) int eid);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByEid&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empDeptMap&quot;</span>&gt;</span></span><br><span class="line">select emp.*,dept.* from t_emp emp left join t_dept dept on emp.did = dept.did where emp.eid = #&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="7-2-2-使用association处理映射关系"><a href="#7-2-2-使用association处理映射关系" class="headerlink" title="7.2.2 使用association处理映射关系"></a>7.2.2 使用association处理映射关系</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empDeptMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;eid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;ename&quot;</span> <span class="attr">property</span>=<span class="string">&quot;ename&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;did&quot;</span> <span class="attr">property</span>=<span class="string">&quot;did&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;dname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;dname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Emp getEmpAndDeptByEid(@Param(&quot;eid&quot;) int eid);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByEid&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empDeptMap&quot;</span>&gt;</span></span><br><span class="line">select emp.*,dept.* from t_emp emp left join t_dept dept on emp.did = dept.did where emp.eid = #&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>column 表示的是查询出来的字段</p><p>property 表示的是实体类的属性</p><p>javaType 表示的是 property 属性的类型</p><h4 id="7-2-3-分步查询"><a href="#7-2-3-分步查询" class="headerlink" title="7.2.3 分步查询"></a>7.2.3 分步查询</h4><ol><li><p>查询员工信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 通过分步查询查询员工信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> eid</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">Emp <span class="title function_">getEmpByStep</span><span class="params">(<span class="meta">@Param(&quot;eid&quot;)</span> <span class="type">int</span> eid)</span>;</span><br><span class="line"></span><br><span class="line">&lt;resultMap id=<span class="string">&quot;empDeptStepMap&quot;</span> type=<span class="string">&quot;Emp&quot;</span>&gt;</span><br><span class="line">    &lt;id column=<span class="string">&quot;eid&quot;</span> property=<span class="string">&quot;eid&quot;</span>&gt;&lt;/id&gt;</span><br><span class="line">    &lt;result column=<span class="string">&quot;ename&quot;</span> property=<span class="string">&quot;ename&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">    &lt;result column=<span class="string">&quot;age&quot;</span> property=<span class="string">&quot;age&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">    &lt;result column=<span class="string">&quot;sex&quot;</span> property=<span class="string">&quot;sex&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">  property：设置需要处理映射关系的属性的属性名</span><br><span class="line">        select：设置分步查询，查询某个属性的值的sql的标识（namespace.sqlId）</span><br><span class="line">        column：将sql以及查询结果中的某个字段设置为分步查询的条件</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;association property=<span class="string">&quot;dept&quot;</span> </span><br><span class="line">   select=<span class="string">&quot;com.atguigu.MyBatis.mapper.DeptMapper.getEmpDeptByStep&quot;</span> </span><br><span class="line">   column=<span class="string">&quot;did&quot;</span>&gt;</span><br><span class="line">&lt;/association&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line">&lt;!--Emp <span class="title function_">getEmpByStep</span><span class="params">(<span class="meta">@Param(&quot;eid&quot;)</span> <span class="type">int</span> eid)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getEmpByStep&quot;</span> resultMap=<span class="string">&quot;empDeptStepMap&quot;</span>&gt;</span><br><span class="line">select * from t_emp <span class="type">where</span> <span class="variable">eid</span> <span class="operator">=</span> #&#123;eid&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li><li><p>根据员工所对应的部门id查询部门信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 分步查询的第二步： 根据员工所对应的did查询部门信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> did</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">Dept <span class="title function_">getEmpDeptByStep</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--Dept <span class="title function_">getEmpDeptByStep</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getEmpDeptByStep&quot;</span> resultType=<span class="string">&quot;Dept&quot;</span>&gt;</span><br><span class="line">select * from t_dept <span class="type">where</span> <span class="variable">did</span> <span class="operator">=</span> #&#123;did&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="7-3-一对多映射处理"><a href="#7-3-一对多映射处理" class="headerlink" title="7.3 一对多映射处理"></a>7.3 一对多映射处理</h3><h4 id="7-3-1-collection"><a href="#7-3-1-collection" class="headerlink" title="7.3.1 collection"></a>7.3.1 collection</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 根据部门id查新部门以及部门中的员工信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> did</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">Dept <span class="title function_">getDeptEmpByDid</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;</span><br><span class="line"></span><br><span class="line">&lt;resultMap id=<span class="string">&quot;deptEmpMap&quot;</span> type=<span class="string">&quot;Dept&quot;</span>&gt;</span><br><span class="line">    &lt;id property=<span class="string">&quot;did&quot;</span> column=<span class="string">&quot;did&quot;</span>&gt;&lt;/id&gt;</span><br><span class="line">    &lt;result property=<span class="string">&quot;dname&quot;</span> column=<span class="string">&quot;dname&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    ofType：设置collection标签所处理的集合属性中存储数据的类型</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;collection property=<span class="string">&quot;emps&quot;</span> ofType=<span class="string">&quot;Emp&quot;</span>&gt;</span><br><span class="line">        &lt;id property=<span class="string">&quot;eid&quot;</span> column=<span class="string">&quot;eid&quot;</span>&gt;&lt;/id&gt;</span><br><span class="line">        &lt;result property=<span class="string">&quot;ename&quot;</span> column=<span class="string">&quot;ename&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result property=<span class="string">&quot;age&quot;</span> column=<span class="string">&quot;age&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result property=<span class="string">&quot;sex&quot;</span> column=<span class="string">&quot;sex&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">    &lt;/collection&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line">&lt;!--Dept <span class="title function_">getDeptEmpByDid</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getDeptEmpByDid&quot;</span> resultMap=<span class="string">&quot;deptEmpMap&quot;</span>&gt;</span><br><span class="line">select dept.*,emp.* from t_dept dept left join t_emp emp on dept.did = emp.did where dept.did = #&#123;did&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h4 id="7-3-2-分步查询"><a href="#7-3-2-分步查询" class="headerlink" title="7.3.2 分步查询"></a>7.3.2 分步查询</h4><ol><li><p>查询部门信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 分步查询部门和部门中的员工</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> did</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">Dept <span class="title function_">getDeptByStep</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;</span><br><span class="line"></span><br><span class="line">&lt;resultMap id=<span class="string">&quot;deptEmpStep&quot;</span> type=<span class="string">&quot;Dept&quot;</span>&gt;</span><br><span class="line">    &lt;id property=<span class="string">&quot;did&quot;</span> column=<span class="string">&quot;did&quot;</span>&gt;&lt;/id&gt;</span><br><span class="line">    &lt;result property=<span class="string">&quot;dname&quot;</span> column=<span class="string">&quot;dname&quot;</span>&gt;&lt;/result&gt;</span><br><span class="line">    &lt;collection property=<span class="string">&quot;emps&quot;</span> fetchType=<span class="string">&quot;eager&quot;</span></span><br><span class="line">    select=<span class="string">&quot;com.atguigu.MyBatis.mapper.EmpMapper.getEmpListByDid&quot;</span> column=<span class="string">&quot;did&quot;</span>&gt;</span><br><span class="line">    &lt;/collection&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line">&lt;!--Dept <span class="title function_">getDeptByStep</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getDeptByStep&quot;</span> resultMap=<span class="string">&quot;deptEmpStep&quot;</span>&gt;</span><br><span class="line">select * from t_dept <span class="type">where</span> <span class="variable">did</span> <span class="operator">=</span> #&#123;did&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li><li><p>根据部门id查询部门中的所有员工</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 根据部门id查询员工信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> did</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">List&lt;Emp&gt; <span class="title function_">getEmpListByDid</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;</span><br><span class="line"></span><br><span class="line">&lt;!--List&lt;Emp&gt; <span class="title function_">getEmpListByDid</span><span class="params">(<span class="meta">@Param(&quot;did&quot;)</span> <span class="type">int</span> did)</span>;--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;getEmpListByDid&quot;</span> resultType=<span class="string">&quot;Emp&quot;</span>&gt;</span><br><span class="line">select * from t_emp <span class="type">where</span> <span class="variable">did</span> <span class="operator">=</span> #&#123;did&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>分步查询的优点：可以实现<strong>延迟加载</strong></p><p>但是必须在核心配置文件中设置全局配置信息：</p><p>lazyLoadingEnabled：延迟加载的全局开关。当开启时，所有关联对象都会延迟加载</p><p>aggressiveLazyLoading：当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属 性会按需加载</p><p>此时就可以实现按需加载，获取的数据是什么，就只会执行相应的sql。此时可通过association和 collection中的fetchType属性设置当前的分步查询是否使用延迟加载， fetchType&#x3D;”lazy(延迟加 载)|eager(立即加载)”</p></blockquote><h2 id="8-动态SQL"><a href="#8-动态SQL" class="headerlink" title="8 动态SQL"></a>8 动态SQL</h2><blockquote><p>Mybatis框架的动态SQL技术是一种根据特定条件动态拼装SQL语句的功能，它存在的意义是为了 解决拼接SQL语句字符串时的痛点问题。</p></blockquote><h3 id="8-1-if"><a href="#8-1-if" class="headerlink" title="8.1 if"></a>8.1 if</h3><blockquote><p>if标签可通过test属性的表达式进行判断，若表达式的结果为true，则标签中的内容会执行；反之 标签中的内容不会执行</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpListByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpListByMoreTJ&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">select * from t_emp where 1=1</span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;ename != &#x27;&#x27; and ename != null&quot;</span>&gt;</span></span><br><span class="line">and ename = #&#123;ename&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != &#x27;&#x27; and age != null&quot;</span>&gt;</span></span><br><span class="line">and age = #&#123;age&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != &#x27;&#x27; and sex != null&quot;</span>&gt;</span></span><br><span class="line">and sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-3-where"><a href="#8-3-where" class="headerlink" title="8.3 where"></a>8.3 where</h3><blockquote><p>where和if一般结合使用： </p><ol><li>若where标签中的if条件都不满足，则where标签没有任何功能，即不会添加where关键字 </li><li>若where标签中的if条件满足，则where标签会自动添加where关键字，并将条件最前方多余的 and去掉 （只能去掉and，不能添加and）</li></ol><p>注意：where标签不能去掉条件最后多余的and</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpListByMoreTJ2&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">select * from t_emp</span><br><span class="line"><span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;ename != &#x27;&#x27; and ename != null&quot;</span>&gt;</span></span><br><span class="line">ename = #&#123;ename&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != &#x27;&#x27; and age != null&quot;</span>&gt;</span></span><br><span class="line">and age = #&#123;age&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != &#x27;&#x27; and sex != null&quot;</span>&gt;</span></span><br><span class="line">and sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-3-trim"><a href="#8-3-trim" class="headerlink" title="8.3 trim"></a>8.3 trim</h3><blockquote><p>trim用于去掉或添加标签中的内容 </p><p>常用属性： </p><p>prefix：在trim标签中的内容的前面添加某些内容 </p><p>prefixOverrides：在trim标签中的内容的前面去掉某些内容 </p><p>suffix：在trim标签中的内容的后面添加某些内容 </p><p>suffixOverrides：在trim标签中的内容的后面去掉某些内容</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpListByMoreTJ&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">select * from t_emp</span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;and&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;ename != &#x27;&#x27; and ename != null&quot;</span>&gt;</span></span><br><span class="line">ename = #&#123;ename&#125; and</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != &#x27;&#x27; and age != null&quot;</span>&gt;</span></span><br><span class="line">age = #&#123;age&#125; and</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex != &#x27;&#x27; and sex != null&quot;</span>&gt;</span></span><br><span class="line">sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-4-choose、when、otherwise"><a href="#8-4-choose、when、otherwise" class="headerlink" title="8.4 choose、when、otherwise"></a>8.4 choose、when、otherwise</h3><blockquote><p>choose、when、 otherwise相当于if…else if..else</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpListByChoose(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpListByChoose&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> from t_emp</span><br><span class="line"><span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;ename != &#x27;&#x27; and ename != null&quot;</span>&gt;</span></span><br><span class="line">ename = #&#123;ename&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;age != &#x27;&#x27; and age != null&quot;</span>&gt;</span></span><br><span class="line">age = #&#123;age&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;sex != &#x27;&#x27; and sex != null&quot;</span>&gt;</span></span><br><span class="line">sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;email != &#x27;&#x27; and email != null&quot;</span>&gt;</span></span><br><span class="line">email = #&#123;email&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-5-foreach"><a href="#8-5-foreach" class="headerlink" title="8.5 foreach"></a>8.5 foreach</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertMoreEmp(List&lt;Emp&gt; emps);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertMoreEmp&quot;</span>&gt;</span></span><br><span class="line">insert into t_emp values</span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">item</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">(null,#&#123;emp.ename&#125;,#&#123;emp.age&#125;,#&#123;emp.sex&#125;,#&#123;emp.email&#125;,null)</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--int deleteMoreByArray(int[] eids);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteMoreByArray&quot;</span>&gt;</span></span><br><span class="line">delete from t_emp where</span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;eids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span>&gt;</span></span><br><span class="line">eid = #&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--int deleteMoreByArray(int[] eids);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteMoreByArray&quot;</span>&gt;</span></span><br><span class="line">delete from t_emp where eid in</span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;eids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;eid&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">#&#123;eid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-6-SQL片段"><a href="#8-6-SQL片段" class="headerlink" title="8.6 SQL片段"></a>8.6 SQL片段</h3><blockquote><p>sql片段，可以记录一段公共sql片段，在使用的地方通过include标签进行引入</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span></span><br><span class="line">eid,ename,age,sex,did</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> from t_emp</span><br></pre></td></tr></table></figure><h2 id="9-MyBatis的缓存"><a href="#9-MyBatis的缓存" class="headerlink" title="9 MyBatis的缓存"></a>9 MyBatis的缓存</h2><h3 id="9-1-MyBatis的一级缓存"><a href="#9-1-MyBatis的一级缓存" class="headerlink" title="9.1 MyBatis的一级缓存"></a>9.1 MyBatis的一级缓存</h3><p>一级缓存是<strong>SqlSession级别的</strong>，通过同一个SqlSession查询的数据会被缓存，下次查询相同的数据，就 会从缓存中直接获取，不会从数据库重新访问</p><p>使一级缓存失效的四种情况：</p><ol><li>不同的SqlSession对应不同的一级缓存 </li><li>同一个SqlSession但是查询条件不同 </li><li>同一个SqlSession两次查询期间执行了任何一次增删改操作 </li><li>同一个SqlSession两次查询期间手动清空了缓存</li></ol><h3 id="9-2-MyBatis的二级缓存"><a href="#9-2-MyBatis的二级缓存" class="headerlink" title="9.2 MyBatis的二级缓存"></a>9.2 MyBatis的二级缓存</h3><p>二级缓存是<strong>SqlSessionFactory级别</strong>，通过同一个SqlSessionFactory创建的SqlSession查询的结果会被缓存；此后若再次执行相同的查询语句，结果就会从缓存中获取</p><ul><li><p>二级缓存开启的条件：</p><ol><li>在核心配置文件中，设置<strong>全局配置属性</strong>cacheEnabled&#x3D;”true”，默认为true，不需要设置</li><li>在映射文件中设置标签<strong>&lt;cache&#x2F;&gt;</strong></li><li>二级缓存必须在SqlSession<strong>关闭或提交之后有效</strong></li><li>查询的数据所转换的实体类类型必须<strong>实现序列化的接口</strong></li></ol></li><li><p>使二级缓存失效的情况：</p><ol><li><strong><font color="red">两次查询之间执行了任意的增删改，会使一级和二级缓存同时失效</font></strong></li></ol></li></ul><h3 id="9-3-二级缓存的相关配置"><a href="#9-3-二级缓存的相关配置" class="headerlink" title="9.3 二级缓存的相关配置"></a>9.3 二级缓存的相关配置</h3><p>在mapper配置文件中添加的cache标签可以设置一些属性：</p><ol><li><p>eviction属性：缓存回收策略，默认的是 LRU。</p><ul><li>LRU（Least Recently Used） – 最近最少使用的：移除最长时间不被使用的对象。</li><li>FIFO（First in First out） – 先进先出：按对象进入缓存的顺序来移除它们。 </li><li>SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。</li><li>WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。</li></ul></li><li><p>flushInterval属性：刷新间隔，单位毫秒</p><p>默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句时刷新</p></li><li><p>size属性：引用数目，正整数</p><p>代表缓存最多可以存储多少个对象，太大容易导致内存溢出</p></li><li><p>readOnly属性：只读， true&#x2F;false</p><p>true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了 很重要的性能优势。 </p><p>false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是 false。</p></li></ol><h3 id="9-4-MyBatis缓存查询的顺序"><a href="#9-4-MyBatis缓存查询的顺序" class="headerlink" title="9.4 MyBatis缓存查询的顺序"></a>9.4 MyBatis缓存查询的顺序</h3><p>先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用。 </p><p>如果二级缓存没有命中，再查询一级缓存 </p><p>如果一级缓存也没有命中，则查询数据库 </p><p>SqlSession关闭之后，一级缓存中的数据会写入二级缓存</p><h3 id="9-5-整合第三方缓存EHCache"><a href="#9-5-整合第三方缓存EHCache" class="headerlink" title="9.5 整合第三方缓存EHCache"></a>9.5 整合第三方缓存EHCache</h3><h4 id="9-5-1-添加依赖"><a href="#9-5-1-添加依赖" class="headerlink" title="9.5.1 添加依赖"></a>9.5.1 添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis EHCache整合包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- slf4j日志门面的一个具体实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="9-5-2-各jar包功能"><a href="#9-5-2-各jar包功能" class="headerlink" title="9.5.2 各jar包功能"></a>9.5.2 各jar包功能</h4><table><thead><tr><th>jar包名称</th><th>作用</th></tr></thead><tbody><tr><td>mybatis-ehcache</td><td>Mybatis和EHCache的整合包</td></tr><tr><td>ehcache</td><td>EHCache核心包</td></tr><tr><td>slf4j-api</td><td>SLF4J日志门面包</td></tr><tr><td>logback-classic</td><td>支持SLF4J门面接口的一个具体实现</td></tr></tbody></table><h4 id="9-5-3-创建EHCache的配置文件ehcache-xml"><a href="#9-5-3-创建EHCache的配置文件ehcache-xml" class="headerlink" title="9.5.3 创建EHCache的配置文件ehcache.xml"></a>9.5.3 创建EHCache的配置文件ehcache.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;../config/ehcache.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 磁盘保存路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;D:\atguigu\ehcache&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxElementsOnDisk</span>=<span class="string">&quot;10000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="9-5-4-设置二级缓存的类型"><a href="#9-5-4-设置二级缓存的类型" class="headerlink" title="9.5.4 设置二级缓存的类型"></a>9.5.4 设置二级缓存的类型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;cache type=&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;/&gt;</span><br></pre></td></tr></table></figure><h4 id="9-5-5-加入logback日志"><a href="#9-5-5-加入logback日志" class="headerlink" title="9.5.5 加入logback日志"></a>9.5.5 加入logback日志</h4><blockquote><p>存在SLF4J时，作为简易日志的log4j将失效，此时我们需要借助SLF4J的具体实现logback来打印日 志。 创建logback的配置文件logback.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定日志输出的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志输出的格式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 按照顺序分别是： 时间、日志级别、线程名称、打印日志的类、日志主体内容、换行--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%d&#123;HH:mm:ss.SSS&#125;] [%-5level] [%thread] [%logger]</span><br><span class="line">        [%msg]%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 设置全局日志级别。日志级别按顺序分别是： DEBUG、INFO、WARN、ERROR --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定任何一个日志级别都只打印当前级别和后面级别的日志。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定打印日志的appender，这里通过“STDOUT”引用了前面配置的appender --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 根据特殊需求指定局部日志级别 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.crowd.mapper&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="9-5-6-EHCache配置文件说明"><a href="#9-5-6-EHCache配置文件说明" class="headerlink" title="9.5.6 EHCache配置文件说明"></a>9.5.6 EHCache配置文件说明</h4><table><thead><tr><th>属性名</th><th>是 否 必 须</th><th>作用</th></tr></thead><tbody><tr><td>maxElementsInMemory</td><td>是</td><td>在内存中缓存的element的最大数目</td></tr><tr><td>在内存中缓存的element的最大数目</td><td>是</td><td>在磁盘上缓存的element的最大数目，若是0表示无 穷大</td></tr><tr><td>eternal</td><td>是</td><td>设定缓存的elements是否永远不过期。 如果为 true，则缓存的数据始终有效， 如果为false那么还 要根据timeToIdleSeconds、timeToLiveSeconds 判断</td></tr><tr><td>overflowToDisk</td><td>是</td><td>设定当内存缓存溢出的时候是否将过期的element 缓存到磁盘上</td></tr><tr><td>timeToIdleSeconds</td><td>否</td><td>当缓存在EhCache中的数据前后两次访问的时间超 过timeToIdleSeconds的属性取值时， 这些数据便 会删除，默认值是0,也就是可闲置时间无穷大</td></tr><tr><td>timeToLiveSeconds</td><td>否</td><td>缓存element的有效生命期，默认是0.,也就是 element存活时间无穷大</td></tr><tr><td>diskSpoolBufferSizeMB</td><td>否</td><td>DiskStore(磁盘缓存)的缓存区大小。默认是 30MB。每个Cache都应该有自己的一个缓冲区</td></tr><tr><td>diskPersistent</td><td>否</td><td>在VM重启的时候是否启用磁盘保存EhCache中的数 据，默认是false。</td></tr><tr><td>diskExpiryThreadIntervalSeconds</td><td>否</td><td>磁盘缓存的清理线程运行间隔，默认是120秒。每 个120s， 相应的线程会进行一次EhCache中数据的 清理工作</td></tr><tr><td>memoryStoreEvictionPolicy</td><td>否</td><td>当内存缓存达到最大，有新的element加入的时 候， 移除缓存中element的策略。 默认是LRU （最 近最少使用），可选的有LFU （最不常使用）和 FIFO （先进先出）</td></tr></tbody></table><h2 id="10-MyBatis的逆向工程"><a href="#10-MyBatis的逆向工程" class="headerlink" title="10 MyBatis的逆向工程"></a>10 MyBatis的逆向工程</h2><blockquote><p>正向工程：先创建Java实体类，由框架负责根据实体类生成数据库表。 Hibernate是支持正向工 程的。</p><p>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：</p><ul><li>Java实体类 </li><li>Mapper接口 </li><li>Mapper映射文件</li></ul></blockquote><h3 id="10-1-创建逆向工程的步骤"><a href="#10-1-创建逆向工程的步骤" class="headerlink" title="10.1 创建逆向工程的步骤"></a>10.1 创建逆向工程的步骤</h3><h4 id="10-1-1-添加依赖和插件"><a href="#10-1-1-添加依赖和插件" class="headerlink" title="10.1.1 添加依赖和插件"></a>10.1.1 添加依赖和插件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖MyBatis核心包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 构建过程中用到的插件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 插件的依赖 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 逆向工程的核心依赖 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-1-2-创建MyBatis的核心配置文件"><a href="#10-1-2-创建MyBatis的核心配置文件" class="headerlink" title="10.1.2 创建MyBatis的核心配置文件"></a>10.1.2 创建MyBatis的核心配置文件</h4><h4 id="10-1-3-创建逆向工程的配置文件"><a href="#10-1-3-创建逆向工程的配置文件" class="headerlink" title="10.1.3 创建逆向工程的配置文件"></a>10.1.3 创建逆向工程的配置文件</h4><blockquote><p>文件名必须是：generatorConfig.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      targetRuntime: 执行生成的逆向工程的版本</span></span><br><span class="line"><span class="comment">      MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span></span><br><span class="line"><span class="comment">      MyBatis3: 生成带条件的CRUD（奢华尊享版）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressDate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 数据库的连接信息 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                      <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&quot;</span></span></span><br><span class="line"><span class="tag">                      <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                      <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 仅仅查询当前库的表，不去查询其他库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;nullCatalogMeansCurrent&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- javaBean的生成策略--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- SQL映射文件的生成策略 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\resources&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Mapper接口的生成策略 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 逆向分析的表 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_emp&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Emp&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_dept&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Dept&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-1-4-执行MBG插件的generate目标"><a href="#10-1-4-执行MBG插件的generate目标" class="headerlink" title="10.1.4 执行MBG插件的generate目标"></a>10.1.4 执行MBG插件的generate目标</h4><p><img src="/../images/SSM+Mybatis-Plus/%E6%89%A7%E8%A1%8CMBG%E6%8F%92%E4%BB%B6%E7%9A%84generate%E7%9B%AE%E6%A0%87.png" alt="执行MBG插件的generate目标"></p><h3 id="10-2-QBC查询"><a href="#10-2-QBC查询" class="headerlink" title="10.2 QBC查询"></a>10.2 QBC查询</h3><h2 id="11-分页插件"><a href="#11-分页插件" class="headerlink" title="11 分页插件"></a>11 分页插件</h2><p>limit index,pageSize</p><p>pageSize：每页显示的条数</p><p>pageNum：当前页的页码 </p><p>index：当前页的起始索引，index&#x3D;(pageNum-1)*pageSize</p><p>count：总记录数 </p><p>totalPage：总页数</p><p>totalPage &#x3D; count &#x2F; pageSize; </p><p>if(count % pageSize !&#x3D; 0){ </p><p>totalPage +&#x3D; 1; </p><p>}</p><p>pageSize&#x3D;4，pageNum&#x3D;1，index&#x3D;0 limit 0,4</p><p>pageSize&#x3D;4，pageNum&#x3D;3，index&#x3D;8 limit 8,4 </p><p>pageSize&#x3D;4，pageNum&#x3D;6，index&#x3D;20 limit 8,4</p><p><code>首页 上一页 2 3 4 5 6 下一页 末页</code></p><h3 id="11-1-分页插件的使用步骤"><a href="#11-1-分页插件的使用步骤" class="headerlink" title="11.1 分页插件的使用步骤"></a>11.1 分页插件的使用步骤</h3><h4 id="11-1-1-添加依赖"><a href="#11-1-1-添加依赖" class="headerlink" title="11.1.1 添加依赖"></a>11.1.1 添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="11-1-2-配置分页插件"><a href="#11-1-2-配置分页插件" class="headerlink" title="11.1.2 配置分页插件"></a>11.1.2 配置分页插件</h4><ul><li><p>在MyBatis的核心配置文件中配置插件</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置分页插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在Spring的核心配置文件中配置插件</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置分页插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="11-2-分页插件的使用"><a href="#11-2-分页插件的使用" class="headerlink" title="11.2 分页插件的使用"></a>11.2 分页插件的使用</h3><ol><li><p>在查询功能之前使用</p><p><code>PageHelper.startPage(int pageNum, int pageSize)</code>开启分页功能</p><blockquote><p>pageNum：当前页的页码</p><p>pageSize：每页显示的条数</p></blockquote></li><li><p>在查询获取list集合之后，使用</p><p><code>PageInfo pageInfo = new PageInfo&lt;&gt;(List list, int navigatePages)</code>获取分页相关数据</p><blockquote><p>list：分页之后的数据</p><p>navigatePages：导航分页的页码数</p></blockquote></li><li><p>分页相关数据</p><blockquote><p>PageInfo{ </p><p>pageNum&#x3D;8, pageSize&#x3D;4, size&#x3D;2, startRow&#x3D;29, endRow&#x3D;30, total&#x3D;30, pages&#x3D;8, list&#x3D;Page{count&#x3D;true, pageNum&#x3D;8, pageSize&#x3D;4, startRow&#x3D;28, endRow&#x3D;32, total&#x3D;30, pages&#x3D;8, reasonable&#x3D;false, pageSizeZero&#x3D;false},</p><p>prePage&#x3D;7, nextPage&#x3D;0, isFirstPage&#x3D;false, isLastPage&#x3D;true, hasPreviousPage&#x3D;true, hasNextPage&#x3D;false, navigatePages&#x3D;5, navigateFirstPage4, navigateLastPage8, navigatepageNums&#x3D;[4, 5, 6, 7, 8] </p><p>}</p><p>pageNum：当前页的页码 </p><p>pageSize：每页显示的条数 </p><p>size：当前页显示的真实条数 </p><p>total：总记录数 </p><p>pages：总页数 </p><p>prePage：上一页的页码 </p><p>nextPage：下一页的页码 </p><p>isFirstPage&#x2F;isLastPage：是否为第一页&#x2F;最后一页 </p><p>hasPreviousPage&#x2F;hasNextPage：是否存在上一页&#x2F;下一页 </p><p>navigatePages：导航分页的页码数 </p><p>navigatepageNums：导航分页的页码，[1,2,3,4,5]</p></blockquote></li><li><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取页数或每页条数</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/user/page/&#123;pageNum&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getUserPage</span><span class="params">(<span class="meta">@PathVariable</span> Integer pageNum, Model model)</span> &#123;</span><br><span class="line">    PageInfo&lt;User&gt; pageInfo = userServlet.getUserPage(pageNum);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;pageInfo&quot;</span>, pageInfo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开启分页插件</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageInfo&lt;User&gt; <span class="title function_">getUserPage</span><span class="params">(Integer pageNum)</span> &#123;</span><br><span class="line">    <span class="comment">//开启分页功能</span></span><br><span class="line">    PageHelper.startPage(pageNum, <span class="number">10</span>);</span><br><span class="line">    <span class="comment">//查询所有用户信息</span></span><br><span class="line">    List&lt;User&gt; allUser = userMapper.getAllUser();</span><br><span class="line">    <span class="comment">//获取分页相关数据</span></span><br><span class="line">    PageInfo&lt;User&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(allUser, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> pageInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/../images/SSM+Mybatis-Plus/%E5%88%86%E5%89%B2%E7%BA%BF.png"></p><h1 id="四、SSM整合"><a href="#四、SSM整合" class="headerlink" title="四、SSM整合"></a>四、SSM整合</h1><h2 id="1-ContextLoaderListener"><a href="#1-ContextLoaderListener" class="headerlink" title="1 ContextLoaderListener"></a>1 ContextLoaderListener</h2><p>Spring提供了监听器ContextLoaderListener，实现ServletContextListener接口，可监听ServletContext的状态，在web服务器的启动，读取Spring的配置文件，创建Spring的IOC容器。web 应用中必须在web.xml中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        配置Spring的监听器，在服务器启动时加载Spring的配置文件</span></span><br><span class="line"><span class="comment">        Spring配置文件默认位置和名称：/WEB-INF/applicationContext.xml</span></span><br><span class="line"><span class="comment">        可通过上下文参数自定义Spring配置文件的位置和名称</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--自定义Spring配置文件的位置和名称--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2 准备工作"></a>2 准备工作</h2><h3 id="2-1-创建项目"><a href="#2-1-创建项目" class="headerlink" title="2.1 创建项目"></a>2.1 创建项目</h3><h3 id="2-2-导入依赖"><a href="#2-2-导入依赖" class="headerlink" title="2.2 导入依赖"></a>2.2 导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.13.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.15.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-配置web-xml"><a href="#3-配置web-xml" class="headerlink" title="3 配置web.xml"></a>3 配置web.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置Spring的编码过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--设置处理请求方式的过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--springmvc前端控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置Spring的监听器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 设置Spring的配置文件的位置和名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-创建SpringMVC的配置文件并配置"><a href="#4-创建SpringMVC的配置文件并配置" class="headerlink" title="4 创建SpringMVC的配置文件并配置"></a>4 创建SpringMVC的配置文件并配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxuan.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;order&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateEngine&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图前缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateMode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HTML5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置视图控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/success&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;success&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/error&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;error&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置默认的servlet处理静态资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开启MVC的注解驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-搭建MyBatis环境"><a href="#5-搭建MyBatis环境" class="headerlink" title="5 搭建MyBatis环境"></a>5 搭建MyBatis环境</h2><h3 id="5-1-创建属性文件jdbc-properties"><a href="#5-1-创建属性文件jdbc-properties" class="headerlink" title="5.1 创建属性文件jdbc.properties"></a>5.1 创建属性文件jdbc.properties</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">lx*0+0-0</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatisdemo</span></span><br><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><h3 id="5-2-创建MyBatis的核心配置文件mybatis-config-xml"><a href="#5-2-创建MyBatis的核心配置文件mybatis-config-xml" class="headerlink" title="5.2 创建MyBatis的核心配置文件mybatis-config.xml"></a>5.2 创建MyBatis的核心配置文件mybatis-config.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将下划线映射为驼峰命名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启延迟加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--按需加载：默认为false，无论延迟加载是否开启都会执行分布查询的所有查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;aggressiveLazyLoading&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-创建Spring的配置文件并配置"><a href="#6-创建Spring的配置文件并配置" class="headerlink" title="6 创建Spring的配置文件并配置"></a>6 创建Spring的配置文件并配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--扫描组件，排除控制层--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxuan&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置SqlSessionFactoryBean，可以直接在Spring的IOC中获取SqlSessionFactory--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置MyBatis的核心配置文件的路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置类型别名对应的包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.lxuan.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置映射文件的路径，只有映射文件的包和mapper接口的包不一致需要设置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mappers/*.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;plugins&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置全局配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configurationProperties&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将下划线映射为驼峰命名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启延迟加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--按需加载：默认为false，无论延迟加载是否开启都会执行分布查询的所有查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;aggressiveLazyLoading&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">配置mapper接口的扫描，将这个包下的所有接口，</span></span><br><span class="line"><span class="comment">通过SqlSession创建代理实现类对象，并将这些对象交给ioc容器管理</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.lxuan.mapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/../images/SSM+Mybatis-Plus/%E5%88%86%E5%89%B2%E7%BA%BF.png" alt="分割线"></p><h1 id="五、MyBatis-Plus"><a href="#五、MyBatis-Plus" class="headerlink" title="五、MyBatis-Plus"></a>五、MyBatis-Plus</h1><h2 id="1-MyBatis-Plus简介"><a href="#1-MyBatis-Plus简介" class="headerlink" title="1 MyBatis-Plus简介"></a>1 MyBatis-Plus简介</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p><strong>MyBatis-Plus</strong>（简称 MP）是一个 MyBatis的<strong>增强工具</strong>，在 MyBatis 的基础上<strong>只做增强不做改变</strong>，为简化开发、提高效率而生。</p><h3 id="1-2-特性"><a href="#1-2-特性" class="headerlink" title="1.2 特性"></a>1.2 特性</h3><ul><li>无侵入：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li>损耗小：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li>强大的 CRUD 操作：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li>支持 Lambda 形式调用：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li>支持主键自动生成：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由 配置，完美解决主键问题</li><li>支持 ActiveRecord 模式：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强 大的 CRUD 操作</li><li>支持自定义全局通用操作：支持全局通用方法注入（ Write once, use anywhere） </li><li>内置代码生成器：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li>内置分页插件：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等 同于普通 List 查询</li><li>分页插件支持多种数据库：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、 Postgre、SQLServer 等多种数据库</li><li>内置性能分析插件：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出 慢查询 </li><li>内置全局拦截插件：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防 误操作</li></ul><h3 id="1-3-支持数据库"><a href="#1-3-支持数据库" class="headerlink" title="1.3 支持数据库"></a>1.3 支持数据库</h3><blockquote><p>任何能使用MyBatis进行 CRUD, 并且支持标准 SQL 的数据库，具体支持情况如下</p></blockquote><ul><li>MySQL，Oracle，DB2，H2，HSQL，SQLite，PostgreSQL，SQLServer，Phoenix，Gauss ， ClickHouse，Sybase，OceanBase，Firebird，Cubrid，Goldilocks，csiidb</li><li>达梦数据库，虚谷数据库，人大金仓数据库，南大通用(华库)数据库，南大通用数据库，神通数据 库，瀚高数据库</li></ul><h3 id="1-4-框架结构"><a href="#1-4-框架结构" class="headerlink" title="1.4 框架结构"></a>1.4 框架结构</h3><p><img src="/../images/SSM+Mybatis-Plus/%E6%A1%86%E6%9E%B6%E7%BB%93%E6%9E%84.png" alt="框架结构"></p><h3 id="1-5-框架结构"><a href="#1-5-框架结构" class="headerlink" title="1.5 框架结构"></a>1.5 框架结构</h3><ul><li><p>官方地址: <a href="http://mp.baomidou.com/">http://mp.baomidou.com</a> </p></li><li><p>代码发布地址: </p><ul><li>Github: <a href="https://github.com/baomidou/mybatis-plus">https://github.com/baomidou/mybatis-plus</a> </li><li>Gitee: <a href="https://gitee.com/baomidou/mybatis-plus">https://gitee.com/baomidou/mybatis-plus</a> </li><li>文档发布地址: <a href="https://baomidou.com/pages/24112f">https://baomidou.com/pages/24112f</a></li></ul></li></ul><h2 id="2-入门案例-1"><a href="#2-入门案例-1" class="headerlink" title="2 入门案例"></a>2 入门案例</h2><h3 id="2-1-开发环境-1"><a href="#2-1-开发环境-1" class="headerlink" title="2.1 开发环境"></a>2.1 开发环境</h3><p>IDE：idea 2019.2 </p><p>JDK：JDK8+ </p><p>构建工具：maven 3.5.4 </p><p>MySQL版本：MySQL 5.7</p><p>Spring Boot：2.6.3 </p><p>MyBatis-Plus：3.5.1</p><h3 id="2-2-创建数据库及表"><a href="#2-2-创建数据库及表" class="headerlink" title="2.2 创建数据库及表"></a>2.2 创建数据库及表</h3><h3 id="2-3-创建Spring-Boot工程"><a href="#2-3-创建Spring-Boot工程" class="headerlink" title="2.3 创建Spring Boot工程"></a>2.3 创建Spring Boot工程</h3><h3 id="2-4-编写代码"><a href="#2-4-编写代码" class="headerlink" title="2.4 编写代码"></a>2.4 编写代码</h3><h4 id="2-4-1-配置application-yml"><a href="#2-4-1-配置application-yml" class="headerlink" title="2.4.1 配置application.yml"></a>2.4.1 配置application.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatisdemo</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">lx*0+0-0</span></span><br></pre></td></tr></table></figure><p>注意：</p><blockquote><ol><li><p>驱动类driver-class-name </p><p>spring boot 2.0（内置jdbc5驱动），驱动类使用：driver-class-name: com.mysql.jdbc.Driver</p><p>spring boot 2.1及以上（内置jdbc8驱动），驱动类使用： driver-class-name: com.mysql.cj.jdbc.Driver</p></li><li><p>连接地址url</p><p>MySQL5.7版本的url：jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis_plus?characterEncoding&#x3D;utf-8&amp;useSSL&#x3D;false</p><p>MySQL8.0版本的url： jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis_plus? serverTimezone&#x3D;GMT%2B8&amp;characterEncoding&#x3D;utf-8&amp;useSSL&#x3D;false</p><p>否则运行测试用例报告如下错误： java.sql.SQLException: The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more</p></li></ol></blockquote><h4 id="2-4-2-启动类"><a href="#2-4-2-启动类" class="headerlink" title="2.4.2 启动类"></a>2.4.2 启动类</h4><blockquote><p>在Spring Boot启动类中添加<code>@MapperScan</code>注解，扫描mapper包</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisplusApplication</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    SpringApplication.run(MybatisplusApplication.class, args);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-3-添加mapper或dao"><a href="#2-4-3-添加mapper或dao" class="headerlink" title="2.4.3 添加mapper或dao"></a>2.4.3 添加mapper或dao</h4><blockquote><p>BaseMapper是MyBatis-Plus提供的模板mapper，其中包含了基本的CRUD方法，泛型为操作的 实体类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-4-添加日志"><a href="#2-4-4-添加日志" class="headerlink" title="2.4.4 添加日志"></a>2.4.4 添加日志</h4><p>在application.yml中配置日志输出</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置MyBatis日志</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h2 id="3-常用注解"><a href="#3-常用注解" class="headerlink" title="3 常用注解"></a>3 常用注解</h2><h3 id="3-1-TableName"><a href="#3-1-TableName" class="headerlink" title="3.1 @TableName"></a>3.1 <code>@TableName</code></h3><p>经过以上的测试，在使用MyBatis-Plus实现基本的CRUD时，我们并没有指定要操作的表，只是在 Mapper接口继承BaseMapper时，设置了泛型User，而操作的表为user表 </p><p>由此得出结论，MyBatis-Plus在确定操作的表时，由BaseMapper的泛型决定，即实体类型决定，且默认操作的表名和实体类型的类名一致</p><blockquote><p>问题：</p><p>若实体类类型的类名和要操作的表的表名不一致，会出现什么问题？</p><p>我们将表user更名为t_user，测试查询功能 程序抛出异常，<code>Table &#39;mybatis_plus.user&#39; doesn&#39;t exist</code>，因为现在的表名为t_user，而默认操作的表名和实体类型的类名一致，即user表</p></blockquote><blockquote><ul><li>通过@TableName解决问题</li></ul><p>在实体类类型上添加**<code>@TableName(&quot;t_user&quot;)</code>**，标识实体类对应的表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userPassword;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer userAge;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Character userGender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userEmail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过全局配置解决问题</li></ul><p>在开发的过程中，我们经常遇到以上的问题，即实体类所对应的表都有固定的前缀，例如t_或tbl_</p><p>此时，可以使用MyBatis-Plus提供的全局配置，为实体类所对应的表名设置默认的前缀，那么就不需要在每个实体类上通过@TableName标识实体类对应的表</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="3-2-TableId"><a href="#3-2-TableId" class="headerlink" title="3.2 @TableId"></a>3.2 <code>@TableId</code></h3><p>经过以上的测试，MyBatis-Plus在实现CRUD时，会默认将**<font color='red'>id</font><strong>作为主键列，并在插入数据时，默认 基于</strong>雪花算法**的策略生成id</p><blockquote><p>问题：</p><p>若实体类和表中表示主键的不是id，而是其他字段，例如uid，MyBatis-Plus会自动识别uid为主键列吗？</p><p>我们实体类中的属性id改为uid，将表中的字段id也改为uid，测试添加功能，程序抛出异常，<code>Field &#39;uid&#39; doesn&#39;t have a default value</code>，说明MyBatis-Plus没有将uid作为主键赋值</p></blockquote><blockquote><ul><li>通过@TableId解决问题</li></ul><p>在实体类中uid属性上通过@TableId将其标识为主键，即可成功执行SQL语句</p><img src="../images/SSM+Mybatis-Plus/@TableId.png" alt="@TableId" style="zoom:50%;" /><ul><li>@TableId的value属性</li></ul><p>若实体类中主键对应的属性为id，而表中表示主键的字段为uid，此时若只在属性id上添加注解 @TableId，则抛出异常<code>Unknown column &#39;id&#39; in &#39;field list&#39;</code>，即MyBatis-Plus仍然会将id作为表的 主键操作，而表中表示主键的是字段uid</p><p>此时需要通过@TableId注解的value属性，指定表中的主键字段，<code>@TableId(&quot;uid&quot;)</code>或 <code>@TableId(value=&quot;uid&quot;)</code></p><ul><li>@TableId的type属性</li></ul><p>type属性用来定义主键策略</p><p>常用的主键策略：</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>IdType.ASSIGN_ID（默 认）</td><td>基于雪花算法的策略生成数据id，与数据库id是否设置自增无关</td></tr><tr><td>IdType.AUTO</td><td>使用数据库的自增策略，注意，该类型请确保数据库设置了id自增， 否则无效</td></tr></tbody></table><ul><li>通过配置全局主键策略：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">    <span class="attr">configuration:</span></span><br><span class="line">        <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">        <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">    <span class="attr">global-config:</span></span><br><span class="line">        <span class="attr">db-config:</span></span><br><span class="line">            <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">            <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br><span class="line">            <span class="comment"># 配置MyBatis-Plus的主键策略</span></span><br><span class="line">            <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure></blockquote><h4 id="3-2-1-雪花算法"><a href="#3-2-1-雪花算法" class="headerlink" title="3.2.1 雪花算法"></a>3.2.1 雪花算法</h4><ul><li><p>背景</p><p>需要选择合适的方案去应对数据规模的增长，以应对逐渐增长的访问压力和数据量。 数据库的扩展方式主要包括：业务分库、主从复制，数据库分表。</p></li><li><p>数据库分表</p><p>将不同业务数据<strong>分散存储到不同的数据库服务器</strong>，能够支撑百万甚至千万用户规模的业务，但如果业务继续发展，同一业务的单表数据也会达到单台数据库服务器的处理瓶颈。例如，淘宝的几亿用户数据， 如果全部存放在一台数据库服务器的一张表中，肯定是无法满足性能要求的，此时就需要对单表数据进行拆分。</p><p>单表数据拆分有两种方式：**<font color='red'>垂直分表</font><strong>和</strong><font color='red'>水平分表</font>**。示意图如下：</p><p><img src="/../images/SSM+Mybatis-Plus/%E5%9E%82%E7%9B%B4%E5%88%86%E8%A1%A8%E5%92%8C%E6%B0%B4%E5%B9%B3%E5%88%86%E8%A1%A8.png" alt="垂直分表和水平分表"></p></li><li><p>垂直分表：</p><p>垂直分表适合将表中某些<strong>不常用且占了大量空间的列拆分出去</strong>。</p><p>例如，前面示意图中的 nickname 和 description 字段，假设我们是一个婚恋网站，用户在筛选其他用 户的时候，主要是用 age 和 sex 两个字段进行查询，而 nickname 和 description 两个字段主要用于展示，一般不会在业务查询中用到。description 本身又比较长，因此我们可以将这两个字段独立到另外 一张表中，这样在查询 age 和 sex 时，就能带来一定的性能提升。</p></li><li><p>水平分表</p><p>水平分表适合表行数特别大的表，有的公司要求单表行数超过 5000 万就必须进行分表，这个数字可以作为参考，但并不是绝对标准，关键还是要看表的访问性能。对于一些比较复杂的表，可能超过 1000 万就要分表了；而对于一些简单的表，即使存储数据超过 1 亿行，也可以不分表。</p><p>但不管怎样，当看到表的数据量达到千万级别时，作为架构师就要警觉起来，因为这很可能是架构的性能瓶颈或者隐患。</p><p>水平分表相比垂直分表，会引入更多的复杂性，例如要求全局唯一的数据id该如何处理？</p><ul><li><p><strong>主键自增</strong></p><p>以最常见的用户 ID 为例，可以按照 1000000 的范围大小进行分段，1 ~ 999999 放到表 1中， 1000000 ~ 1999999 放到表2中，以此类推。</p><ul><li>复杂点：分段大小的选取。分段太小会导致切分后子表数量过多，增加维护复杂度；分段太大可能会 导致单表依然存在性能问题，一般建议分段大小在 100 万至 2000 万之间，具体需要根据业务选取合适 的分段大小。</li><li>优点：可以随着数据的增加平滑地扩充新的表。例如，现在的用户是 100 万，如果增加到 1000 万， 只需要增加新的表就可以了，原有的数据不需要动。</li><li>缺点：分布不均匀。假如按照 1000 万来进行分表，有可能某个分段实际存储的数据量只有 1 条，而 另外一个分段实际存储的数据量有 1000 万条。</li></ul></li><li><p><strong>取模</strong></p><p>同样以用户 ID 为例，假如我们一开始就规划了 10 个数据库表，可以简单地用 user_id % 10 的值来 表示数据所属的数据库表编号，ID 为 985 的用户放到编号为 5 的子表中，ID 为 10086 的用户放到编号 为 6 的子表中。</p><ul><li>复杂点：初始表数量的确定。表数量太多维护比较麻烦，表数量太少又可能导致单表性能存在问题。</li><li>优点：表分布比较均匀。</li><li>缺点：扩充新的表很麻烦，所有数据都要重分布。</li></ul></li><li><p><strong>雪花算法</strong></p><p>雪花算法是由Twitter公布的分布式主键生成算法，它能够保证不同表的主键的不重复性，以及相同表的主键的有序性。</p><ul><li><p>核心思想：</p><p>长度共64bit（一个long型）。</p><p>首先是一个符号位，1bit标识，由于long基本类型在Java中是带符号的，最高位是符号位，正数是0，负数是1，所以id一般是正数，最高位是0。</p><p>41bit时间截(毫秒级)，存储的是时间截的差值（当前时间截 - 开始时间截)，结果约等于69.73年。</p><p>10bit作为机器的ID（5个bit是数据中心，5个bit的机器ID，可以部署在1024个节点）。</p><p>12bit作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID）。</p></li><li><p>优点：整体上按照时间自增排序，并且整个分布式系统内不会产生ID碰撞，并且效率较高。</p></li></ul></li></ul></li></ul><h3 id="3-3-TableField"><a href="#3-3-TableField" class="headerlink" title="3.3 @TableField"></a>3.3 <code>@TableField</code></h3><blockquote><p>经过以上的测试，我们可以发现，MyBatis-Plus在执行SQL语句时，要保证实体类中的属性名和 表中的字段名一致</p><p>如果实体类中的属性名和字段名不一致的情况，会出现什么问题呢？</p></blockquote><ol><li><p>情况1</p><blockquote><p>若实体类中的属性使用的是<strong>驼峰命名风格</strong>，而表中的字段使用的是下划线命名风格 </p><p>例如实体类属性userName，表中字段user_name </p><p>此时MyBatis-Plus会自动将下划线命名风格转化为驼峰命名风格 </p><p>相当于在MyBatis中配置</p></blockquote></li><li><p>情况2</p><blockquote><p>若实体类中的属性和表中的字段不满足情况1 </p><p>例如实体类属性name，表中字段username </p><p>此时需要在实体类属性上使用<code>@TableField(&quot;username&quot;)</code>设置属性所对应的字段名</p></blockquote></li></ol><h3 id="3-4-TableLogic"><a href="#3-4-TableLogic" class="headerlink" title="3.4 @TableLogic"></a>3.4 <code>@TableLogic</code></h3><p>逻辑删除：</p><ul><li><p>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除的数据</p></li><li><p>逻辑删除：假删除，将对应数据中代表是否被删除字段的状态修改为“被删除状态”，之后在数据库 中仍旧能看到此条数据记录</p><p>使用场景：可以进行数据恢复</p></li></ul><p>实现步骤：</p><ol><li>数据库中创建逻辑删除状态列，设置默认值为0</li><li>实体类中添加逻辑删除属性</li><li>在该属性上添加<code>@TableLogic</code></li></ol><h2 id="4-条件构造器和常用接口"><a href="#4-条件构造器和常用接口" class="headerlink" title="4 条件构造器和常用接口"></a>4 条件构造器和常用接口</h2><h3 id="4-1-wapper介绍"><a href="#4-1-wapper介绍" class="headerlink" title="4.1 wapper介绍"></a>4.1 wapper介绍</h3><ul><li>Wrapper ： 条件构造抽象类，最顶端父类<ul><li>AbstractWrapper ： 用于查询条件封装，生成 sql 的 where 条件<ul><li>QueryWrapper ： 查询条件封装 </li><li>UpdateWrapper ： Update 条件封装 </li><li>AbstractLambdaWrapper ： 使用Lambda 语法<ul><li>LambdaQueryWrapper ：用于Lambda语法使用的查询Wrapper </li><li>LambdaUpdateWrapper ： Lambda 更新封装Wrapper</li></ul></li></ul></li></ul></li></ul><h3 id="4-2-QueryWrapper"><a href="#4-2-QueryWrapper" class="headerlink" title="4.2 QueryWrapper"></a>4.2 QueryWrapper</h3><h4 id="4-2-1-组装查询条件"><a href="#4-2-1-组装查询条件" class="headerlink" title="4.2.1 组装查询条件"></a>4.2.1 组装查询条件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//查询用户名包含a，年龄在20到30之间，并且邮箱不为null的用户信息</span></span><br><span class="line">    <span class="comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (username LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.like(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">        .between(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line">        .isNotNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-组装排序条件"><a href="#4-2-2-组装排序条件" class="headerlink" title="4.2.2 组装排序条件"></a>4.2.2 组装排序条件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//按年龄降序查询用户，如果年龄相同则按id升序排列</span></span><br><span class="line"><span class="comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 ORDER BY age DESC,id ASC</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper</span><br><span class="line">        .orderByDesc(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">        .orderByAsc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-组装删除条件"><a href="#4-2-3-组装删除条件" class="headerlink" title="4.2.3 组装删除条件"></a>4.2.3 组装删除条件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test03</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//删除email为空的用户</span></span><br><span class="line">    <span class="comment">//DELETE FROM t_user WHERE (email IS NULL)</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.isNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">    <span class="comment">//条件构造器也可以构建删除语句的条件</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.delete(queryWrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-4-条件的优先级"><a href="#4-2-4-条件的优先级" class="headerlink" title="4.2.4 条件的优先级"></a>4.2.4 条件的优先级</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test04</span><span class="params">()</span> &#123;</span><br><span class="line">QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//将用户名中包含有a并且（年龄大于20或邮箱为null）的用户信息修改</span></span><br><span class="line">    <span class="comment">//UPDATE t_user SET age=?, email=? WHERE (username LIKE ? AND (age &gt; ? OR email IS NULL))</span></span><br><span class="line">    <span class="comment">//lambda表达式内的逻辑优先运算</span></span><br><span class="line">    queryWrapper</span><br><span class="line">        .like(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">        .and(i -&gt; i.gt(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setAge(<span class="number">18</span>);</span><br><span class="line">    user.setEmail(<span class="string">&quot;user@atguigu.com&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(user, queryWrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-5-组装select子句"><a href="#4-2-5-组装select子句" class="headerlink" title="4.2.5 组装select子句"></a>4.2.5 组装select子句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test05</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//查询用户信息的username和age字段</span></span><br><span class="line">    <span class="comment">//SELECT username,age FROM t_user</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.select(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;age&quot;</span>);</span><br><span class="line">    <span class="comment">//selectMaps()返回Map集合列表，通常配合select()使用，避免User对象中没有被查询到的列值为null</span></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(queryWrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-6-实现子查询"><a href="#4-2-6-实现子查询" class="headerlink" title="4.2.6 实现子查询"></a>4.2.6 实现子查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test06</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//查询id小于等于3的用户信息</span></span><br><span class="line">    <span class="comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (id IN (select id from t_user where id &lt;= 3))</span></span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.inSql(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;select id from t_user where id &lt;= 3&quot;</span>);</span><br><span class="line">    List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-UpdateWrapper"><a href="#4-3-UpdateWrapper" class="headerlink" title="4.3 UpdateWrapper"></a>4.3 UpdateWrapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test07</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//将（年龄大于20或邮箱为null）并且用户名中包含有a的用户信息修改</span></span><br><span class="line">    <span class="comment">//组装set子句以及修改条件</span></span><br><span class="line">    UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//lambda表达式内的逻辑优先运算</span></span><br><span class="line">    updateWrapper</span><br><span class="line">        .set(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>)</span><br><span class="line">        .set(<span class="string">&quot;email&quot;</span>, <span class="string">&quot;user@atguigu.com&quot;</span>)</span><br><span class="line">        .like(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">        .and(i -&gt; i.gt(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">    <span class="comment">//这里必须要创建User对象，否则无法应用自动填充。如果没有自动填充，可以设置为null</span></span><br><span class="line">    <span class="comment">//UPDATE t_user SET username=?, age=?,email=? WHERE (username LIKE ? AND (age &gt; ? OR email IS NULL))</span></span><br><span class="line">    <span class="comment">//User user = new User();</span></span><br><span class="line">    <span class="comment">//user.setName(&quot;张三&quot;);</span></span><br><span class="line">    <span class="comment">//int result = userMapper.update(user, updateWrapper);</span></span><br><span class="line">    <span class="comment">//UPDATE t_user SET age=?,email=? WHERE (username LIKE ? AND (age &gt; ? OR email IS NULL))</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-condition"><a href="#4-4-condition" class="headerlink" title="4.4 condition"></a>4.4 condition</h3><blockquote><p>在真正开发的过程中，组装条件是常见的功能，而这些条件数据来源于用户输入，是可选的，因此我们在组装这些条件时，必须先判断用户是否选择了这些条件，若选择则需要组装该条件，若没有选择则一定不能组装，以免影响SQL执行的结果</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test08UseCondition</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//定义查询条件，有可能为null（用户未输入或未选择）</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">24</span>;</span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//StringUtils.isNotBlank()判断某字符串是否不为空且长度不为0且不由空白符(whitespace)构成</span></span><br><span class="line">    queryWrapper</span><br><span class="line">        .like(StringUtils.isNotBlank(username), <span class="string">&quot;username&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">        .ge(ageBegin != <span class="literal">null</span>, <span class="string">&quot;age&quot;</span>, ageBegin)</span><br><span class="line">        .le(ageEnd != <span class="literal">null</span>, <span class="string">&quot;age&quot;</span>, ageEnd);</span><br><span class="line">    <span class="comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (age &gt;= ? AND age &lt;= ?)</span></span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-5-LambdaQueryWrapper"><a href="#4-5-LambdaQueryWrapper" class="headerlink" title="4.5 LambdaQueryWrapper"></a>4.5 LambdaQueryWrapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test09</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//定义查询条件，有可能为null（用户未输入）</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">24</span>;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//避免使用字符串表示字段，防止运行时错误</span></span><br><span class="line">    queryWrapper</span><br><span class="line">        .like(StringUtils.isNotBlank(username), User::getName, username)</span><br><span class="line">        .ge(ageBegin != <span class="literal">null</span>, User::getAge, ageBegin)</span><br><span class="line">        .le(ageEnd != <span class="literal">null</span>, User::getAge, ageEnd);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6-LambdaUpdateWrapper"><a href="#4-6-LambdaUpdateWrapper" class="headerlink" title="4.6 LambdaUpdateWrapper"></a>4.6 LambdaUpdateWrapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test10</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//组装set子句</span></span><br><span class="line">    LambdaUpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">LambdaUpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper</span><br><span class="line">        .set(User::getAge, <span class="number">18</span>)</span><br><span class="line">        .set(User::getEmail, <span class="string">&quot;user@atguigu.com&quot;</span>)</span><br><span class="line">        .like(User::getName, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">        .and(i -&gt; i.lt(User::getAge, <span class="number">24</span>).or().isNull(User::getEmail)); <span class="comment">//lambda表达式内的逻辑优先运算</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(user, updateWrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;受影响的行数：&quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-插件"><a href="#5-插件" class="headerlink" title="5 插件"></a>5 插件</h2><h3 id="5-1-分页插件"><a href="#5-1-分页插件" class="headerlink" title="5.1 分页插件"></a>5.1 分页插件</h3><blockquote><p>MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能</p></blockquote><h4 id="5-1-1-添加配置类"><a href="#5-1-1-添加配置类" class="headerlink" title="5.1.1 添加配置类"></a>5.1.1 添加配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span> <span class="comment">//可以将主类中的注解移到此处</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-2-测试："><a href="#5-1-2-测试：" class="headerlink" title="5.1.2 测试："></a>5.1.2 测试：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPage</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//设置分页参数</span></span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    userMapper.selectPage(page, <span class="literal">null</span>);</span><br><span class="line">    <span class="comment">//获取分页数据</span></span><br><span class="line">    List&lt;User&gt; list = page.getRecords();</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">    System.out.println(<span class="string">&quot;当前页：&quot;</span>+page.getCurrent());</span><br><span class="line">    System.out.println(<span class="string">&quot;每页显示的条数：&quot;</span>+page.getSize());</span><br><span class="line">    System.out.println(<span class="string">&quot;总记录数：&quot;</span>+page.getTotal());</span><br><span class="line">    System.out.println(<span class="string">&quot;总页数：&quot;</span>+page.getPages());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否有上一页：&quot;</span>+page.hasPrevious());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否有下一页：&quot;</span>+page.hasNext());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试结果： User(id&#x3D;1, name&#x3D;Jone, age&#x3D;18, email&#x3D;<a href="mailto:&#116;&#101;&#x73;&#116;&#49;&#x40;&#x62;&#97;&#111;&#x6d;&#105;&#x64;&#x6f;&#117;&#x2e;&#x63;&#x6f;&#109;">&#116;&#101;&#x73;&#116;&#49;&#x40;&#x62;&#97;&#111;&#x6d;&#105;&#x64;&#x6f;&#117;&#x2e;&#x63;&#x6f;&#109;</a>, isDeleted&#x3D;0) User(id&#x3D;2, name&#x3D;Jack, age&#x3D;20, email&#x3D;<a href="mailto:&#x74;&#101;&#115;&#x74;&#50;&#x40;&#98;&#97;&#x6f;&#x6d;&#x69;&#x64;&#111;&#x75;&#46;&#x63;&#x6f;&#x6d;">&#x74;&#101;&#115;&#x74;&#50;&#x40;&#98;&#97;&#x6f;&#x6d;&#x69;&#x64;&#111;&#x75;&#46;&#x63;&#x6f;&#x6d;</a>, isDeleted&#x3D;0) User(id&#x3D;3, name&#x3D;Tom, age&#x3D;28, email&#x3D;<a href="mailto:&#116;&#x65;&#x73;&#x74;&#51;&#x40;&#x62;&#97;&#111;&#x6d;&#x69;&#x64;&#111;&#117;&#x2e;&#99;&#111;&#x6d;">&#116;&#x65;&#x73;&#x74;&#51;&#x40;&#x62;&#97;&#111;&#x6d;&#x69;&#x64;&#111;&#117;&#x2e;&#99;&#111;&#x6d;</a>, isDeleted&#x3D;0) User(id&#x3D;4, name&#x3D;Sandy, age&#x3D;21, email&#x3D;<a href="mailto:&#116;&#101;&#115;&#116;&#52;&#64;&#98;&#x61;&#111;&#x6d;&#x69;&#100;&#x6f;&#117;&#x2e;&#99;&#x6f;&#109;">&#116;&#101;&#115;&#116;&#52;&#64;&#98;&#x61;&#111;&#x6d;&#x69;&#100;&#x6f;&#117;&#x2e;&#99;&#x6f;&#109;</a>, isDeleted&#x3D;0) User(id&#x3D;5, name&#x3D;Billie, age&#x3D;24, email&#x3D;test5@ba omidou.com, isDeleted&#x3D;0) 当前页：1 每页显示的条数：5 总记录数：17 总页数：4 是否有上一 页：false 是否有下一页：true</p></blockquote><h3 id="5-2-xml自定义分页"><a href="#5-2-xml自定义分页" class="headerlink" title="5.2 xml自定义分页"></a>5.2 xml自定义分页</h3><h4 id="5-2-1-UserMapper中定义接口方法"><a href="#5-2-1-UserMapper中定义接口方法" class="headerlink" title="5.2.1 UserMapper中定义接口方法"></a>5.2.1 UserMapper中定义接口方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据年龄查询用户列表，分页显示</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> page 分页对象,xml中可以从里面进行取值,传递参数 Page 即自动分页,必须放在第一位</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> age 年龄</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Page&lt;User&gt; <span class="title function_">selectPageVo</span><span class="params">(<span class="meta">@Param(&quot;page&quot;)</span> Page&lt;User&gt; page, <span class="meta">@Param(&quot;age&quot;)</span> Integer age)</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-2-UserMapper-xml中编写SQL"><a href="#5-2-2-UserMapper-xml中编写SQL" class="headerlink" title="5.2.2 UserMapper.xml中编写SQL"></a>5.2.2 UserMapper.xml中编写SQL</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--SQL片段，记录基础字段--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BaseColumns&quot;</span>&gt;</span>id,username,age,email<span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--IPage&lt;User&gt; selectPageVo(Page&lt;User&gt; page, Integer age);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPageVo&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    SELECT <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BaseColumns&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> FROM t_user WHERE age &gt; #&#123;age&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-2-3-测试"><a href="#5-2-3-测试" class="headerlink" title="5.2.3 测试"></a>5.2.3 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectPageVo</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//设置分页参数</span></span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    userMapper.selectPageVo(page, <span class="number">20</span>);</span><br><span class="line">    <span class="comment">//获取分页数据</span></span><br><span class="line">    List&lt;User&gt; list = page.getRecords();</span><br><span class="line">    list.forEach(System.out::println);</span><br><span class="line">    System.out.println(<span class="string">&quot;当前页：&quot;</span>+page.getCurrent());</span><br><span class="line">    System.out.println(<span class="string">&quot;每页显示的条数：&quot;</span>+page.getSize());</span><br><span class="line">    System.out.println(<span class="string">&quot;总记录数：&quot;</span>+page.getTotal());</span><br><span class="line">    System.out.println(<span class="string">&quot;总页数：&quot;</span>+page.getPages());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否有上一页：&quot;</span>+page.hasPrevious());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否有下一页：&quot;</span>+page.hasNext());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果： User(id&#x3D;3, name&#x3D;Tom, age&#x3D;28, email&#x3D;<a href="mailto:&#116;&#x65;&#x73;&#116;&#51;&#64;&#x62;&#97;&#x6f;&#x6d;&#105;&#x64;&#x6f;&#x75;&#x2e;&#x63;&#x6f;&#x6d;">&#116;&#x65;&#x73;&#116;&#51;&#64;&#x62;&#97;&#x6f;&#x6d;&#105;&#x64;&#x6f;&#x75;&#x2e;&#x63;&#x6f;&#x6d;</a>, isDeleted&#x3D;null) User(id&#x3D;4, name&#x3D;Sandy, age&#x3D;21, email&#x3D;<a href="mailto:&#x74;&#x65;&#115;&#x74;&#52;&#x40;&#98;&#x61;&#x6f;&#x6d;&#105;&#x64;&#111;&#117;&#46;&#99;&#x6f;&#109;">&#x74;&#x65;&#115;&#x74;&#52;&#x40;&#98;&#x61;&#x6f;&#x6d;&#105;&#x64;&#111;&#117;&#46;&#99;&#x6f;&#109;</a>, isDeleted&#x3D;null) User(id&#x3D;5, name&#x3D;Billie, age&#x3D;24, email&#x3D;<a href="mailto:&#116;&#101;&#x73;&#x74;&#x35;&#64;&#98;&#x61;&#x6f;&#x6d;&#105;&#100;&#111;&#x75;&#x2e;&#99;&#x6f;&#109;">&#116;&#101;&#x73;&#x74;&#x35;&#64;&#98;&#x61;&#x6f;&#x6d;&#105;&#100;&#111;&#x75;&#x2e;&#99;&#x6f;&#109;</a>, isDeleted&#x3D;null) User(id&#x3D;8, name&#x3D;ybc1, age&#x3D;21, email&#x3D;null, isDeleted&#x3D;null) User(id&#x3D;9, name&#x3D;ybc2, age&#x3D;22, email&#x3D;null, isDeleted&#x3D;null) 当前 页：1 每页显示的条数：5 总记录数：12 总页数：3 是否有上一页：false 是否有下一页：true</p></blockquote><h3 id="5-3-乐观锁"><a href="#5-3-乐观锁" class="headerlink" title="5.3 乐观锁"></a>5.3 乐观锁</h3><h4 id="5-3-1-乐观锁实现流程"><a href="#5-3-1-乐观锁实现流程" class="headerlink" title="5.3.1 乐观锁实现流程"></a>5.3.1 乐观锁实现流程</h4><blockquote><p>数据库中添加version字段</p><p>取出记录时，获取当前version</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span><span class="keyword">SELECT</span> id,`name`,price,`version` <span class="keyword">FROM</span> product <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>更新时，version + 1，如果where语句中的version版本不对，则更新失败</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span><span class="keyword">UPDATE</span> product <span class="keyword">SET</span> price<span class="operator">=</span>price<span class="operator">+</span><span class="number">50</span>, `version`<span class="operator">=</span>`version` <span class="operator">+</span> <span class="number">1</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">AND</span> `version`<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure></blockquote><h4 id="5-3-2-Mybatis-Plus实现乐观锁"><a href="#5-3-2-Mybatis-Plus实现乐观锁" class="headerlink" title="5.3.2 Mybatis-Plus实现乐观锁"></a>5.3.2 Mybatis-Plus实现乐观锁</h4><ol><li><p>修改实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.mybatisplus.entity;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.Version;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加乐观锁插件配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">    <span class="comment">//添加分页插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line">    <span class="comment">//添加乐观锁插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">OptimisticLockerInnerInterceptor</span>());</span><br><span class="line">    <span class="keyword">return</span> interceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-通用枚举"><a href="#6-通用枚举" class="headerlink" title="6 通用枚举"></a>6 通用枚举</h2><blockquote><p>表中的有些字段值是固定的，例如性别（男或女），此时我们可以使用MyBatis-Plus的通用枚举 来实现</p></blockquote><ol><li><p>数据库表添加字段sex</p></li><li><p>创建通用枚举类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.mp.enums;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SexEnum</span> &#123;</span><br><span class="line">    MALE(<span class="number">1</span>, <span class="string">&quot;男&quot;</span>),</span><br><span class="line">    FEMALE(<span class="number">2</span>, <span class="string">&quot;女&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@EnumValue</span></span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line">    <span class="keyword">private</span> String sexName;</span><br><span class="line">    SexEnum(Integer sex, String sexName) &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        <span class="built_in">this</span>.sexName = sexName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置扫描通用枚举</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">    <span class="attr">configuration:</span></span><br><span class="line">        <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">        <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">    <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">        <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">        <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br><span class="line">        <span class="comment"># 配置MyBatis-Plus的主键策略</span></span><br><span class="line">        <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">    <span class="comment"># 配置扫描通用枚举</span></span><br><span class="line">    <span class="attr">type-enums-package:</span> <span class="string">com.atguigu.mybatisplus.enums</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSexEnum</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setName(<span class="string">&quot;Enum&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    <span class="comment">//设置性别信息为枚举项，会将@EnumValue注解所标识的属性值存储到数据库</span></span><br><span class="line">    user.setSex(SexEnum.MALE);</span><br><span class="line">    <span class="comment">//INSERT INTO t_user ( username, age, sex ) VALUES ( ?, ?, ? )</span></span><br><span class="line">    <span class="comment">//Parameters: Enum(String), 20(Integer), 1(Integer)</span></span><br><span class="line">    userMapper.insert(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="7-代码生成器"><a href="#7-代码生成器" class="headerlink" title="7 代码生成器"></a>7 代码生成器</h2><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>快速生成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastAutoGeneratorTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        FastAutoGenerator.create(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mybatis_plus?characterEncoding=utf-8&amp;userSSL=false&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>)</span><br><span class="line">                .globalConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.author(<span class="string">&quot;atguigu&quot;</span>) <span class="comment">// 设置作者</span></span><br><span class="line">                            <span class="comment">//.enableSwagger() // 开启 swagger 模式</span></span><br><span class="line">                            .fileOverride() <span class="comment">// 覆盖已生成文件</span></span><br><span class="line">                            .outputDir(<span class="string">&quot;D://mybatis_plus&quot;</span>); <span class="comment">// 指定输出目录</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .packageConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.parent(<span class="string">&quot;com.atguigu&quot;</span>) <span class="comment">// 设置父包名</span></span><br><span class="line">                            .moduleName(<span class="string">&quot;mybatisplus&quot;</span>) <span class="comment">// 设置父包模块名</span></span><br><span class="line">                            .pathInfo(Collections.singletonMap(OutputFile.mapperXml, <span class="string">&quot;D://mybatis_plus&quot;</span>));</span><br><span class="line">                    <span class="comment">// 设置mapperXml生成路径</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .strategyConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.addInclude(<span class="string">&quot;t_user&quot;</span>) <span class="comment">// 设置需要生成的表名</span></span><br><span class="line">                            .addTablePrefix(<span class="string">&quot;t_&quot;</span>, <span class="string">&quot;c_&quot;</span>); <span class="comment">// 设置过滤表前缀</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .templateEngine(<span class="keyword">new</span> <span class="title class_">FreemarkerTemplateEngine</span>()) <span class="comment">// 使用Freemarker 引擎模板，默认的是Velocity引擎模板</span></span><br><span class="line">                .execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="8-多数据源"><a href="#8-多数据源" class="headerlink" title="8 多数据源"></a>8 多数据源</h2><blockquote><p>适用于多种场景：纯粹多库、 读写分离、 一主多从、 混合模式等 </p><p>目前我们就来模拟一个纯粹多库的一个场景，其他场景类似 </p><p>场景说明： 我们创建两个库，分别为：mybatis_plus（以前的库不动）与mybatis_plus_1（新建），将mybatis_plus库的product表移动到mybatis_plus_1库，这样每个库一张表，通过一个测试用例 分别获取用户数据与商品数据，如果获取到说明多库模拟成功</p></blockquote><ol><li><p>创建数据库及表</p><blockquote><p>创建数据库mybatis_plus_1和表product</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `mybatis_plus_1` <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8mb4 */</span>;</span><br><span class="line">use `mybatis_plus_1`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product</span><br><span class="line">(</span><br><span class="line">    id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">    price <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;价格&#x27;</span>,</span><br><span class="line">    version <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;乐观锁版本号&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>添加测试数据</p></blockquote> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> product (id, NAME, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;外星人笔记本&#x27;</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><blockquote><p>删除mybatis_plus库product表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mybatis_plus;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> product;</span><br></pre></td></tr></table></figure></li><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置多数据源</p><blockquote><p>说明：注释掉之前的数据库连接，添加新配置</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="comment"># 配置数据源信息</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">dynamic:</span></span><br><span class="line">            <span class="comment"># 设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class="line">            <span class="attr">primary:</span> <span class="string">master</span></span><br><span class="line">            <span class="comment"># 严格匹配数据源,默认false.true未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class="line">            <span class="attr">strict:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">datasource:</span></span><br><span class="line">                <span class="attr">master:</span></span><br><span class="line">                    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line">                    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">                    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">                    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">                <span class="attr">slave_1:</span></span><br><span class="line">                    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus_1?characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line">                    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">                    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">                    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建用户service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DS(&quot;master&quot;)</span> <span class="comment">//指定所操作的数据源</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="keyword">implements</span></span><br><span class="line"><span class="title class_">UserService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建商品service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Product&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DS(&quot;slave_1&quot;)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt;</span><br><span class="line"><span class="keyword">implements</span> <span class="title class_">ProductService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDynamicDataSource</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(userService.getById(<span class="number">1L</span>));</span><br><span class="line">    System.out.println(productService.getById(<span class="number">1L</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果： </p><p>1、都能顺利获取对象，则测试成功 </p><p>2、如果我们实现读写分离，将写操作方法加上主库数据源，读操作方法加上从库数据源，自动切换，是不是就能实现读写分离？</p></blockquote></li></ol><h2 id="9-MyBatisX插件"><a href="#9-MyBatisX插件" class="headerlink" title="9 MyBatisX插件"></a>9 MyBatisX插件</h2><blockquote><p>MyBatis-Plus为我们提供了强大的mapper和service模板，能够大大的提高开发效率</p><p>但是在真正开发过程中，MyBatis-Plus并不能为我们解决所有问题，例如一些复杂的SQL，多表 联查，我们就需要自己去编写代码和SQL语句，我们该如何快速的解决这个问题呢，这个时候可 以使用MyBatisX插件</p><p>MyBatisX一款基于 IDEA 的快速开发插件，为效率而生。</p></blockquote><p>MyBatisX插件用法：<a href="https://baomidou.com/pages/ba5b24/">https://baomidou.com/pages/ba5b24/</a></p><p><img src="/../images/SSM+Mybatis-Plus/%E5%88%86%E5%89%B2%E7%BA%BF.png" alt="分割线"></p><h1 id="用到的配置文件"><a href="#用到的配置文件" class="headerlink" title="用到的配置文件"></a>用到的配置文件</h1><h2 id="jdbc-properties"><a href="#jdbc-properties" class="headerlink" title="jdbc-properties"></a>jdbc-properties</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">lx*0+0-0</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatisdemo</span></span><br><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><h2 id="spring-tx"><a href="#spring-tx" class="headerlink" title="spring-tx"></a>spring-tx</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxuan.spring&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--导入外部属性文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;jdbc.properties&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置 JdbcTemplate--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;druidDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;druidDataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">开启事务的注解驱动</span></span><br><span class="line"><span class="comment">通过注解@Transactional所标识的方法或标识的类中所有的方法，都会被事务管理器管理事务</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- transaction-manager属性的默认值是transactionManager，如果事务管理器bean的id正好就</span></span><br><span class="line"><span class="comment">是这个默认值，则可以省略这个属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="springmvc-config"><a href="#springmvc-config" class="headerlink" title="springmvc-config"></a>springmvc-config</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lxuan&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;order&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateEngine&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图前缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateMode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HTML5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">配置默认的servlet处理静态资源</span></span><br><span class="line"><span class="comment">当前工程的web.xmL配置的前端控制Dispatcherservlet的url-pattern.是/</span></span><br><span class="line"><span class="comment">tomcat的web.xmL配置Defaultservlet的url-pattern也是/</span></span><br><span class="line"><span class="comment">此时，浏览器发送的清求会优先被如Dispatcherservlet进行处理，但是Dispatcherservlet无法处理静态资源</span></span><br><span class="line"><span class="comment">若配置了&lt;mvc:default-servlet-handler/&gt;,此时浏览器发送的所有请求都会被如Defaultservlet处理</span></span><br><span class="line"><span class="comment">若配置了&lt;mvc:default-servlet-handler/&gt;和&lt;mvc:annotation-driven/&gt;</span></span><br><span class="line"><span class="comment">浏览器发送的请求会先被Dispatcherservlet处理，无法处理在交给Defaultservlet处理</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--开启mvc的注解驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置视图控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--编码过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--设置处理请求方式的过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--springmvc前端控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="mybayis-config"><a href="#mybayis-config" class="headerlink" title="mybayis-config"></a>mybayis-config</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">MyBatis核心配置文件中，标签的顺序：</span></span><br><span class="line"><span class="comment">properties?,settings?,typeAliases?,typeHandlers?,</span></span><br><span class="line"><span class="comment">objectFactory?,objectWrapperFactory?,reflectorFactory?,</span></span><br><span class="line"><span class="comment">plugins?,environments?,databaseIdProvider?,mappers?</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--settings--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将下划线映射为驼峰命名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启延迟加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--按需加载：默认为false，无论延迟加载是否开启都会执行分布查询的所有查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;aggressiveLazyLoading&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置类型别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&lt;实体类所在的包&gt;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置连接数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置连接数据库的驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置连接数据库的连接地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置连接数据库的用户名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置连接数据库的密码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入映射文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;mapper resource=&quot;com/lxuan/mappers/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;&lt;映射文件所在的包&gt;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="mybatis-mapper"><a href="#mybatis-mapper" class="headerlink" title="mybatis-mapper"></a>mybatis-mapper</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;&lt;映射文件所在的包&gt;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> &gt;</span></span><br><span class="line">insert into user values (Default,&#x27;沐洹&#x27;,&#x27;lx*0+0-0&#x27;,&#x27;21&#x27;,&#x27;男&#x27;,&#x27;1274872144@qq.com&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">select * from user;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="user-list-html"><a href="#user-list-html" class="headerlink" title="user_list.html"></a>user_list.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>user_list<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.2/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">integrity</span>=<span class="string">&quot;sha512-CpIKUSyh9QX2+zSdfGP+eWLx23C8Dj9/XmHjZY2uDtfkdLGo0uY12jgcnkX9vXOgYajEKb/jiw67EYm+kBf+6g==&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span> <span class="attr">referrerpolicy</span>=<span class="string">&quot;no-referrer&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;p style=&quot;text-align: center&quot;&gt;user_list&lt;/p&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table able-hover&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;tr colspan=&quot;7&quot;&gt;user_list&lt;/tr&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;col-md-12&quot;</span>&gt;</span>user_list<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>password<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>age<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>options(<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-info&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/to/add&#125;&quot;</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span>)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;user,status : $&#123;pageInfo.list&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;status.count + (pageInfo.pageNum - 1) * 10&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.userName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.userPassword&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.userAge&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.userGender&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.userEmail&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-warning&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/user/&#x27; + $&#123;user.userId&#125;&#125;&quot;</span>&gt;</span>Update<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/user/&#x27; + $&#123;user.userId&#125;&#125;&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;pageInfo.hasPreviousPage&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;1&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;pageInfo.hasPreviousPage&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;pageInfo.prePage&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:each</span>=<span class="string">&quot;pageNum : $&#123;pageInfo.navigatepageNums&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-link&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;pageNum&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;pageNum&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;pageInfo.hasNextPage&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;pageInfo.nextPage&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;pageInfo.hasNextPage&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;pageInfo.pages&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_method&quot;</span> <span class="attr">value</span>=<span class="string">&quot;delete&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> spring </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}.copyright{  mix-blend-mode: difference;}#workboard {  mix-blend-mode: difference;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p><font size='5px'>既然你<font size='20px'>诚心诚意</font>的点进来了！那我就<font size='20px'>大发慈悲</font>的告诉你！</font></p><p><font size='5px'>自<font size='20px'>盘古</font>开天辟地、<font size='20px'>女娲</font>补天造人、<font size='20px'>唐僧</font>西天取经、<font size='20px'>牛顿</font>万有引力、<font size='20px'>达尔文</font>猿猴进化、<font size='20px'>孟德尔</font>豌豆杂交、<font size='20px'>希特勒</font>世界大战、<font size='20px'>爱因斯坦</font>相对论、<font size='20px'>微软</font>海内存知己、<font size='20px'>马云</font>对钱不感兴趣以来，历史上<strong>最伟大</strong>的<font size='20px'><strong>作家、文学家、批评家、艺术家、哲学家、历史学家、心理学家、推理学家、逻辑学家、社会活动家</strong></font></font></p><p><font color='grey' size='1px' opacity=0.5>以上都不是我</font></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/flash.css"/>
      <url>/css/flash.css</url>
      
        <content type="html"><![CDATA[.pace {-webkit-pointer-events: none;pointer-events: none;-webkit-user-select: none;-moz-user-select: none;user-select: none;}.pace-inactive {display: none;}.pace .pace-progress {background: #29d;position: fixed;z-index: 2000;top: 0;right: 100%;width: 100%;height: 2px;}.pace .pace-progress-inner {display: block;position: absolute;right: 0px;width: 100px;height: 100%;box-shadow: 0 0 10px #29d, 0 0 5px #29d;opacity: 1.0;-webkit-transform: rotate(3deg) translate(0px, -4px);-moz-transform: rotate(3deg) translate(0px, -4px);-ms-transform: rotate(3deg) translate(0px, -4px);-o-transform: rotate(3deg) translate(0px, -4px);transform: rotate(3deg) translate(0px, -4px);}.pace .pace-activity {display: block;position: fixed;z-index: 2000;top: 15px;right: 15px;width: 14px;height: 14px;border: solid 2px transparent;border-top-color: #29d;border-left-color: #29d;border-radius: 10px;-webkit-animation: pace-spinner 400ms linear infinite;-moz-animation: pace-spinner 400ms linear infinite;-ms-animation: pace-spinner 400ms linear infinite;-o-animation: pace-spinner 400ms linear infinite;animation: pace-spinner 400ms linear infinite;}@-webkit-keyframes pace-spinner {0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }}@-moz-keyframes pace-spinner {0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }}@-o-keyframes pace-spinner {0% { -o-transform: rotate(0deg); transform: rotate(0deg); }100% { -o-transform: rotate(360deg); transform: rotate(360deg); }}@-ms-keyframes pace-spinner {0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }}@keyframes pace-spinner {0% { transform: rotate(0deg); transform: rotate(0deg); }100% { transform: rotate(360deg); transform: rotate(360deg); }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.css"/>
      <url>/css/runtime.css</url>
      
        <content type="html"><![CDATA[/*电子钟字体*/@font-face {  font-family: 'UnidreamLED';  src: url("https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf");  font-display: swap;}div#runtime {  width: 180px;  margin: auto;  color: #fff;  padding-inline: 5px;  border-radius: 10px;  background-color: rgba(0,0,0,0.7);  font-family: 'UnidreamLED';}[data-theme="dark"] div#runtime {  color: #28b4c8;  box-shadow: 0 0 5px rgba(28,69,218,0.71);  animation: flashlight 1s linear infinite alternate;}/*悬停显示徽标提示语*/a.github-badge:hover:before {  position: fixed;  width: fit-content;  margin: auto;  left: 0;  right: 0;  /* top: 10%; */  bottom: 10%;  border-radius: 10px;  text-align: center;  z-index: 100;  content: attr(data-title);  font-size: 20px;  color: #fff;  padding: 5px;  background-color: var(--text-bg-hover);}[data-theme=dark] a.github-badge:hover:before {  background-color: rgba(18,18,18,0.8);}@-moz-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@-webkit-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@-o-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/busuanzi2.3.0.mini.js"/>
      <url>/js/busuanzi2.3.0.mini.js</url>
      
        <content type="html"><![CDATA[var bszCaller,bszTag;!function(){var c,d,e,a=!1,b=[];ready=function(c){return a||"interactive"===document.readyState||"complete"===document.readyState?c.call(document):b.push(function(){return c.call(this)}),this},d=function(){for(var a=0,c=b.length;c>a;a++)b[a].apply(document);b=[]},e=function(){a||(a=!0,d.call(window),document.removeEventListener?document.removeEventListener("DOMContentLoaded",e,!1):document.attachEvent&&(document.detachEvent("onreadystatechange",e),window==window.top&&(clearInterval(c),c=null)))},document.addEventListener?document.addEventListener("DOMContentLoaded",e,!1):document.attachEvent&&(document.attachEvent("onreadystatechange",function(){/loaded|complete/.test(document.readyState)&&e()}),window==window.top&&(c=setInterval(function(){try{a||document.documentElement.doScroll("left")}catch(b){return}e()},5)))}(),bszCaller={fetch:function(a,b){var c="BusuanziCallback_"+Math.floor(1099511627776*Math.random());window[c]=this.evalCall(b),a=a.replace("=BusuanziCallback","="+c),scriptTag=document.createElement("SCRIPT"),scriptTag.type="text/javascript",scriptTag.defer=!0,scriptTag.src=a,document.getElementsByTagName("HEAD")[0].appendChild(scriptTag)},evalCall:function(a){return function(b){ready(function(){try{a(b),scriptTag.parentElement.removeChild(scriptTag)}catch(c){bszTag.hides()}})}}},bszCaller.fetch("//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback",function(a){bszTag.texts(a),bszTag.shows()}),bszTag={bszs:["site_pv","page_pv","site_uv"],texts:function(a){this.bszs.map(function(b){var c=document.getElementById("busuanzi_value_"+b);c&&(c.innerHTML=a[b])})},hides:function(){this.bszs.map(function(a){var b=document.getElementById("busuanzi_container_"+a);b&&(b.style.display="none")})},shows:function(){this.bszs.map(function(a){var b=document.getElementById("busuanzi_container_"+a);b&&(b.style.display="inline")})}};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/canvas-nest.min.js"/>
      <url>/js/canvas-nest.min.js</url>
      
        <content type="html"><![CDATA[!function(){const e=document.getElementById("canvas_nest");if("false"===e.getAttribute("mobile")&&/Android|webOS|iPhone|iPod|iPad|BlackBerry/i.test(navigator.userAgent))return;function n(e,n,t){return e.getAttribute(n)||t}function t(){u=i.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,d=i.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function o(){c.clearRect(0,0,u,d);const e=[s].concat(x);let n,t,i,l,r,w;x.forEach((function(o){for(o.x+=o.xa,o.y+=o.ya,o.xa*=o.x>u||o.x<0?-1:1,o.ya*=o.y>d||o.y<0?-1:1,c.fillRect(o.x-.5,o.y-.5,1,1),t=0;t<e.length;t++)n=e[t],o!==n&&null!==n.x&&null!==n.y&&(l=o.x-n.x,r=o.y-n.y,w=l*l+r*r,w<n.max&&(n===s&&w>=n.max/2&&(o.x-=.03*l,o.y-=.03*r),i=(n.max-w)/n.max,c.beginPath(),c.lineWidth=i/2,c.strokeStyle="rgba("+a.c+","+(i+.2)+")",c.moveTo(o.x,o.y),c.lineTo(n.x,n.y),c.stroke()));e.splice(e.indexOf(o),1)})),m(o)}var i=document.createElement("canvas"),a=function(){const t=e;return{z:n(t,"zIndex",-1),o:n(t,"opacity",.5),c:n(t,"color","0,0,0"),n:n(t,"count",99)}}(),c=i.getContext("2d");let u,d;var m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1e3/45)};const l=Math.random;var r,s={x:null,y:null,max:2e4};i.style.cssText="position:fixed;top:0;left:0;z-index:"+a.z+";opacity:"+a.o,(r="body",document.getElementsByTagName(r))[0].appendChild(i),t(),window.onresize=t,window.onmousemove=function(e){e=e||window.event,s.x=e.clientX,s.y=e.clientY},window.onmouseout=function(){s.x=null,s.y=null};for(var x=[],w=0;a.n>w;w++){const e=l()*u,n=l()*d,t=2*l()-1,o=2*l()-1;x.push({x:e,y:n,xa:t,ya:o,max:6e3})}setTimeout((function(){o()}),100)}();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date("01/23/2024 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date("01/23/2024 00:00:00"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s="0"+s);var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l="0"+l);var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);let c="";c=s<18&&s>=9?`<div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`:`<div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<div id="aplayer-oSEOhviA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4895239160" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="false" data-listmaxheight="340px" data-preload="auto" data-theme="#e3f2f5" data-volume="0.4" mutex="true"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.1_1.html"/>
      <url>/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.1_1.html</url>
      
        <content type="html"><![CDATA[<p>&#x3D;&#x3D;⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠&#x3D;&#x3D;</p><h1 id="Text-Elements"><a href="#Text-Elements" class="headerlink" title="Text Elements"></a>Text Elements</h1><p>a ^wRC9FEZf</p><p>b ^9M2ewaoM</p><p>c ^j3xb1NG6</p><p>d ^m5qXi6JA</p><p>e ^GJL2B2Wf</p><p>f ^aVGr9jcl</p><p>%%</p><h1 id="Drawing"><a href="#Drawing" class="headerlink" title="Drawing"></a>Drawing</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATL</span><br><span class="line"></span><br><span class="line">ZMzYBXUtiRoIACyhQ4zZAHoFWPETKUAdNjYBbGnQT4EOhByjNuAbXBhQYe9Hjj0p</span><br><span class="line"></span><br><span class="line">BNii4OAcyP77kRhZ2LjQeAAYAdn4HQNZOADlOMW4ATgBGMLSAViyUrIBmaMhCZgA</span><br><span class="line"></span><br><span class="line">RQwQoBGJuADMCZgQiiBJuCABFAGUAIVwAWXyhNgAOKEkAFnaACQBHPvaAaQANAGs</span><br><span class="line"></span><br><span class="line">AFT8HWsJ8fE7YXwlJXGxJESRm5ihSNhWEAHUSMe40y+vbhH2YQ/RBNU3IDchF5JB</span><br><span class="line"></span><br><span class="line">wEMwLGgws02HAToRYC8wtCbJBPD5nCj/BBMNwALRpDIaCJZZowfFpHgpN43O4AYT</span><br><span class="line"></span><br><span class="line">Y+DYpDaAGJkRywgCIAAjE4rLxAjjEBlMlkSa6eZhw1xmbkUJ6SbgANixDkkCEIIK</span><br><span class="line"></span><br><span class="line">gLzSysuCGqKrC42VaXGOWGzUFwjgAEliJDUJYALo0j6dY6kOBgiFtZheuDcnnCYU</span><br><span class="line"></span><br><span class="line">AUSMJjMTus/lsqIcsEQbSqmB1RQcrQkKT6PAQFFwbD6EATAF9UW7URAhHBiLgqjU</span><br><span class="line"></span><br><span class="line">0GkIpEeAUUmFhhFlXwq0QOCtuBwhLtmkzsHdG6h6vhGjZS9E7ImnG1XO50b5mrFg</span><br><span class="line"></span><br><span class="line">tweHut0w4hxEhxkk3KVlhj3zYUqyVykYG3UGk071OIAB5SQ8ABqACsAE18DDKYAD</span><br><span class="line"></span><br><span class="line">FShgAAlPoANqH9ximeI/25bZdi+H4pBOM5XG5K5aQeRUXndO50OcCA/laZogRBX0</span><br><span class="line"></span><br><span class="line">nTVSBYXhREm2RZoN0xZpcTQPEsjCYleMpcIW3yC8yQpHhhmJFJpK7CIUipZUu1JK</span><br><span class="line"></span><br><span class="line">s8I+UVmTZTlkWDfkbSEYV1PFdBJQ4aVcFldMqwVYhnjQVVmg1LVpF1fUVMNKceHN</span><br><span class="line"></span><br><span class="line">K9hj1XtsT0+1HSsStsVUkjA1o/1A2DUNiAjYxTHMKwEyXbEkzI1NLLjYp3z/fJMB</span><br><span class="line"></span><br><span class="line">5NJ4gAcWVEs43LfwQocGs6yfJsWwiNt8g7LtlWU7F+0HNBh1HPs2AnI00BnOd7AX</span><br><span class="line"></span><br><span class="line">GxUscZMJDXDxvE3Ktt04Xd90Ww9ghPM9eDCNs0mGaTlWpO8ygqerpxfZos3QAAFL</span><br><span class="line"></span><br><span class="line">xDVqe57jga6wXGFYeFIdplQAj8vDtFCdj2A4yOOU5zlw947keGylSbYjPmB/1GUo</span><br><span class="line"></span><br><span class="line">qtqNBcE6JhOFsARckWPoiB2O4AmuNQFINDbMTuMpI7QshhBDM0rSdInPSDMZDSJX</span><br><span class="line"></span><br><span class="line">IUyZUS+VCLsgnHO1JEojcobUDSdIIilqWdutIFApjaqBHpz1zJ9DGoo1mL9LiyNE</span><br><span class="line"></span><br><span class="line">pjFKE0gdKUywLK4xad8dCyGYlkIZUACkAEFyv8Sr7BV6ta3rCXm1bdtOwiEOx0IA</span><br><span class="line"></span><br><span class="line">chxHfAxwGydn1nBB50XKszZmtw5oxbklpCXg9QPIIEiSZx8m7LtIiyV5jofSoJZG</span><br><span class="line"></span><br><span class="line">19sSuiBiCmTpMA4NY1hSBYEDSAB9P8lmINYlhmfAViWAG0MRo4sPB+HodsyX4dIp</span><br><span class="line"></span><br><span class="line">H/io4QaK1qEsaYvHJdYqsie3qtScOimOocPeCQkjRhg5PaRLCLJTWGK0VPpxmJHZ</span><br><span class="line"></span><br><span class="line">Znmj5VmhRFBzIy0BuZmQsvzGGxoHKahFixMWoV3Iql4k1Hg+QwiuX8orB0ytl4RS</span><br><span class="line"></span><br><span class="line">3r8aKv9YrxSjElNAsZ/CpWXNNYyFsASZnfMVJ2AAZHg3QeD3FqO7MaFZmi1T9lOA</span><br><span class="line"></span><br><span class="line">OTUg6yVpg4Lqkc+qdVjrXF8ScJopxXGndc80LhrQLjnNs4x85Hk2s4OSwx8gFBar</span><br><span class="line"></span><br><span class="line">eBuJ1HyyITpdd8ixmALDCGsAoAowxOyyJ0LIpR4gcDxCsMqzRUJA2+CDWeOF54Cy</span><br><span class="line"></span><br><span class="line">Xu/fCK8JAURqOvYE6M/TH2xIxHGzF94EyPqgEm+JeIaHyOMaSJJLy5BLhfSAV9FJ</span><br><span class="line"></span><br><span class="line">SRkiHeSKRFIknhp/dA39OQswFAA5pICpS8zlM0ayi97JVmFs5JslNxYeWRDwC04w</span><br><span class="line"></span><br><span class="line">fLaKrAFbBwVcEa0ijEwhVYQx6xIYbZKcYqGmyUbQtM9CcptFwD+YqpAUh/mwPgbh</span><br><span class="line"></span><br><span class="line">YBPZgG9vws6QjmqtTkgTCRPUo4x0GlOOu8j7CTVTi4dORMdE7jQCJMRAR1qF1PM4</span><br><span class="line"></span><br><span class="line">QSXY9qZHKS0cxNdAUXTfG0UChBQIpF7gBOkCAWzMJWABHkvd8DEDSMwl22BJ6BIw</span><br><span class="line"></span><br><span class="line">qDbCai6b4QXrDCJXKPTT1+MjOJqMN6JMxlWVJuMkSZNUcTTiuS+I5GRLM4YElRJV</span><br><span class="line"></span><br><span class="line">ivntSS4wOTTPGOadB4z+X0iAUzNpv9dKdLNVzHp5k+b9PCUM7EIydRoBSPMhB/sw</span><br><span class="line"></span><br><span class="line">jySpPkTynqHCLKCuQ72YVPh4KSQQnWRDtkG2jHsyhJspoZToRmM5EgKCQTpCkUCY</span><br><span class="line"></span><br><span class="line">YABaXCyy8KrK8/2jUPmdjvt88O3VUC9Wjv1AF8dRqPOTmlI50A03qKPCqKFiKtr1</span><br><span class="line"></span><br><span class="line">PGDwOSBRLpYrOnXaxbQs05rzYWll0T0DsrnpEj4PKiJrpIoK8iwruRozWdkneaS9</span><br><span class="line"></span><br><span class="line">4ZFlZnZJDhSZ4gtBoZVJpX7quNZfCkhiNC6qmeMA1uqewYvDV01pHJ2ls0AWKFMo</span><br><span class="line"></span><br><span class="line">DemW0gAM3lvFoFOTdagYYgaBCIPdV+xqMsUMQGDTgrdEbVn4PIhs7EWzwzxrIc6F</span><br><span class="line"></span><br><span class="line">5vs3kVpEdWsOEdflSPETInFViqy1E4FATohAABezhlTKg0EJ0TYmxPwK2Nx0CuAd</span><br><span class="line"></span><br><span class="line">A7FPc0TK5z92UDWHQiQuAdKNH7M4XIimLYuyIF4HOEAxBmCYFnJgUBCCqEM1qEzc</span><br><span class="line"></span><br><span class="line">niDEAWtibQZhcDhyYA6fFhLiWkvJWESl1LaX0sZcymEpAtThwIGpk5Gn3bjRBYom</span><br><span class="line"></span><br><span class="line">hXaTn9pzm/bE2c9GpGbAUZU4w5LjurpO3FDd3w5jzAWIsi6d0rtCfhjdcN8NLt3W</span><br><span class="line"></span><br><span class="line">vUVCTD0Eyleks9bE5WXsgNejIWR+JU1QNfbD/6bUtK0lyS1/9YpdJMmAh1Vlwlwe</span><br><span class="line"></span><br><span class="line">GTA0Z+8MEOEaP7Euuq0j5BEth3DyyWuRqdMRmNmziEUbw9iMtgi6MtWDj2RjdaG3</span><br><span class="line"></span><br><span class="line">/LjsNMrUmzC8YE9wN9p3wcQ4h9hrjZgZNyfwAplO6n0A8hUxQWLiHeRacMJ57gER</span><br><span class="line"></span><br><span class="line">sOZTs8ZtoZmqgsnztZ2zRmHMkGc5yhwbmPCedIN5iQXRegDCGKMCY0w5iLFWBsCL</span><br><span class="line"></span><br><span class="line">UWOAxeR1j4F8YO0paU+l7g2HstFxeHuNVszmzFdOpYxo06JB5QKkVUqtWgltHq/T</span><br><span class="line"></span><br><span class="line">1W3LwmVxNQjI3MS93xM3lG7r2NpX436xeo9J98S3pJJkPckQwgiWfRU8S+RqkpFE</span><br><span class="line"></span><br><span class="line">QpJSTSZsQEA9pBbHSlsx5W5BiBi9Nsuu24hjIe3UMS0UtMxSeRMtBqwSGqjKzvSH</span><br><span class="line"></span><br><span class="line">tu96XW5GEoJtDXwmj5bA7vbahin59a/lNr++dDj2IYc8f484MHkPx8FP8dJ2T8nN</span><br><span class="line"></span><br><span class="line">1pTF+F1GqmF/Y503jgnBnqck8ShZinNmCBE5p05lzDPuMebBCz98X5fyAWAmBCC0</span><br><span class="line"></span><br><span class="line">FYLwUQshIXXhov4AxyThL7bqGprSz2tCqgPLgiseIrk2B6vkIdAUqYpmBOprvXAw</span><br><span class="line"></span><br><span class="line">m0LbPbI7K7IbmyiEqbuRPTE1nyvtmrDurEvumKl1sei7hkm7j8Dkk2OMOfONpNtH</span><br><span class="line"></span><br><span class="line">mBl/HNsBtaswcZBBvan0utpAmgBnuqFnqkJJnnlOMMFkN2FkCOvkCXpABdk3ldoR</span><br><span class="line"></span><br><span class="line">lGjXkGLGvXqQk9jVC3q9m3p8qHH2LWpIo2tIs2v9gPoDsPiDmgN2BoPJGgt2HYZE</span><br><span class="line"></span><br><span class="line">IdH5BYXDrPs1vPnFugCKtiOQOjmLj4Q4HyNprjnZLIallAIftvuZuTuopTgflvhI</span><br><span class="line"></span><br><span class="line">I5nTtyIzufl5u+LdPdI9M9K9O9J9N9L9P9G/h/l/hIDUBLqCp2jLoActGgCARojl</span><br><span class="line"></span><br><span class="line">vwR6gHikCJLAcUPAexlrnihIEwqwuwpwhgcEmDA1lbngZbgQVEkQXbh1g7hKiks7</span><br><span class="line"></span><br><span class="line">r1gfNiFkjQagPjvQZqiHrfPfIYiNi/OEdNhwbHqwQniBstlweAo6nwagAIZAK6sI</span><br><span class="line"></span><br><span class="line">QaBLOkCaOEPtOdmXpoWbh6NdtrLXmofrA3pRq6M3nVK3sIu3rUl9kYb9ggVPkDiP</span><br><span class="line"></span><br><span class="line">njsJo4Q4agk4fJAiVAG4QjnPomGLtgX4WUegNgcETjmCCqOEYTokegKTrvnEfvvg</span><br><span class="line"></span><br><span class="line">FEUkbTifpAGkczqzt4S3G3B3F3D3P3IPMPKPOPNyMyMLqLl4RgD/golLv/lBgwKA</span><br><span class="line"></span><br><span class="line">XLulk0RsXuBIZkOMB0ZiiVvCb0egBclcjcncsMcblgRDObrcZMT8dujbkKu1r4aQ</span><br><span class="line"></span><br><span class="line">fgk7rvDKlQRxJ7txLegUkUpaKUo0tsdxMqKHnJDUnJJHgGVbgBmcZslaknicSntw</span><br><span class="line"></span><br><span class="line">QqTBtwPcVIEIeeH+mhrto/CHBEOEfIRXooVXkRgGHdqRg9sCd8T7OCToZCZ8ukDC</span><br><span class="line"></span><br><span class="line">cxsYaxqYf3j0YPtxsDs4B2LYT6v2R2IOT6i4ZAEPjiYjp4ZjlwlRMvlKdObGSERS</span><br><span class="line"></span><br><span class="line">WgHfPpmmMybSTvrEVllZoyeuRAMkWyaZmfpyTYgsHYg4k4l4C4m4h4l4j4n4pKpF</span><br><span class="line"></span><br><span class="line">u/iLp/mLkWjws8vwITHAHAPsH7NwEuNABqCYG0EZs5NEAwIQPmL0ItnrABrUAhYh</span><br><span class="line"></span><br><span class="line">ZsKZiIBZHaFUDoPsPhNGT/DYChaQGhRhTBYnnBcnlcWtgzqhYlOhcYASlPHaZhKM</span><br><span class="line"></span><br><span class="line">fTvhYRcYFheuhbhBdgFRWYDRZhYQQxcQVxTxVAHxZBE6Y7sJQRdRRhR+Esaeisey</span><br><span class="line"></span><br><span class="line">SJXxaBNPvDhOUpdJbxRhapYiVYdtFJaxToBjnuUYLUJbCxTJWxWrH8esuWZpUZX+</span><br><span class="line"></span><br><span class="line">aQJEQRWwBQBqLgFOD9nhdxVpaJRhWGMKC7K5e5QgJ5eciFchb5UZcwp5uZOxeFEo</span><br><span class="line"></span><br><span class="line">TdgAshYKCQN2bCT5UAtdAQJUFUABZVIlhAKhOCAVSAKWEAA=</span><br></pre></td></tr></table></figure><p>%%</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.1_2.html"/>
      <url>/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.1_2.html</url>
      
        <content type="html"><![CDATA[<p>&#x3D;&#x3D;⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠&#x3D;&#x3D;</p><h1 id="Text-Elements"><a href="#Text-Elements" class="headerlink" title="Text Elements"></a>Text Elements</h1><p>a ^k1F9a1Qm</p><p>b ^KIey7uRy</p><p>a ^j4o3vFHv</p><p>b ^s5XaRR2e</p><p>a ^sN711qiE</p><p>b ^pw21eH4m</p><p>c ^Z5iLlVAU</p><p>d ^UaWAbqGp</p><p>1 ^KhRTQ8wl</p><p>2 ^kZnJ2SYX</p><p>3 ^IUBLZH64</p><p>%%</p><h1 id="Drawing"><a href="#Drawing" class="headerlink" title="Drawing"></a>Drawing</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><span class="line">N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATL</span><br><span class="line"></span><br><span class="line">ZMzYBXUtiRoIACyhQ4zZAHoFWPETKUAdNjYBbGnQT4EOhByjNuAbXBhQYe9Hjj0p</span><br><span class="line"></span><br><span class="line">BNii4OAcyP77kRhZ2LjQeAGYABn4HQNZOADlOMW4eCIA2MJ4eAEZssIB2aMhCZgA</span><br><span class="line"></span><br><span class="line">RQwQoBGJuADMCZgQiiBJuCABhACkYAC0AVQBpAElJACs0gFEAawB5ABYAMQAFJeJ</span><br><span class="line"></span><br><span class="line">OgE4ARz8HWsJ8fABlWF8JSVxsSREkZuYoUjYphAB1EihJbmzb+8eEY5hTuhBGodp</span><br><span class="line"></span><br><span class="line">AHkIvJIOAhmBY0FEbJA2HALoRYJ8Igj/BBPD5nFiHJhuABaMKRDS5CIADgArGFsu</span><br><span class="line"></span><br><span class="line">sIuF8usac0YCkchoqfk5hE5nzsjw5gU0t8Hk92mx8GxSG0AMSYpURUEQABGFymXn</span><br><span class="line"></span><br><span class="line">BHGIUplcok908zBRrjMqoobw+aBpbMRUgQhEhUG4VLFDsa1U+jJp+Sp6zS6ypzW1</span><br><span class="line"></span><br><span class="line">wjgQ2IcNQlgAuuLfodzqQ4NDYW1mMm4Kq1cJdRMjCYzNHrP5bIiHLBEG0qphXUUH</span><br><span class="line"></span><br><span class="line">K0JFNsgt1rhsgBFPQVgC+iPjDqEcGIuCqNTQ2XyEXyPDp6zyaTSfAdRA4U24HCEB</span><br><span class="line"></span><br><span class="line">2aMuwTwnqHq+EaNl70TslacbVc7lxvmasWC3DCPMfTDiHESHGSaDmNLmRl+V5ZoS</span><br><span class="line"></span><br><span class="line">nKIxxzqBomgdJt0BgbAlkkHpNgWABZOAKDgSR8B6BAejCHQelwNVVT2A5/kBKQLi</span><br><span class="line"></span><br><span class="line">uVxVTuCUXmtT4EyeSjnAgYFWmacFITTaMCSRFFsDRDlJ0xZp73xZoiTQYkeHyGkK</span><br><span class="line"></span><br><span class="line">WyQC5nyWdsipMI/TCdlOR4DR0nWIC0hpBSVKpOZWIQfVZQVZVMRzTUwyEXVbMNdB</span><br><span class="line"></span><br><span class="line">jQ4U1cHNesHStYh3m4ACND5TFhTmFT0jnZpJCdF0QrmMKlUi6Ll3tbEvUPTSmVnN</span><br><span class="line"></span><br><span class="line">JFMEiAXIjKMrEHLKfjYrN+IzLMczzYgC2MUxzHK5ph1HSDJyDOYFJFOYqU09Zd0I</span><br><span class="line"></span><br><span class="line">ddN23fBdzYfdvTQY9T3sc8bEvSAqw428PG8B8HSfTgQqZd8ggSJJnEG4DAwA0Cyg</span><br><span class="line"></span><br><span class="line">qbqj2g0DDwgNJSFKHQ1R4NDagACVqTsxlwAA1XB6AAfXwatmnIo4Tg485Lmueiqq</span><br><span class="line"></span><br><span class="line">YoKbVQL5PWR9iM2lbiHV4qEYQE5pkVRdFxKKqTuCK2TUHk3luSFfJMmZ6cIgXPTQ</span><br><span class="line"></span><br><span class="line">nyNINF5NJqS0jIAJ4NIrMxxj3PshynP3Fy3OlOyjXIbyzVay1mNtZLwqZAV0tih1</span><br><span class="line"></span><br><span class="line">4udaQkpSiLdb5DLbgQObUHyKdmYiGlGVDcFSpLCqHAYxMaqJurfOzZpc1cprC1a9</span><br><span class="line"></span><br><span class="line">2OpHMcbeyXr+rCQbhtG8a0C3HdVxmg8oJPBAzwvB11pvNwtrxVU9pCVB5yOz9v1/</span><br><span class="line"></span><br><span class="line">VA+WMlktLF7EwNum2Fpgluns6GlsAGLcACVsB6KAKAmdp8FIQ4FhmehcLI/YYYBO</span><br><span class="line"></span><br><span class="line">GaMR6zXlRljxcTWGcZBHjhD4334RJ4TRIxSntukh1afp5LWR4QW0gZUWyU51AyWy</span><br><span class="line"></span><br><span class="line">DQCkf18eVM30mVPbI0lhIRU0tA7OR1HqBWHloDKx8n5dWm9Namx1lFC2+tsSG0Sq</span><br><span class="line"></span><br><span class="line">g7WaVMFAIENbQ8aQhrc3SOkF24ZIzh23tVf2tUJCZn9g1YOzUixtTQHGCOXVo6x1</span><br><span class="line"></span><br><span class="line">5PHIaAYk4bhTpNaas1Dwd1zitfO14JCbSplXZ8mtCi7Q/MEGuzhsgzjUjSIyzdGw</span><br><span class="line"></span><br><span class="line">3Qgu3B6sEnqEAAF5zEwFYnwhwqQAA1SACgGAAFSGDAb6YRLgLworvM4q86Lrw1uj</span><br><span class="line"></span><br><span class="line">ay2NmG4xqAfCEhN0wnwdKTES5N0YSQdFTRJ2Jb79V5kqHkfohTrAFO/V8SlaRaWK</span><br><span class="line"></span><br><span class="line">dpdYYR1jTiMQIEBsCpbKhllqaBoDPIINVhaZogVgp4NSubGKRDHRG1dIMs2GCRlW</span><br><span class="line"></span><br><span class="line">2jmSP0cwlwi2ocOWh7V6F/B9gkoE9VA6NQ4WHdZ2JOpRxygIgawiRqrjGmI1Aqcp</span><br><span class="line"></span><br><span class="line">rpykVnRaYBlr2FWo4asiii7KI0cdcufoVzYjLtoz4c50j1wUtdcClQzHZ0em0AA4</span><br><span class="line"></span><br><span class="line">hwAAMsSNgKKZgAEEvDrGJFipxViUWgx0KMGYzxvr+KXlReGtEbgbI3gM8JGzIlAm</span><br><span class="line"></span><br><span class="line">iaqAmTDUBFWSefCmkkr7UxkiSLIEReZZHrhkf08c/SlNpN/GkGRn4iynHaUW1lOk</span><br><span class="line"></span><br><span class="line">QHAa0yBssOnNKViaHp/lsT9LRnaOKCVjbiVGdlbgBU7a0mKSst2RzgGMSTIw4+Oz</span><br><span class="line"></span><br><span class="line">WF7PYaHYsVgKyrSvF8zyWATVlhaE9YYCAYD5CEAPDkfYBy8NOZ8acs55yLnUqIia</span><br><span class="line"></span><br><span class="line">adsR7kzvNaCsj3nyLDdACNpdNH7VCKMkFp0Uj8hpJZAULJoVt2keYrubQWxtg7N2</span><br><span class="line"></span><br><span class="line">KlrLqIIxCQysJGNKoesCWy/e+ND7xOJkks+qTdGXxLlkwkJJMhKUpLSekjJmSsnf</span><br><span class="line"></span><br><span class="line">lkHmPI+QCgiEKEU3MNUGvQNqpUbS5YwINDWbpvk1Z9LCf+S14zuB3s9CQz4DJXzC</span><br><span class="line"></span><br><span class="line">m0kVEqazuEe0aR6rZ0ZOK7IdEHfMAauExjgxAE5d0pwzjnLUxcy483iILQ4ItcLG</span><br><span class="line"></span><br><span class="line">hQ04FAQ41jnD8xo2YBYuAdD7DEsy7EtYJnoFwByyg7jq0SH45Axoa5nB0maDxrFR</span><br><span class="line"></span><br><span class="line">AvDlwgGIMwTAa2kCgIQVQsnnQKfY8QYgO1sTaDMLgMaTBIxtC6L0QYIxxjTHmMsV</span><br><span class="line"></span><br><span class="line">YGxtgk1IM6MaBAhN1jaPxst5ZuMKPDV5lRdbeDqOBbWr8TbJzqTpK2x+VyW4mNhd</span><br><span class="line"></span><br><span class="line">2+FFi2ixvjYmjkUNF4jtpWvCdKCuPup3svPeeNsScu9Ty1dnH10Cs3dy4VckchKV</span><br><span class="line"></span><br><span class="line">nMKdmUqm6yodJx2pYrtJKqFM/RSiqGmcSae+sBDkVS6vaY1TVXlEHfoCr+0ZODrW</span><br><span class="line"></span><br><span class="line">oBPcBm2dpAKWVfB6bE0GyqwYiYhv2KY2HoZaoGs7Q5I54czYRhcYQHWkbuRIx5xb</span><br><span class="line"></span><br><span class="line">7qpexLUWj9GrHOEUsxqArH2P4Dq9J4T6BSI8UE7D9UTlxOmftUdysEatPybaEpqo</span><br><span class="line"></span><br><span class="line">cojrqc03JnTJB9P0sM7Rkz0JSDmYkMitFGLsW4vxYS4lpLyWUpc25jgHmkekV8x8</span><br><span class="line"></span><br><span class="line">gu3y7yCuCwCsh4vQWThvayKkmIp3GJhXdDuCKJAAE11eSB8c8Kk7iABCOgFgHCsV</span><br><span class="line"></span><br><span class="line">SUgMw1RpDgESHLASytBLHRTkrTxGVo0V/B0rVEuIxIXXErlNWyZ1fSdiTJTWb4kh</span><br><span class="line"></span><br><span class="line">FGEbkpkCi5AXH1dYQKHCcayAZMh4QpzP1Fn1EjGzNVPscnN19i3P1IJ/UVi1BsrW</span><br><span class="line"></span><br><span class="line">8fdLMw8ikWRxZAg6E7dDp3ey9ds5DvrUP7IwyWYNFZihPVGHMNgYR6ALG+vQUEoa</span><br><span class="line"></span><br><span class="line">OI8YgCm/w2HcPR2e9mt7HbrnJ0++RyAlGUsvLeX5ufhdRcl3F/a2vfzq5RY/mpeO</span><br><span class="line"></span><br><span class="line">z8DGdtMYfzujYnrxAGAMRS30rFWMOBgHaFqAQEBimGIBmDCCxU6D0Ft2pRXkdyRk</span><br><span class="line"></span><br><span class="line">Yldy3nbzYlnU4nZViSPm2QDxSSDw3UBBpgjx5Gj2KVMlnEiBFgS2T30g0AKnIQdk</span><br><span class="line"></span><br><span class="line">snUnVTzwfS1RmxfX1Smy6SNS/V6VWwry1iGWmUtirwA0mXQT1ltRAzQFnEAjJAUh</span><br><span class="line"></span><br><span class="line">DBb1dhgyw3O07yQxYSuz9Ru04TbwcFXzOWKX6gMTpFB231uXuUkR+xkSWjzn80rS</span><br><span class="line"></span><br><span class="line">UTFxv1UVQHl3dwYAi2l3RnjlyCXDtnG1blf2eXf2HzaGeHVwWHoHOCxWwHwGJCEC</span><br><span class="line"></span><br><span class="line">cWwG+gWBpB0E7CcX12cwdGhjy2CSdw9xd0nQiQwO9w5UXX91PkDwvgayIOazpkGn</span><br><span class="line"></span><br><span class="line">yA0EVSzRnHA0xF0l6xSHUgVRFFMmvRqUdltUm0VkfU4KL24LGPgT4LL0EKZVCnwW</span><br><span class="line"></span><br><span class="line">GTEOwWrxNiWNEKwU9lkPcJyHIWUOO1UNO3UJZQu2YRQ2xDQxDlu0wx4Qez4WML6l</span><br><span class="line"></span><br><span class="line">5DMIKFGTXCsK+0LQzioxznsLkUcI2h+RcPC3+TdFfClzvxUhjlqSpFhIx2KCSxVx</span><br><span class="line"></span><br><span class="line">7Q/zaE6HyEIFBnoAGB6CEG+jYGYDSERVqFBgmCGE7GeE2B4GHQwPy3HTQJRiZU8K</span><br><span class="line"></span><br><span class="line">9nQPtznQqwcCq1wOqPwNqIyUFS3UgFviaLyWZgAmXGpHjnGz63pA0GDFyGyDtEyG</span><br><span class="line"></span><br><span class="line">0jJC6PpPzwmNQygQW3YKW2NWQQWOEKmWkP/VwQrkNKkMITr0+EVRFhZExHhOKiOI</span><br><span class="line"></span><br><span class="line">MKKM2U0MuwDl739RuOdJw0e34RMOeMdleI+2sO+x+MFwrUBPPwMxiAizdEWQhJ/B</span><br><span class="line"></span><br><span class="line">0UVPkIdhf2S1CLV3QGyH13cRmAHgiCGE2FMh6E7FBisWDEwHaFGHcWJGpNZNHTpS</span><br><span class="line"></span><br><span class="line">QN+BQMnFKIbPKOwKXSFRXRqP5T5Ma2ILkmFP/EWWGPkNpCXDlR5kWQCN0QVIVOMl</span><br><span class="line"></span><br><span class="line">VOdxsnYIL1m01L1W1J4JmJVn4MjUgDNXWJEONPENNMWJPMtJ2xyjthpBjhFmWRUJ</span><br><span class="line"></span><br><span class="line">oWOLuPpM9RTC5W7x0M9L0MOXu2OT9MeNMKDIsMLRuXzQeS+KeRLWzgjIBLP2LhjI</span><br><span class="line"></span><br><span class="line">CDjLQBqU8MbSTM+CGkTztBqVGWCIzJguozSwkFqEkCHk2BgBRXoG7AQAoFID6AWG</span><br><span class="line"></span><br><span class="line">JBgCmGJFGA+DgPyMQNCSKyZKxjKKwN9xwOXWxF5TXWDwcFDyHLpmFg0AUiDEiCDB</span><br><span class="line"></span><br><span class="line">nC0lGWlK/je0WXpCGnCkfnvR3PXK4O3OmN1P3P1PNXWzWJtStLQAYIiFfCoJdTUN</span><br><span class="line"></span><br><span class="line">fJXPfNTG9S/I9MuL729KDTLBDXCOYRpCcVwAHgHh4EKNPyNGrSX3sBX0AozQIw33</span><br><span class="line"></span><br><span class="line">TxDM+Io2+LfzgsisCwPK8NBLQDeyT2Qv+R8IVO5hUh4CqXTKRL+xRIkFH3H0n2n3</span><br><span class="line"></span><br><span class="line">rJpQKObOKN4vbK90Esq0qOq25L5TSUIOvmyQj0fmj3MLj3KsT1PQUnoKpAzzKuzw</span><br><span class="line"></span><br><span class="line">fL0umIMsmKMrgRMrmNNTWxNM2yAyyh2LA35nl0yEKsdOfJ9OZNdI/Pcu0M8ocCuI</span><br><span class="line"></span><br><span class="line">OTuxOIAoeISqzSI03xoP33ArI0grSugt+2Iv+0BwY3tSKgBxYzYw41QMxy8xEwEw</span><br><span class="line"></span><br><span class="line">oE814xxBR0MDR1tGXLWixxJ1x1ahU0Jw0wIGx1Jz0yQsUyp1M1pyek121zCF1wNy</span><br><span class="line"></span><br><span class="line">NxNzNwtytxtySVcy8Hc3wBRu80Xz+PLXgqiqC1cJCzKUTNrjnAFFSA0iqp+KzM4i</span><br><span class="line"></span><br><span class="line">CpCrCsKIgDyJpNap4sZM6o4k7KEu7IFIgDEoILqOGu3TknMLku5iGKUulVUpfDe2</span><br><span class="line"></span><br><span class="line">/lFgyE0miiZAOJXPVIgU3Pm2DhL1mJWx2qKz/TPM2220OujkTxlVZCgydLdRdNcs</span><br><span class="line"></span><br><span class="line">/Puuu2uP0ITt9Peui0Sq+uSssIgpsIVtyLBuB0A1GShvBxhqhzhpxoRrhyRr5okH</span><br><span class="line"></span><br><span class="line">h01NR2hHRxhzrFJvxuUwJz+SJxJrxokF03J1VCMw8Gprp3QDIooqopopMHosYuYt</span><br><span class="line"></span><br><span class="line">YvYtVFlB5z5zruR0yrWgCwgGcIvzFvLkpAdIwtrgZDyBFgyFpHlrf0VuwHZnaAmF</span><br><span class="line"></span><br><span class="line">KGwGYCWAWB0CgFBixR4ERTmCsQGHWHV2aoQKbO1rd11vKx9x6r9z6t7J5P7JD35L</span><br><span class="line"></span><br><span class="line">DxGrkkUjyUVX5BUmMjIVDuxD6y5BUvmsDBMMiDspWrgTWt9uLx1NLyDocCPNtAso</span><br><span class="line"></span><br><span class="line">kPcIdLtUnFhPUkUL6kcpfOw2uqTruouMeu8vTu4UHzLACqBHiDtmyE2EIAmFnx3s</span><br><span class="line"></span><br><span class="line">rQXxirADiqzvRnX1zuvvzv+sLoysFpPyUajMQrVrLntVqUlp0SXAVNpCdhvszJIv</span><br><span class="line"></span><br><span class="line">QDgCsWIFqDVD6FKAHhmicQWB4EwGJB6HcB0FBk6GAbaFpLVuutbOK0ToEvnWgeEp</span><br><span class="line"></span><br><span class="line">7NEtq15MQcHIaNIPnCMjtl5Aqqk26Pyu5jkrnHkpnDITISoTYP0o1MuK1P9pocDo</span><br><span class="line"></span><br><span class="line">EODoWKYdNLqWsttn/CnBFgTKfNWV4Y0Nuq7xTt0LTr/JjHEajWF2ysUejTaD6FwG</span><br><span class="line"></span><br><span class="line">eCxTVE2ERWzFUfUfTWzs+te2nHOveILrDIMdeQcKyr3qBIPpBM/HtQOtjOKshMsh</span><br><span class="line"></span><br><span class="line">qQKH/DCyVy7Ucd7VIpmAGCxSpBmDYFKH7hnC8FBiWAyJ6DYD6FBnCYd1AcKx1pZX</span><br><span class="line"></span><br><span class="line">ifZLBF6q5LgYGvqwHPqPDzkjyDFTqWFGflZAAna09sgHwYMgUhhOfnXQZHIZaWfX</span><br><span class="line"></span><br><span class="line">WoaZ3K2rocPLCUr1WOYd0RkJtlSDnCnDUhUh4auqxjOJ9W/K8q9NEcmb8qH0+Xn2</span><br><span class="line"></span><br><span class="line">rQbEkYgB6BpEIBRXwEBixT6AFv8H7GXzTSexzr2f5BSr3wgAP1CO3sVYQt+WubcN</span><br><span class="line"></span><br><span class="line">MnQu8MhNSGKQ8KnNgkRKLq+fQHWAHk0gHnWDVFqHiFeBgGeB4EfueHcdBg3P+1y0</span><br><span class="line"></span><br><span class="line">1u4oRfAaRY7O6o5LRZEocBNrSckqQekvkgJfCDUjsqVDIVVVKS5HILIXUgTgqtMg</span><br><span class="line"></span><br><span class="line">Zemx9rqa3JZeMtoeafoc5fNIIRmTDt4ztEMjeyPVbUqZZHOrYfRn5lJdhOv0OMuo</span><br><span class="line"></span><br><span class="line">zv4YlY8tTuetuK2bw3OQAgMUl10d3wBv33SptcMaF13v3opvMZsuf0PpKsyCXFfH</span><br><span class="line"></span><br><span class="line">/HJZaB9dvqceKhpHwCsX+jCrCCmHyEwFGHyHVyGAmFwG+hMFhfQEibaoZLTbfORa</span><br><span class="line"></span><br><span class="line">gazZgfRZSb7MGrNuSYtrplSHoOeyFDvLtkTzeYpZfF6KMiFGijeyGi9bVLXNqcev</span><br><span class="line"></span><br><span class="line">qfllZa7ZyoYbNLQX7ZWIcA2yHb7eWK2OIWjnmoDExDTP6ddX/JctXdGZ/PGZeucs</span><br><span class="line"></span><br><span class="line">gCMM+B3f/HSBfcOb0eOdPdOf+POcvbMZQtQHezvcecvszwyAcaIrCPmYkG+i8EwG</span><br><span class="line"></span><br><span class="line">+imE7CmDSHiCgF/rmDgHiDgB8DSBc+g8bIK3pJib4pnQzYSZQ6SaNrzYQYLYydxY</span><br><span class="line"></span><br><span class="line">/ij0UtZCXHIT5AKbwfI55laIFkUv5GvRGIlgY9baY/bZY87aafY85bac215c6Zfk</span><br><span class="line"></span><br><span class="line">0jMgZBfdb2XfFbdPOJ72ld/MU6mb9YgEwhyAQG+jmFgIVZmarS802eNbX1NbyGnD</span><br><span class="line"></span><br><span class="line">eL+sPf0d0+P3PeUeVcPrdHNbM8wttGMkZAFDUms+Bts7gk4mkdyDkYUc4uTfhdC5</span><br><span class="line"></span><br><span class="line">KPTa6qi9RdQ5zaEgw6xfSZxZQbpmnHQf5gwWwcsgdvypFm5G0iIdjlIexomxK5qb</span><br><span class="line"></span><br><span class="line">K8gA1Aq7fSq73O2p7ZDrq94zueE8PC0m0kFCukk6cr4c6+Ga0KEZR5EYmaU8zu2c</span><br><span class="line"></span><br><span class="line">0YW5o4dK09W505s7ByB0Y0htowh1hrbPziR1E3xkR03tF7qdbsk3h5k0HvQDx0Jr</span><br><span class="line"></span><br><span class="line">7uJvwC7qHrJwprHupzMyenvvWEfuftfvfs/u/t/v/sAdXq5p5sbr431Y28jJrG28</span><br><span class="line"></span><br><span class="line">dZCzyBdYeYO/RgUkUgXGpB+tfeV19dqucYoBG7G4m8TbtxapTae46pe71szfe5i+</span><br><span class="line"></span><br><span class="line">QdzdSfi8gCkoaNfG/iMkVUrd5CDLlS/jy9hIK5J+bfGOR/VGY/R82rY7Mu4Fwd48</span><br><span class="line"></span><br><span class="line">sq2z5cPEVXpAFHlwdPa+k8Ttk5p/VDp8U63fm92cW8dgtaPatZPa5+LrMB57LrBw</span><br><span class="line"></span><br><span class="line">F+rqF+435wbvX7EwxrbpsodLl+027vx1U37tV/l4gGHs16ppp0nogAc6c5c7c486</span><br><span class="line"></span><br><span class="line">85878/wAC87Et/Xt5vX9tam4X0v3yoNpXWHvcUsuHpDaQzuquD9uq01batdWQXWD</span><br><span class="line"></span><br><span class="line">mAxroI9Pc8fN7nvWzbYcvu8DTDti3NqCkSQhHWUvIWJZ7YyW1bZotS2DC0sFcfva</span><br><span class="line"></span><br><span class="line">6t7R1RUMpitfarvXz/C49uAEdbYlHR5D7NGQ3feOr3xQEMIqe7pddv3gzoqcdmL2</span><br><span class="line"></span><br><span class="line">cfuNnZ6hkoKthZEpAAroL85C5dfnlXWhzC9N62ADfroPRoSZ26OgqAGrwV4E1e6I</span><br><span class="line"></span><br><span class="line">JE/mYPP4a81aWvCek9FqA/M/mALIFhwBBZgsIWULGFtzm5q85v+Bg3/rvX/47cuY</span><br><span class="line"></span><br><span class="line">VjH0NDydi0hSO/vD5rP0G6LNlmqzdZggK1qptkB/DJDhUQ+5YDjaqfXAb93wEQBa</span><br><span class="line"></span><br><span class="line">YieFov1iDC5ME8WXWgvlSGglMzIFCbmO6C77l8OClfVHn7Uq4sDMe7LCABx0b6QA</span><br><span class="line"></span><br><span class="line">+OboWIdOwFZP4nibXQQa9Rk5ddJWD1WnjK3p4j8byLPfZpPzW4JDdgJdRjOsDkqR</span><br><span class="line"></span><br><span class="line">Aba4QcptHSX5aDkBC+CQMhzBDi9UaVwqvtL3tSeF9+OOCQIr0sH3NrBZ/C/vYKv4</span><br><span class="line"></span><br><span class="line">682gLjNxh4y8Y+M/GATIJlABCZhM/B1vJHDUGCGVojBAA5Ln71Po6JGQtSfmNOEg</span><br><span class="line"></span><br><span class="line">HKC7O6AeIGqGwCAxSAkgYkDMFciHBiAFAKVF4AjCEBw+uwJNg2UQEZDQgEDKJOgM</span><br><span class="line"></span><br><span class="line">5Kfd8h33CSun0LYNFiQUUGcsZCdh9QnYoqOjrUN4B3kwobaIUINmKTUgp2oxChox</span><br><span class="line"></span><br><span class="line">xR7V8A6vQ7thyyKywkWiikIjINAOGHo9qvGXRFSBaL/hTIPIBSDkCiijCjqaqV7H</span><br><span class="line"></span><br><span class="line">SDjpLshBK7OYWuzGYbsfSUgmdgGXU7mFluO+BQYDSUE1VGkvkKAPrjGjEAxoXgI5</span><br><span class="line"></span><br><span class="line">tiFMDEAYxuoeMYmIoy4A7gUoHQOxhkDVAlgbAMaLxlDGRi1MWKUgA8AoDxRcAh4U</span><br><span class="line"></span><br><span class="line">sRgF1AViqxNYusalUgBwAix/XMsKWDLCCR7AEQCsHBjAA9j/AgopSOEHdBu07Q81</span><br><span class="line"></span><br><span class="line">RbiqwHFlghxI4+wGOP2GTiho04nIAUBVbmjLRiqHpmQjMiLJ8gg4hsEuLADEg9Rf</span><br><span class="line"></span><br><span class="line">obNEaPaL0sh8O43dtaNnAaR7Rg4gcPCI4iIiwhmjc6qiKwoYI2YzeRLAH3faJCZg</span><br><span class="line"></span><br><span class="line">cAUYBQF8SEABQPgH/IDHUjPAYAPAGYGkOj4rkYmyoiLq9xRYYDchsXAoT9wS5/cc</span><br><span class="line"></span><br><span class="line">O8kYpHJX3TPFSGQEqUcKD2GOo3sYpcdjHFGEqjGWheJgRtQ/SsDy8TKS8YpCihZA</span><br><span class="line"></span><br><span class="line">b0U4DpoO1U5KQCgsJMbLnxjh9NI6ZyOOHaBFZk9BmpxT0XJ164KdN2c3ICryGfaS</span><br><span class="line"></span><br><span class="line">kNhnPc7t8CjGpi4x3gDMZAGTFmT0x2nQtFmKgA5i8x44QscWMskTYoxTYtgNWIQC</span><br><span class="line"></span><br><span class="line">1j3JyYryT5L8l2SHAHY4sQPm7FD4+xYAecUawrBniBQLRJ2E+wDCTkL0c4k8fFKH</span><br><span class="line"></span><br><span class="line">yJTwBrvOytS2xr2AY4Ek/0JOStFZ5FkmUyKRI34kAQhQOQYUCJNI5FTTIFIOXK+E</span><br><span class="line"></span><br><span class="line">zwVCqQb45fB+LaBfjneR9LIBENtBX108ueYCfEOMkftQY7Qb6AgAWCkB4gfjYkNk</span><br><span class="line"></span><br><span class="line">C8BOJSgUAQCN9GYCKQ0Jj3DCWEiwmoDIGOQpPngUxa8icQ/IpLoKKL6VNjIHWJVH</span><br><span class="line"></span><br><span class="line">JKlGQYWieFIMMUjGzUg2hlDNtl0Jr7cStRNXIrAuCh6toAw/WcFFpFNEhRcuKkWP</span><br><span class="line"></span><br><span class="line">CpGnB5AYZ15QDC+KVTnUe+MwvvupIH5PUJBQgv0THADG7sNOhkxQYHzLHRjYxtkj</span><br><span class="line"></span><br><span class="line">nkmN1A2SLJIU/fA5KclogXJnYksW2I8nljKx3klsf5MbH8ygprYy1mFK7H+Azx0U</span><br><span class="line"></span><br><span class="line">2KbFVPHZS90HtaWvaQKiPkJGsstRvLIkb/gKQSsgCCrPygqth2dSdmIpQFALgAIY</span><br><span class="line"></span><br><span class="line">QKqVLKHxgzCGkMsdhKSNnwzb0uQMtijKtkLj3xZ7B3hIEMBEA5ARnPKmkjd634Pe</span><br><span class="line"></span><br><span class="line">0UOEk8Xh4EVqqINIPhACsTxB8A6uBIocEHRYoKApQUYDoGSKgxiQOgQGPtJC6HSi</span><br><span class="line"></span><br><span class="line">sx0lkjhLuGci8hcXQocROKG3wDE98QRH1CdQijPCnGMthROoHChzI0Q36WqKr5o9</span><br><span class="line"></span><br><span class="line">NRy2bUf0N/RFRhhMuOgTsXCDYMGQ/oUVh1wQx4yeuwjJYZLKFrTMQhTvKNJdwGDk</span><br><span class="line"></span><br><span class="line">V3EnYKkBQHwD6sloqae4kz3wxj9Y8sQ+QTzOtY2c+pfsg4IQEDmqYbmaAERPtzPr</span><br><span class="line"></span><br><span class="line">FI6kiqLSJ4RjlUzcR5/WoO4j6DPB5gFAHQBEAGAzh4gvcJ4LgCED5Ai5dJEuUyjL</span><br><span class="line"></span><br><span class="line">l/BshXZKohi3EpDU8hOSMhLzA8LxwCgzxYaYUzrgFQKQS4YMPtn5jARWGbEltowP</span><br><span class="line"></span><br><span class="line">+nUNWOPE+YmjD5CwzbQDo0fgwuXACC3ROM4QTdTcojN8ZQ/W4gN3OahCJGoCqYD0</span><br><span class="line"></span><br><span class="line">A4CdAeAhwdXE4jPmvIL5b1K+Voz2bUKwKIYh+TP3O7Pz0A/st+Y0A/luFKQI09GD</span><br><span class="line"></span><br><span class="line">yFfAes343rECZ83jmlAUUXgNxl+EAYUB9cmAZgMih875AsUcwfXOgqibIxMJbItk</span><br><span class="line"></span><br><span class="line">pXMwEESeRRCo2rTC/isgsl3MepJkFhKDR34R4+goBH5DxxH4osCVP3I6EajGmwMt</span><br><span class="line"></span><br><span class="line">gXXAnnN8mMaMnqJehtFqyHA2Mhnh6NEHdcpWa8vrvIvlbKK/+O8wbkMD6D64UUPQ</span><br><span class="line"></span><br><span class="line">b6KLF0WGs5Zl8k1jfNnB+975lrR+ZYp9nC1ZmSI8bH+LkKKRSqcebERGNAX7yB4h</span><br><span class="line"></span><br><span class="line">84+afPu5Mj0hMfLBQkswIcjklyfbAZdLSVvKShEeYyMQIGiPwnYbcwpWgxyDdyni</span><br><span class="line"></span><br><span class="line">i5F9vQNK4cLyuAM4eXqV4loxIgAitJNPP5aLgdYkkxee6Mp7SLqeq8xYYMt9HxVp</span><br><span class="line"></span><br><span class="line">BG+XJhTLDEgLVB4NL+W1nKoxD6VhSU4ZDm0Fr9N62QfQajQ5Vb8jBchPfrjQP6vC</span><br><span class="line"></span><br><span class="line">LBx/FXjYO+Gj1fhNNNoInOTmpz05mc7ObnPzmFzoRAQm3hAA5VWLpuOVa9nXCcW6</span><br><span class="line"></span><br><span class="line">IakrtVkNHLfZeLVWqi9RZou0UxK4O8SuPqdLwWwN0OOAoiXyMS7/d5IGQMhdegoX</span><br><span class="line"></span><br><span class="line">1szI51DubOHoVBgnm7oTEGpFYWI9VqA8zoVwox4jyQZTKZFWJL/BCL68d5ApIGCx</span><br><span class="line"></span><br><span class="line">nTDuluK5OrIvXnaSllo/GQT/AOYrd6xmyqAaDXn40qP4zRDQdDRZXnCkcVJBHMjV</span><br><span class="line"></span><br><span class="line">bWGDMayXDuqYLP5vCRVxOQVegHFXNAHB1/J6DoHAWQLoFsC+BfkEQWzQUFaC1VRv</span><br><span class="line"></span><br><span class="line">VRpUktVSi+5p/N8JOLn4F6DIBAI8VTTq18ciZVMpmVzLblUfA6S6TtWIdIuuEquS</span><br><span class="line"></span><br><span class="line">kpdVXSM+SXHmFkqdg5LSlj8HRtl1TVp4Sl/y90H1GFBVKYV6ooebUoTX1Lk13Lc8</span><br><span class="line"></span><br><span class="line">kVGnZuymYkQTSNiokU9K8VYg70YTIkXEyjFi3CqhSuPZA1T1KgnYQ3z55NrBesTb</span><br><span class="line"></span><br><span class="line">VW0DCCcqGNXanfh/FGTPCFMA6omkOpeEjq7BEq4zI4LaA+K/FtQAJeriCUhKwl0j</span><br><span class="line"></span><br><span class="line">SJdEtXWBDUajGs8OAAqg4g4AcAY4FHG4CXhoA8UKDhIDkzGxogDAQgHRX1w1L9Kt</span><br><span class="line"></span><br><span class="line">QKzdZp2CKYRAfkIYFUB0DHAo1qosrnZsrGtRHNxgczdBu4V1LjN2AezV5qc0LBGR</span><br><span class="line"></span><br><span class="line">N64uR5oc1OaXNLZI6YFuC1mBvNzm/io+uQ5RaQtxgbxvhOT4ZaktTm8CakoS2eb8</span><br><span class="line"></span><br><span class="line">txgBYJoObWr9IAQWkrVAGS3lba1pdUIASDy11anNKNGwUYFqCRpWtyW2LSIOw19K</span><br><span class="line"></span><br><span class="line">HqvWmLR4D5nNjfJYsgGiNuMATBhZE24KXxhFm2aat0W4wCilMy+R+tUi/NavMdIk</span><br><span class="line"></span><br><span class="line">A1B9M6rbAiWAEBKgVQbTYazeTq19gMIS7SAF7BAA</span><br></pre></td></tr></table></figure><p>%%</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_1.html"/>
      <url>/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_1.html</url>
      
        <content type="html"><![CDATA[<p>&#x3D;&#x3D;⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠&#x3D;&#x3D;</p><h1 id="Text-Elements"><a href="#Text-Elements" class="headerlink" title="Text Elements"></a>Text Elements</h1><p>1 ^BQpl3li2</p><p>2 ^8K8ZVtvP</p><p>面1和面2的公共边 ^TOpTy7fA</p><p>%%</p><h1 id="Drawing"><a href="#Drawing" class="headerlink" title="Drawing"></a>Drawing</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATL</span><br><span class="line"></span><br><span class="line">ZMzYBXUtiRoIACyhQ4zZAHoFWPETKUAdNjYBbGnQT4EOhByjNuAbXBhQYe9Hjj0p</span><br><span class="line"></span><br><span class="line">BNii4OAcyP77kRhZ2LjQARgAOAE5+B0DWTgA5TjFuHgAGABYeHlCAVkiAZlyYyEJ</span><br><span class="line"></span><br><span class="line">mABFDBCgEYm4AMwJmBBKIEm4IACkvAC8AR06YUOwATSLjDIAlGCE0wgArQj8HesJ</span><br><span class="line"></span><br><span class="line">8fABlWF8JSVxsSREkVuYoUjYAawQAdRIoSVSTs8uELZgd9EE1ZchzoS9JBwEMwLG</span><br><span class="line"></span><br><span class="line">g0q02HB9oRYNxQmlwTZIJ4fM5Ef4IJhuABaUKRSIaAoItIFIoANkKRUiGVaMDhBQ</span><br><span class="line"></span><br><span class="line">JAHZSQVsqEMkVchlGU9zlcAMJsfBsUgdADExOJPwgACN9hcvH8OMRBcLRRIzp5mF</span><br><span class="line"></span><br><span class="line">DXGZpRQ7g8wmlQq1JAhCACoNwCuEeUiIM1anD8mlcmTwmkoq1FcI4ABJYig1CWAC</span><br><span class="line"></span><br><span class="line">6vJeGz2pDgQJBHWY0bg0plwmVAFEjCYzMHrP5bEiHLBEB0aphrSUHO0JAAhACKcH</span><br><span class="line"></span><br><span class="line">wBSIPAghYAvkjww6hHBiLganUwoy0oyeLkGRFwtPWkQOBduBwhOtZ2xsFch6hGvh</span><br><span class="line"></span><br><span class="line">mjZ2zE7EWnB1XO4Ub5WnFgql4ZemPEOEkOCk0Ol4dTSaECq0ypUjIOGiaFoHWrdB</span><br><span class="line"></span><br><span class="line">sVyZ9Ih4AA1Pp03oGUawAGR6ZgAA0vEbYhcmlVZ1jeD4pH2Q5XGlU4+RuQ1Hgdcj</span><br><span class="line"></span><br><span class="line">I22ZxHSFdpWj+AE42DdEHEhaFYWNTjkW8D5+MxHFInCDRcmJIlclCRlckZcJQj4B</span><br><span class="line"></span><br><span class="line">06TCBkJNJHhqTJRldIKDlwgjAUhRFcVJQRFN5V9IRlVVUyNXIDhtVwXUKwdA1iHu</span><br><span class="line"></span><br><span class="line">OETTNC0rThMlvxohBnTU/S5IycIMlNB1rIDIMrG7DFaKuKMXNjYFg0dJMUzTYhM2</span><br><span class="line"></span><br><span class="line">MUxzCsQtDwxYsGLLNz81KTcIHCABpcIAC1oKgegAAU23zTt/CShxe37ADh1HcdJy</span><br><span class="line"></span><br><span class="line">iL1Z0IedF2XfBV3XUKtyAvcDwdCrSywarYnva9h2KB0r0SZJnFk0IyTSdJ8iCjFf</span><br><span class="line"></span><br><span class="line">yqYblp3YDbrq+tG2bQhW1aPDNnojo9gOI4yOeK5bk8o1eCM14/okL5mIdVjAUy7h</span><br><span class="line"></span><br><span class="line">hO47AYVU1B4WE880VaLE0FxalCSk8lKXyGkVLhDIMg0ZlNJyDlci5e1kpBhA7PVd</span><br><span class="line"></span><br><span class="line">AJXMyz12s2yTK56BHOc1z9SotBIhijFzUtaQbV0k4Qs3dkyQyS68jJGWHDiwNc36</span><br><span class="line"></span><br><span class="line">gR2bSmN2ITHLWlTGz8qzIqDdaQaByW2TRonaXp29B05wXNAlxXL21w3QCnu+zgoA</span><br><span class="line"></span><br><span class="line">2QgemcLTGQ0RT44iRP49ZlYw4AMVwHQ1kxnXICqjpQmlcgKAAFS2gvLOaOdo/V1o</span><br><span class="line"></span><br><span class="line">qoAQSILwQnQMQzCYaVAigQhVEby0W4gLPiGIC8HW0MxcGmphAw6bp+kGYYxlyCZp</span><br><span class="line"></span><br><span class="line">lmBYlghUhLWmggy/LCvVpsMrHBLDVy7vIJOGp3OGF247n1O8ICjJHhp3kg7boqe6</span><br><span class="line"></span><br><span class="line">lu3ZofzqxqLU2qdVwmsX67wGIAxIscGi7MwZeVfFDAiDE4Z1BYsINiyMwQQihOjX</span><br><span class="line"></span><br><span class="line">iWMEStFxijfGokCgSSkm6WS8lFLKQxDnGmGlWTaV0syAyUNOZmV5pbKySoVRC1LK</span><br><span class="line"></span><br><span class="line">LHURUJbg24NLXy8trRhAnMrJahQZITmnDfPWCU0BhiQUmM2sMLYOithmW2OZEoOz</span><br><span class="line"></span><br><span class="line">7E7VWI4xxuwiJESaXtpo+1QH7eaAdFqbl/s9VOZgI5RzhDkQkLIAmBJup4qAGcs7</span><br><span class="line"></span><br><span class="line">4BznXcuEgvoI0oHvaR6BYkYjlFXKe3kU55y2n3ZuHQ241FFBfbuvcm4DyHiPGBGJ</span><br><span class="line"></span><br><span class="line">x4eCnqQGeEhwKQRgnBBCyFUIYSwjhTe28OC72iUk7qYB9xH3WseM++8L4PjhLeQ6</span><br><span class="line"></span><br><span class="line">d9HwnXpGkF+z8eAZGiCBL+/4f5AX/h0EuAB5OAJcYCMnqPXUB+EYboCgUDKG8CIZ</span><br><span class="line"></span><br><span class="line">0IcClaGECExMTQQjDBSN4zYIdGjDG3kcaCTxg6AmqBsSrNCBoC6xJtYkkUS/WkqQ</span><br><span class="line"></span><br><span class="line">uQaB4CyJZ05uRkndI8o2FFOESB5pKPmCo+EEvQJqJywi9StA8gg3gM4HRy38mgGS</span><br><span class="line"></span><br><span class="line">cjNzMgUkSZhPo/jxXtrAiiJsMo/M+LolJeUCrZmKuow2EBHYPXOtSHgck7TqzElN</span><br><span class="line"></span><br><span class="line">Gavs5oLSDmgdxocvGR2cM/Q1oTM7ZzhFE/eEhABG6aEQAMSq2p4IAELdAA2ioAR0</span><br><span class="line"></span><br><span class="line">VACd8UXeJ/SID2qda6z1PqeFpKBDaQy61smlI6EYeo20AhMGKQQHJA8oCQmlNUye</span><br><span class="line"></span><br><span class="line">QI6mbicd0rwO98AJI6IG517rvWDOGfYY+G0JDV07nMgKH8dqX3mQ/OEhQVVLMZBk</span><br><span class="line"></span><br><span class="line">VtpRNnVG2SHECdUeg9FIPXOsJdmA8AABLXB0Mveg2IZRp2xJMeolSVhgOQf9Yitz</span><br><span class="line"></span><br><span class="line">BUvHudwSmbMhVXMYt8dB/xvkcRwTxHOhCHTEN+RiMF2IxIaA1giVZ0UNYvwHRAHO</span><br><span class="line"></span><br><span class="line">6kSTMIyDpPS7Dj3GTVOKbAUFcA8FwCSgW/D4MOS1NSxNEA6UQ2EsyhWUsCTpAREp</span><br><span class="line"></span><br><span class="line">dII4ChKWA06VWSzxzhGxWy2KfL9bGNg68LRWCxXpVytbKVdsOMYgVc7CkWQ5KRBk</span><br><span class="line"></span><br><span class="line">gUJWditWOJ1S4vVj0/6wJclAGs01iDTS8LNf2GJTDEE08qHTennEYnwLgU4godBZ</span><br><span class="line"></span><br><span class="line">xkLUDqbBpqJILWp0gUB66kHOBQc0uB82KYM8qTz3nfP+f0w4OATmjHqMLHmfM/F7</span><br><span class="line"></span><br><span class="line">BpELIbMAcX/AJbAPiVFxIKOjhJDR5LXY9zgCShAXAcA4BbCdtwQ80BzQmDjVI5YD</span><br><span class="line"></span><br><span class="line">BCAIAoDWXheVyUQDFPUPr/XmvYBEK5f0NQdBbHxQIwliGUMocG8Noqo3jAdf5mSq</span><br><span class="line"></span><br><span class="line">bFKhEuRETECAQ2vOLbG2nPdV6bmkR23tkbY2Jsnslqgc9kALsHeMNd1KV7UHzf22</span><br><span class="line"></span><br><span class="line">YJbOhJhfO0agTiu2FtfbG4cp9gLzvA6gN9tO6cLURKtTYIHn3oeHbDt4k1ZJIco+</span><br><span class="line"></span><br><span class="line">+wktNcaEAJo+5d57xtuOiuynx7HJPxseHc8FtgPmEB+bM9Tp7Oh0xBa84z0LHQXL</span><br><span class="line"></span><br><span class="line">eeJ+zpCU8XIva4+lf7lOYzNcVCQDHrOkfaDVB1Ag1Qag1d6jWiAeFgQa5AO2IAA=</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>%%</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_2.html"/>
      <url>/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_2.html</url>
      
        <content type="html"><![CDATA[<p>&#x3D;&#x3D;⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠&#x3D;&#x3D;</p><h1 id="Text-Elements"><a href="#Text-Elements" class="headerlink" title="Text Elements"></a>Text Elements</h1><p>3 ^py31ZggK</p><p>面3和面4的公共边 ^4TyhXrNi</p><p>4 ^zYCMjgYJ</p><p>%%</p><h1 id="Drawing"><a href="#Drawing" class="headerlink" title="Drawing"></a>Drawing</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATL</span><br><span class="line"></span><br><span class="line">ZMzYBXUtiRoIACyhQ4zZAHoFWPETKUAdNjYBbGnQT4EOhByjNuAbXBhQYe9Hjj0p</span><br><span class="line"></span><br><span class="line">BNii4OAcyP77kRhZ2LjQARgBOPhsAplZOADlOMW4eAAZQgFYAdgzUnND+B0JmABF</span><br><span class="line"></span><br><span class="line">DBCgEYm4AMwJmBELIEm4IAAkAQS8AfUI2rIBxAGEAGRrMAFUAawAFQgBmbAnCADE</span><br><span class="line"></span><br><span class="line">/BxrCfHwAZVhfCUlcbEkRJCaIZihSNimEAHUSKEkUi6ubu72YA/RBNXXIDchF5JB</span><br><span class="line"></span><br><span class="line">wEMwLGhUhc2HBjoRYNxQqlodEIJ4fM5Uf4IJhuABaULzAAsGiyKNSPCyxIAbBkAB</span><br><span class="line"></span><br><span class="line">xpeYXGAE0L0+kaebhHlZek0+ZZGnhDLMtHvW4IIZsfBsUitADEFIpAIgACNjlMvE</span><br><span class="line"></span><br><span class="line">COMRpbL5RJrp5mHDXGZVRQni8wukLpIEIQQVAkQK3ggqtx6ST5vTssSLtrhHAAJL</span><br><span class="line"></span><br><span class="line">ESGoSwAXTe10lOyOpDgYIhrWYibgqrVwl1AFEjCYzBHrP5bNEitUJHAYPNQgAtLx</span><br><span class="line"></span><br><span class="line">eADSAIcsEQrUqmBd5YAvtEY2ihHBiLhKpXUKFyVkeKLIijchciBwptwOEJtku2Ng</span><br><span class="line"></span><br><span class="line">7hO6vgGjZe4U7G2nK1XO4Mb4LoE4iFeETb7FgokOMk0PTwvTiYyeDwaQuYoyiMcd</span><br><span class="line"></span><br><span class="line">anqRo0RaCQahmcIKCgCg6wADTVSQQwARQALzaY4AFkhmJUhUlVTZti+H4pGOU5XF</span><br><span class="line"></span><br><span class="line">VCU7keYhnlecU40+fZnEuGUWguIEQRTCNsQcWF4URW0hMga8sQuPE0HxeZ5g0cIK</span><br><span class="line"></span><br><span class="line">R4YliVCYlUhpWcWTZDkNBpZUaWReYMkybTYw+KUZTlRVlRRLNNSDIRdX1WyjXIDh</span><br><span class="line"></span><br><span class="line">TVwc0XQuK0mJtSc7TRB0nWkJEQpxBpPTCIlzIyRKAzRZzQ3DKxB2itiEATHzk3BC</span><br><span class="line"></span><br><span class="line">NLgzLMc2IfNjFMcwMouYdRzAsJhWJKkBWUngFKXQgVzXDd8C3HdYtQfdD3sY8bFP</span><br><span class="line"></span><br><span class="line">SB204rs/LRO9giRPlnyCBIkmcCIaT5cImq/IDSnKerBogoCJwgatawbZtSK2XYON</span><br><span class="line"></span><br><span class="line">aI4TjOOjssY5i0CiLKrIozi/h4tE+NBAruAkiAROwBFWXEi4pKBmS2R4cIyRU6k6</span><br><span class="line"></span><br><span class="line">UZVIxRxCHUEJb0uR5cI+QFIURXRhx6Osg07Psxyd2c1ybMNdBjS8s1Ksta1uHCAp</span><br><span class="line"></span><br><span class="line">QsdZ0kVFd0BqSqlKQyZKcVSsNi0y0nstypMBLTYqLmzFyyoLSqpZqkcxwGqc8lnb</span><br><span class="line"></span><br><span class="line">k0lSRc0WXVc0HXTdTe3XdwIPSCcRqTgoB2QgsLWnhQi5BSfd932LidswVlwHQtkx</span><br><span class="line"></span><br><span class="line">rmcWm1p5lVcgKAAFSwF0JBj5XcAaZc1ryC5po6IgvAfCAxDMJhVUCKBCFUPOnUL0</span><br><span class="line"></span><br><span class="line">PiGIG80W0MxcE6pgw1aToej6QZRnGaY5kWZY1hhUgnU6ghE+7aOICPE80Umzsk7L</span><br><span class="line"></span><br><span class="line">l9OCRX0lvvN8P1QUXiXCQUskWqC9tAgahoditWmJeOYEkZDSHiQgrvI27Dmox7LM</span><br><span class="line"></span><br><span class="line">lF6gvemXPrfr8bi1ReLCH4oDKEMI4RgzEsFYG0NIFolkljUIdIND0gpOyWsxtaQc</span><br><span class="line"></span><br><span class="line">l0mgUyiMUShH/HkNGJCMhfzuG5BmEAlRUzTjTHUep6adk8t5XybNArcHmFFBwYVe</span><br><span class="line"></span><br><span class="line">ZoDMgLCcERiQKSyNyEkgYgRpU1qxT6GYFYSHTHlEqqtyqFiqmgaMWs6q60as1bkG</span><br><span class="line"></span><br><span class="line">0NIdS6hbHqfVbZoAvgHZ2rt3Y8MAmiQOUBg6h3wOHHOy8JCACN0+YgAYlV8cSQAI</span><br><span class="line"></span><br><span class="line">W6ABtFQAjoqAE742OlAp7J3QP4oJoTIkxLThnNuPD6TeO7NXAurQjA1BmjiculcC</span><br><span class="line"></span><br><span class="line">B5MLlAWEqpm4eDbqQDuFirY4jlOPDgk8fGJMCcE8J0TZ4jXnpHc8EhLweG8I3Epq</span><br><span class="line"></span><br><span class="line">8HyzkobNKZ281pTnpMidSWRdogQqOfI6UETo0gAPIDGYPgXAGQpgTAmG0YgOgmzE</span><br><span class="line"></span><br><span class="line">noN0AYIxcAAEcX43W+Jxe6NFzgKO/uzN6VCcqAK4v8UBwIAapkQS06B4NIrwPGdJ</span><br><span class="line"></span><br><span class="line">JBBIFLoIiFpUyZkME8A5GLBwmN8T0iyBoIkv5GSimyFpdSAKaGU2VNTLUzDqUeRN</span><br><span class="line"></span><br><span class="line">CzC0/k/nBQjvwnmEUwhChEUiKkgpOaaWceLWRktqo/M+EoiBvwlZohVnmdWRYrDl</span><br><span class="line"></span><br><span class="line">nGlfCQWEACaQw8IACsvBaoAFKtgmsMxmy8+wDj0TrUR04Dbzi0tk02nVzaoEtr1a</span><br><span class="line"></span><br><span class="line">2/U9wQTnmNBe5roDL03vNMIfoQ0rXfM4LFPJuQmXWftLZ9tjqtG1bqg1xrXlfTuh</span><br><span class="line"></span><br><span class="line">/WiAKf4sQ+vGIFP0QF/TAeCwSUDRLhxRFDeFMNEVySxSi5SApErskpNi/BWNGREp</span><br><span class="line"></span><br><span class="line">JByA25KaSUqleTdy6B6G0sYfS0qjLGbsJZcUhwAVXqoE5vablCTUGitJh6Cc4jaz</span><br><span class="line"></span><br><span class="line">733sDCW6UdHSwELLGVEK5VqOVqVTRGtJU4lqraha+s5xGxpM6nEZturNIcLKb1ds</span><br><span class="line"></span><br><span class="line">Gh2LMA4tatYNCpBxZAVx7iw5IhyQkiAxJYkJ06WhxyGSwRIlQShiprRi6VHlEtCu</span><br><span class="line"></span><br><span class="line">Vd861xIA3b5OJamtzBA03ZByjknLORcq5Ny7kPOeaqVpXgJ74HidffpYBRr2HGo4</span><br><span class="line"></span><br><span class="line">DsEhM4r2Wg+UWEaOALPw+kXIfplIJrPj65NOzOzxGQgANQQEZnYuYah7MkF4LCTZ</span><br><span class="line"></span><br><span class="line">uj4A4PMGo9B0MB2utm9+D081joLWgODlxZYluAbHCtyjUDA1BjCyGaIEHhdhnJYl</span><br><span class="line"></span><br><span class="line">Bl5gATapkPIGDIg9vxZych/5azsmJNkI+VLWESAVNgSIuAeC4DpbTFhFMmXMx8qz</span><br><span class="line"></span><br><span class="line">Nl3DxIaFyKLXhopktor/pAARPK4vin3dwIUG0/RH1/Q4M98ii3SrymFoq96FWPuV</span><br><span class="line"></span><br><span class="line">doyMl6IBvoOqgraRisgaX5i68x7rLFeusYdPTWUfJQAAEKdWIJ1LwAHPU4lMMQB7</span><br><span class="line"></span><br><span class="line">upnuvaXOnKA0odChxkFUGYbBOoJI9bGW7HRSA3AoA6XAE4odog+7D+HiPkfnZxHA</span><br><span class="line"></span><br><span class="line">cHKqdHlhLKWCS9hUjlkvWAIn/hkSpA6zg7rCk0gCn66T8nA4/WSYDTJ9AcnlPcGM</span><br><span class="line"></span><br><span class="line">sp1TYRBSmTIQybTmzdNgf07Jo1WqmwACVQhHPmKQDoUwMiECGDwOsxBMCiCzUCz5</span><br><span class="line"></span><br><span class="line">n8fPsv82TDzQCQXlrBWFiL0LYE0/rZiRtOJkHyVJCQw7kRjI5GpBkcIWX9IznEdp</span><br><span class="line"></span><br><span class="line">WsG1/wB5Kw1ydFXqvVdqwy0rC7mXNdZWiVdQVCXIlFoK7Ihkac8AQISWZOJBvbvS</span><br><span class="line"></span><br><span class="line">OgzmM46TZH/J7c3o20A0hb4lAPJsxXBglRegFct8q3uW0mdRSqKr482za3bhihSC</span><br><span class="line"></span><br><span class="line">iOyTSA/6mlvaAzbJN0ubukHu49n7i+Lgfa+097wv3Tb/cB8D8cYOIdH/X1AdHbAE</span><br><span class="line"></span><br><span class="line">cICR1fhwaO4d38x0/yAuOIfFkJ+WMAJP/9ycmhKc/98Rs8cE88hR0gUQi8S9gCwB</span><br><span class="line"></span><br><span class="line">kQvYvwpwAJEoZx/wNI2d/AowOcywhlucIBec5kFMUh/M5pI0d4SFwg6RetTET4Nk</span><br><span class="line"></span><br><span class="line">DpbEZd0AsIMgeBMAMJcAagOAjMOBhQVg2BmBwgYAKBcwdgWw3NX53kc0vM6N/5fk</span><br><span class="line"></span><br><span class="line">2tUBzdAtpCVFgtQVwFb17ca1YVncfhgZ3dEoNBfxUgRRDs0ZvxvR+sIA8V+QYNCt</span><br><span class="line"></span><br><span class="line">EDjIsU0trCyZ506E48qsasZ06t3CmYOEWsM92VgZy8kQEZBQ/Q2D8ZeESRchXCm9</span><br><span class="line"></span><br><span class="line">Jx5gR0vw/xrDZsX15CFt5ZZVB9MwH0NF1s5sHAdsDF9tp9DtCs59CDXUP9CCV8pd</span><br><span class="line"></span><br><span class="line">L4r1bt99t8ztANIA98t9D8d9j8rhT8ERz88dIdscZYYdX979H8ej3tdRb8Jisd2j</span><br><span class="line"></span><br><span class="line">Tohif9SwqdSd4CydSwKdVj/94CIguQ+REp4ZJE0ZCtKQsD7AcCBl/V8DOIiDJkSC</span><br><span class="line"></span><br><span class="line">w1BdVoBVhQR195kQJdGDtkcRoJ0A6wnlMBcApgjNUg9UjM9kFcBgyg9U2hwh8A9V</span><br><span class="line"></span><br><span class="line">iAXtJC3lKJjdvN5sHgzde8gtrccR/o7dq0YFa04UXdIUHBDCMh+0pwfc8hNJyQki</span><br><span class="line"></span><br><span class="line">ssW8DJW9fwWo+RjZXDsp3DytKsE8fCk8Y9oBF009l1IBM8wiyQqRDtkZqDMg+Qqj</span><br><span class="line"></span><br><span class="line">QiySBAEj2Svx1JeEZEu9z1x8x0+8ltVEh98iR8tEijIASjREp9CZyQCMTs3UUc/1</span><br><span class="line"></span><br><span class="line">6jQNGiAtmiuiXspjn9dQWjui2il958T9dAz9QchjairgxiMcH95i/SMAZjxj38PT</span><br><span class="line"></span><br><span class="line">P8ljVUVi/8ACNjsDgDti9iZwj4pxaRZTshvR1jziwBLjxNwBMp0Q4A4A9gdZuBTx</span><br><span class="line"></span><br><span class="line">oAHQTAClwpl0GBCAEAKA7snIBSJ06EagBzBz1gi4RBfIQxKgdA9grJuTPC+SbARy</span><br><span class="line"></span><br><span class="line">4dKpxzjBuymE51k8hTU9OFCgFyxyJyVh3Mjdc05DdylyJypyFC10cVTyzBlzJyVD</span><br><span class="line"></span><br><span class="line">KJS1hzsBRyzzjAFdQtZUhIbyoA7y9kHdiSdyXzFzbz9znZENPFkN5zgK9zjABCIM</span><br><span class="line"></span><br><span class="line">3Zo1vyYK3ydB4kiNZMEAilnzXzQLjALysj+9CoDS8joLcLfzzyPAN9Zj4zfSgLyK</span><br><span class="line"></span><br><span class="line">7zcxYyIzJj0AfJ4ccKQKKLjARg24fICKcob1iL5UZsx5iBIMn8i56YZgCAKhKh6z</span><br><span class="line"></span><br><span class="line">+xxN+AIAyJwQFKQBewgA</span><br></pre></td></tr></table></figure><p>%%</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_3.html"/>
      <url>/images/%E5%85%AC%E8%80%83%E9%A2%98%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/2.%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86_1.6.2_3.html</url>
      
        <content type="html"><![CDATA[<p>&#x3D;&#x3D;⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠&#x3D;&#x3D;</p><h1 id="Text-Elements"><a href="#Text-Elements" class="headerlink" title="Text Elements"></a>Text Elements</h1><p>%%</p><h1 id="Drawing"><a href="#Drawing" class="headerlink" title="Drawing"></a>Drawing</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATL</span><br><span class="line"></span><br><span class="line">ZMzYBXUtiRoIACyhQ4zZAHoFWPETKUAdNjYBbGnQT4EOhByjNuAbQC6/CLjhwAyl</span><br><span class="line"></span><br><span class="line">FxRxqUGEhRJxjxBEAObS+t4MhAgUAEK42ADWQaTCHMQAwmz4bKTcEADEAGZFxWGQ</span><br><span class="line"></span><br><span class="line">2CKkplAAku46LsnxCBlZORJ52ACcPLg9pRDlpJVmtcaxCUkp6ZnZuVDkHMxwuMNQ</span><br><span class="line"></span><br><span class="line">/YOrozoAYoT4+C4wRrmScZIiSPxlFVVbDWxNAOokvtwALFcDNyN1902HxwkgjU62</span><br><span class="line"></span><br><span class="line">+NTqACVhCEOAhmBY0AAGT4bW51ADyy2whFg3AAjIjkeBrkM0cZtpwoNtcDo9jB8S</span><br><span class="line"></span><br><span class="line">iwVsKWYnIQAF4eADMADZGaSfsYACpYKAAQWCXAkRgKa35m1+8weCCcp1IcFh8Nyz</span><br><span class="line"></span><br><span class="line">DVcFBAvBxhcK3FQzYFD8uGI3A4Qn28rJOgAoqkxWaLQgrbkVskqA7BToADKEWErP</span><br><span class="line"></span><br><span class="line">4q3WahHoHUrPWfJIkNmcm12/AomakAAKBAQMg8wAAvuBC3YCns4dwiyBC0A=</span><br></pre></td></tr></table></figure><p>%%</p>]]></content>
      
    </entry>
    
    
  
</search>
